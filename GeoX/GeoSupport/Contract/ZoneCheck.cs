#region WSCF
//------------------------------------------------------------------------------
// <autogenerated code>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated code>
//------------------------------------------------------------------------------
// File time 28-12-11 02:35 PM
//
// This source code was auto-generated by WsContractFirst, Version=0.7.6319.1
#endregion


namespace GeoSupport.ClientProxy
{
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="MapServerBinding", Namespace="http://www.esri.com/schemas/ArcGIS/10.0")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(MapServerForceDeriveFromAnyType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Patch))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(MapTableInfo))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Element))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(PropertySetProperty[]))]
    public partial class ZoneCheck_MapServer : System.Web.Services.Protocols.SoapHttpClientProtocol//, IZoneCheck_MapServer
    {
        
        private System.Threading.SendOrPostCallback GetDocumentInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTileImageInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryFeatureData2OperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryAttachmentInfosOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCacheControlInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDefaultLayerDrawingDescriptionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryAttachmentDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSQLSyntaxInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExportScaleBarOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVirtualCacheDirectoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryRowCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSupportedImageReturnTypesOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryFeatureIDsOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryHTMLPopupsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCacheStorageInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback ToMapPointsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMapNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTileCacheInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryRelatedRecordsOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryFeatureDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryHyperlinksOperationCompleted;
        
        private System.Threading.SendOrPostCallback HasLayerCacheOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryFeatureIDs2OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLayerTileOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetServiceConfigurationInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryFeatureCount2OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCacheDescriptionInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback IdentifyOperationCompleted;
        
        private System.Threading.SendOrPostCallback ComputeDistanceOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDefaultMapNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsFixedScaleMapOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLegendInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMapCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback HasSingleFusedMapCacheOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMapTileOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetServerInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMapTableSubtypeInfosOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryFeatureCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryRasterValueOperationCompleted;
        
        private System.Threading.SendOrPostCallback FromMapPointsOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryRowIDsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCacheNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback ComputeScaleOperationCompleted;
        
        private System.Threading.SendOrPostCallback FindOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExportMapImageOperationCompleted;
        
        /// <remarks/>
        public ZoneCheck_MapServer()
        {
            string urlSetting = System.Configuration.ConfigurationManager.AppSettings["ZoneCheck_MapServer.ServiceEndpointURL"];
            if (((urlSetting != null) 
                        && (urlSetting != "")))
            {
                this.Url = urlSetting;
            }
            else
            {
                this.Url = "http://dvapp17/ArcGIS/services/DataService/ZoneCheck/MapServer";
            }
        }
        
        /// <remarks/>
        public event GetDocumentInfoCompletedEventHandler GetDocumentInfoCompleted;
        
        /// <remarks/>
        public event GetTileImageInfoCompletedEventHandler GetTileImageInfoCompleted;
        
        /// <remarks/>
        public event QueryFeatureData2CompletedEventHandler QueryFeatureData2Completed;
        
        /// <remarks/>
        public event QueryAttachmentInfosCompletedEventHandler QueryAttachmentInfosCompleted;
        
        /// <remarks/>
        public event GetCacheControlInfoCompletedEventHandler GetCacheControlInfoCompleted;
        
        /// <remarks/>
        public event GetDefaultLayerDrawingDescriptionsCompletedEventHandler GetDefaultLayerDrawingDescriptionsCompleted;
        
        /// <remarks/>
        public event QueryAttachmentDataCompletedEventHandler QueryAttachmentDataCompleted;
        
        /// <remarks/>
        public event GetSQLSyntaxInfoCompletedEventHandler GetSQLSyntaxInfoCompleted;
        
        /// <remarks/>
        public event ExportScaleBarCompletedEventHandler ExportScaleBarCompleted;
        
        /// <remarks/>
        public event GetVirtualCacheDirectoryCompletedEventHandler GetVirtualCacheDirectoryCompleted;
        
        /// <remarks/>
        public event QueryRowCountCompletedEventHandler QueryRowCountCompleted;
        
        /// <remarks/>
        public event GetSupportedImageReturnTypesCompletedEventHandler GetSupportedImageReturnTypesCompleted;
        
        /// <remarks/>
        public event QueryFeatureIDsCompletedEventHandler QueryFeatureIDsCompleted;
        
        /// <remarks/>
        public event QueryDataCompletedEventHandler QueryDataCompleted;
        
        /// <remarks/>
        public event QueryHTMLPopupsCompletedEventHandler QueryHTMLPopupsCompleted;
        
        /// <remarks/>
        public event GetCacheStorageInfoCompletedEventHandler GetCacheStorageInfoCompleted;
        
        /// <remarks/>
        public event ToMapPointsCompletedEventHandler ToMapPointsCompleted;
        
        /// <remarks/>
        public event GetMapNameCompletedEventHandler GetMapNameCompleted;
        
        /// <remarks/>
        public event GetTileCacheInfoCompletedEventHandler GetTileCacheInfoCompleted;
        
        /// <remarks/>
        public event QueryRelatedRecordsCompletedEventHandler QueryRelatedRecordsCompleted;
        
        /// <remarks/>
        public event QueryFeatureDataCompletedEventHandler QueryFeatureDataCompleted;
        
        /// <remarks/>
        public event QueryHyperlinksCompletedEventHandler QueryHyperlinksCompleted;
        
        /// <remarks/>
        public event HasLayerCacheCompletedEventHandler HasLayerCacheCompleted;
        
        /// <remarks/>
        public event QueryFeatureIDs2CompletedEventHandler QueryFeatureIDs2Completed;
        
        /// <remarks/>
        public event GetLayerTileCompletedEventHandler GetLayerTileCompleted;
        
        /// <remarks/>
        public event GetServiceConfigurationInfoCompletedEventHandler GetServiceConfigurationInfoCompleted;
        
        /// <remarks/>
        public event QueryFeatureCount2CompletedEventHandler QueryFeatureCount2Completed;
        
        /// <remarks/>
        public event GetCacheDescriptionInfoCompletedEventHandler GetCacheDescriptionInfoCompleted;
        
        /// <remarks/>
        public event IdentifyCompletedEventHandler IdentifyCompleted;
        
        /// <remarks/>
        public event ComputeDistanceCompletedEventHandler ComputeDistanceCompleted;
        
        /// <remarks/>
        public event GetDefaultMapNameCompletedEventHandler GetDefaultMapNameCompleted;
        
        /// <remarks/>
        public event IsFixedScaleMapCompletedEventHandler IsFixedScaleMapCompleted;
        
        /// <remarks/>
        public event GetLegendInfoCompletedEventHandler GetLegendInfoCompleted;
        
        /// <remarks/>
        public event GetMapCountCompletedEventHandler GetMapCountCompleted;
        
        /// <remarks/>
        public event HasSingleFusedMapCacheCompletedEventHandler HasSingleFusedMapCacheCompleted;
        
        /// <remarks/>
        public event GetMapTileCompletedEventHandler GetMapTileCompleted;
        
        /// <remarks/>
        public event GetServerInfoCompletedEventHandler GetServerInfoCompleted;
        
        /// <remarks/>
        public event GetMapTableSubtypeInfosCompletedEventHandler GetMapTableSubtypeInfosCompleted;
        
        /// <remarks/>
        public event QueryFeatureCountCompletedEventHandler QueryFeatureCountCompleted;
        
        /// <remarks/>
        public event QueryRasterValueCompletedEventHandler QueryRasterValueCompleted;
        
        /// <remarks/>
        public event FromMapPointsCompletedEventHandler FromMapPointsCompleted;
        
        /// <remarks/>
        public event QueryRowIDsCompletedEventHandler QueryRowIDsCompleted;
        
        /// <remarks/>
        public event GetCacheNameCompletedEventHandler GetCacheNameCompleted;
        
        /// <remarks/>
        public event ComputeScaleCompletedEventHandler ComputeScaleCompleted;
        
        /// <remarks/>
        public event FindCompletedEventHandler FindCompleted;
        
        /// <remarks/>
        public event ExportMapImageCompletedEventHandler ExportMapImageCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.esri.com/schemas/ArcGIS/10.0", ResponseNamespace="http://www.esri.com/schemas/ArcGIS/10.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Result", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public PropertySet GetDocumentInfo()
        {
            object[] results = this.Invoke("GetDocumentInfo", new object[0]);
            return ((PropertySet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDocumentInfoAsync()
        {
            this.GetDocumentInfoAsync(null);
        }
        
        /// <remarks/>
        public void GetDocumentInfoAsync(object userState)
        {
            if ((this.GetDocumentInfoOperationCompleted == null))
            {
                this.GetDocumentInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDocumentInfoOperationCompleted);
            }
            this.InvokeAsync("GetDocumentInfo", new object[0], this.GetDocumentInfoOperationCompleted, userState);
        }
        
        private void OnGetDocumentInfoOperationCompleted(object arg)
        {
            if ((this.GetDocumentInfoCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDocumentInfoCompleted(this, new GetDocumentInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.esri.com/schemas/ArcGIS/10.0", ResponseNamespace="http://www.esri.com/schemas/ArcGIS/10.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Result", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public TileImageInfo GetTileImageInfo([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, ElementName="MapName")] string MapName)
        {
            object[] results = this.Invoke("GetTileImageInfo", new object[] {
                        MapName});
            return ((TileImageInfo)(results[0]));
        }
        
        /// <remarks/>
        public void GetTileImageInfoAsync(string mapName)
        {
            this.GetTileImageInfoAsync(mapName, null);
        }
        
        /// <remarks/>
        public void GetTileImageInfoAsync(string mapName, object userState)
        {
            if ((this.GetTileImageInfoOperationCompleted == null))
            {
                this.GetTileImageInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTileImageInfoOperationCompleted);
            }
            this.InvokeAsync("GetTileImageInfo", new object[] {
                        mapName}, this.GetTileImageInfoOperationCompleted, userState);
        }
        
        private void OnGetTileImageInfoOperationCompleted(object arg)
        {
            if ((this.GetTileImageInfoCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTileImageInfoCompleted(this, new GetTileImageInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.esri.com/schemas/ArcGIS/10.0", ResponseNamespace="http://www.esri.com/schemas/ArcGIS/10.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Result", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public QueryResult QueryFeatureData2([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, ElementName="MapName")] string MapName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, ElementName="LayerDescription")] LayerDescription LayerDescription, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, ElementName="QueryFilter")] QueryFilter QueryFilter, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, ElementName="QueryResultOptions")] QueryResultOptions QueryResultOptions)
        {
            object[] results = this.Invoke("QueryFeatureData2", new object[] {
                        MapName,
                        LayerDescription,
                        QueryFilter,
                        QueryResultOptions});
            return ((QueryResult)(results[0]));
        }
        
        /// <remarks/>
        public void QueryFeatureData2Async(string mapName, LayerDescription layerDescription, QueryFilter queryFilter, QueryResultOptions queryResultOptions)
        {
            this.QueryFeatureData2Async(mapName, layerDescription, queryFilter, queryResultOptions, null);
        }
        
        /// <remarks/>
        public void QueryFeatureData2Async(string mapName, LayerDescription layerDescription, QueryFilter queryFilter, QueryResultOptions queryResultOptions, object userState)
        {
            if ((this.QueryFeatureData2OperationCompleted == null))
            {
                this.QueryFeatureData2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryFeatureData2OperationCompleted);
            }
            this.InvokeAsync("QueryFeatureData2", new object[] {
                        mapName,
                        layerDescription,
                        queryFilter,
                        queryResultOptions}, this.QueryFeatureData2OperationCompleted, userState);
        }
        
        private void OnQueryFeatureData2OperationCompleted(object arg)
        {
            if ((this.QueryFeatureData2Completed != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryFeatureData2Completed(this, new QueryFeatureData2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.esri.com/schemas/ArcGIS/10.0", ResponseNamespace="http://www.esri.com/schemas/ArcGIS/10.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("Result", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public AttachmentInfo[] QueryAttachmentInfos([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, ElementName="MapName")] string MapName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, ElementName="TableID")] int TableID, [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, ElementName="RowIDs")] [System.Xml.Serialization.XmlArrayItemAttribute("Int", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)] int[] RowIDs)
        {
            object[] results = this.Invoke("QueryAttachmentInfos", new object[] {
                        MapName,
                        TableID,
                        RowIDs});
            return ((AttachmentInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void QueryAttachmentInfosAsync(string mapName, int tableID, int[] rowIDs)
        {
            this.QueryAttachmentInfosAsync(mapName, tableID, rowIDs, null);
        }
        
        /// <remarks/>
        public void QueryAttachmentInfosAsync(string mapName, int tableID, int[] rowIDs, object userState)
        {
            if ((this.QueryAttachmentInfosOperationCompleted == null))
            {
                this.QueryAttachmentInfosOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryAttachmentInfosOperationCompleted);
            }
            this.InvokeAsync("QueryAttachmentInfos", new object[] {
                        mapName,
                        tableID,
                        rowIDs}, this.QueryAttachmentInfosOperationCompleted, userState);
        }
        
        private void OnQueryAttachmentInfosOperationCompleted(object arg)
        {
            if ((this.QueryAttachmentInfosCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryAttachmentInfosCompleted(this, new QueryAttachmentInfosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.esri.com/schemas/ArcGIS/10.0", ResponseNamespace="http://www.esri.com/schemas/ArcGIS/10.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Result", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public CacheControlInfo GetCacheControlInfo([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, ElementName="MapName")] string MapName)
        {
            object[] results = this.Invoke("GetCacheControlInfo", new object[] {
                        MapName});
            return ((CacheControlInfo)(results[0]));
        }
        
        /// <remarks/>
        public void GetCacheControlInfoAsync(string mapName)
        {
            this.GetCacheControlInfoAsync(mapName, null);
        }
        
        /// <remarks/>
        public void GetCacheControlInfoAsync(string mapName, object userState)
        {
            if ((this.GetCacheControlInfoOperationCompleted == null))
            {
                this.GetCacheControlInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCacheControlInfoOperationCompleted);
            }
            this.InvokeAsync("GetCacheControlInfo", new object[] {
                        mapName}, this.GetCacheControlInfoOperationCompleted, userState);
        }
        
        private void OnGetCacheControlInfoOperationCompleted(object arg)
        {
            if ((this.GetCacheControlInfoCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCacheControlInfoCompleted(this, new GetCacheControlInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.esri.com/schemas/ArcGIS/10.0", ResponseNamespace="http://www.esri.com/schemas/ArcGIS/10.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("Result", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public LayerDrawingDescription[] GetDefaultLayerDrawingDescriptions([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, ElementName="MapName")] string MapName, [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, ElementName="LayerIDs")] [System.Xml.Serialization.XmlArrayItemAttribute("Int", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)] int[] LayerIDs, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, ElementName="SymbolOutputOptions")] ServerSymbolOutputOptions SymbolOutputOptions)
        {
            object[] results = this.Invoke("GetDefaultLayerDrawingDescriptions", new object[] {
                        MapName,
                        LayerIDs,
                        SymbolOutputOptions});
            return ((LayerDrawingDescription[])(results[0]));
        }
        
        /// <remarks/>
        public void GetDefaultLayerDrawingDescriptionsAsync(string mapName, int[] layerIDs, ServerSymbolOutputOptions symbolOutputOptions)
        {
            this.GetDefaultLayerDrawingDescriptionsAsync(mapName, layerIDs, symbolOutputOptions, null);
        }
        
        /// <remarks/>
        public void GetDefaultLayerDrawingDescriptionsAsync(string mapName, int[] layerIDs, ServerSymbolOutputOptions symbolOutputOptions, object userState)
        {
            if ((this.GetDefaultLayerDrawingDescriptionsOperationCompleted == null))
            {
                this.GetDefaultLayerDrawingDescriptionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDefaultLayerDrawingDescriptionsOperationCompleted);
            }
            this.InvokeAsync("GetDefaultLayerDrawingDescriptions", new object[] {
                        mapName,
                        layerIDs,
                        symbolOutputOptions}, this.GetDefaultLayerDrawingDescriptionsOperationCompleted, userState);
        }
        
        private void OnGetDefaultLayerDrawingDescriptionsOperationCompleted(object arg)
        {
            if ((this.GetDefaultLayerDrawingDescriptionsCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDefaultLayerDrawingDescriptionsCompleted(this, new GetDefaultLayerDrawingDescriptionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.esri.com/schemas/ArcGIS/10.0", ResponseNamespace="http://www.esri.com/schemas/ArcGIS/10.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("Result", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public AttachmentData[] QueryAttachmentData([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, ElementName="MapName")] string MapName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, ElementName="TableID")] int TableID, [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, ElementName="AttachmentIDs")] [System.Xml.Serialization.XmlArrayItemAttribute("Int", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)] int[] AttachmentIDs, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, ElementName="TransportType")] esriTransportType TransportType)
        {
            object[] results = this.Invoke("QueryAttachmentData", new object[] {
                        MapName,
                        TableID,
                        AttachmentIDs,
                        TransportType});
            return ((AttachmentData[])(results[0]));
        }
        
        /// <remarks/>
        public void QueryAttachmentDataAsync(string mapName, int tableID, int[] attachmentIDs, esriTransportType transportType)
        {
            this.QueryAttachmentDataAsync(mapName, tableID, attachmentIDs, transportType, null);
        }
        
        /// <remarks/>
        public void QueryAttachmentDataAsync(string mapName, int tableID, int[] attachmentIDs, esriTransportType transportType, object userState)
        {
            if ((this.QueryAttachmentDataOperationCompleted == null))
            {
                this.QueryAttachmentDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryAttachmentDataOperationCompleted);
            }
            this.InvokeAsync("QueryAttachmentData", new object[] {
                        mapName,
                        tableID,
                        attachmentIDs,
                        transportType}, this.QueryAttachmentDataOperationCompleted, userState);
        }
        
        private void OnQueryAttachmentDataOperationCompleted(object arg)
        {
            if ((this.QueryAttachmentDataCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryAttachmentDataCompleted(this, new QueryAttachmentDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.esri.com/schemas/ArcGIS/10.0", ResponseNamespace="http://www.esri.com/schemas/ArcGIS/10.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Result", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SQLSyntaxInfo GetSQLSyntaxInfo([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, ElementName="MapName")] string MapName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, ElementName="LayerID")] int LayerID)
        {
            object[] results = this.Invoke("GetSQLSyntaxInfo", new object[] {
                        MapName,
                        LayerID});
            return ((SQLSyntaxInfo)(results[0]));
        }
        
        /// <remarks/>
        public void GetSQLSyntaxInfoAsync(string mapName, int layerID)
        {
            this.GetSQLSyntaxInfoAsync(mapName, layerID, null);
        }
        
        /// <remarks/>
        public void GetSQLSyntaxInfoAsync(string mapName, int layerID, object userState)
        {
            if ((this.GetSQLSyntaxInfoOperationCompleted == null))
            {
                this.GetSQLSyntaxInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSQLSyntaxInfoOperationCompleted);
            }
            this.InvokeAsync("GetSQLSyntaxInfo", new object[] {
                        mapName,
                        layerID}, this.GetSQLSyntaxInfoOperationCompleted, userState);
        }
        
        private void OnGetSQLSyntaxInfoOperationCompleted(object arg)
        {
            if ((this.GetSQLSyntaxInfoCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSQLSyntaxInfoCompleted(this, new GetSQLSyntaxInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.esri.com/schemas/ArcGIS/10.0", ResponseNamespace="http://www.esri.com/schemas/ArcGIS/10.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Result", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ImageResult ExportScaleBar([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, ElementName="ScaleBar")] ScaleBar ScaleBar, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, ElementName="MapDescription")] MapDescription MapDescription, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, ElementName="MapDisplay")] ImageDisplay MapDisplay, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, ElementName="BackGroundColor")] Color BackGroundColor, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, ElementName="ImageDescription")] ImageDescription ImageDescription)
        {
            object[] results = this.Invoke("ExportScaleBar", new object[] {
                        ScaleBar,
                        MapDescription,
                        MapDisplay,
                        BackGroundColor,
                        ImageDescription});
            return ((ImageResult)(results[0]));
        }
        
        /// <remarks/>
        public void ExportScaleBarAsync(ScaleBar scaleBar, MapDescription mapDescription, ImageDisplay mapDisplay, Color backGroundColor, ImageDescription imageDescription)
        {
            this.ExportScaleBarAsync(scaleBar, mapDescription, mapDisplay, backGroundColor, imageDescription, null);
        }
        
        /// <remarks/>
        public void ExportScaleBarAsync(ScaleBar scaleBar, MapDescription mapDescription, ImageDisplay mapDisplay, Color backGroundColor, ImageDescription imageDescription, object userState)
        {
            if ((this.ExportScaleBarOperationCompleted == null))
            {
                this.ExportScaleBarOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExportScaleBarOperationCompleted);
            }
            this.InvokeAsync("ExportScaleBar", new object[] {
                        scaleBar,
                        mapDescription,
                        mapDisplay,
                        backGroundColor,
                        imageDescription}, this.ExportScaleBarOperationCompleted, userState);
        }
        
        private void OnExportScaleBarOperationCompleted(object arg)
        {
            if ((this.ExportScaleBarCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExportScaleBarCompleted(this, new ExportScaleBarCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.esri.com/schemas/ArcGIS/10.0", ResponseNamespace="http://www.esri.com/schemas/ArcGIS/10.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Result", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string GetVirtualCacheDirectory([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, ElementName="MapName")] string MapName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, ElementName="LayerID")] int LayerID)
        {
            object[] results = this.Invoke("GetVirtualCacheDirectory", new object[] {
                        MapName,
                        LayerID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetVirtualCacheDirectoryAsync(string mapName, int layerID)
        {
            this.GetVirtualCacheDirectoryAsync(mapName, layerID, null);
        }
        
        /// <remarks/>
        public void GetVirtualCacheDirectoryAsync(string mapName, int layerID, object userState)
        {
            if ((this.GetVirtualCacheDirectoryOperationCompleted == null))
            {
                this.GetVirtualCacheDirectoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVirtualCacheDirectoryOperationCompleted);
            }
            this.InvokeAsync("GetVirtualCacheDirectory", new object[] {
                        mapName,
                        layerID}, this.GetVirtualCacheDirectoryOperationCompleted, userState);
        }
        
        private void OnGetVirtualCacheDirectoryOperationCompleted(object arg)
        {
            if ((this.GetVirtualCacheDirectoryCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVirtualCacheDirectoryCompleted(this, new GetVirtualCacheDirectoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.esri.com/schemas/ArcGIS/10.0", ResponseNamespace="http://www.esri.com/schemas/ArcGIS/10.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Result", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int QueryRowCount([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, ElementName="MapName")] string MapName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, ElementName="MapTableDescription")] MapTableDescription MapTableDescription, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, ElementName="QueryFilter")] QueryFilter QueryFilter)
        {
            object[] results = this.Invoke("QueryRowCount", new object[] {
                        MapName,
                        MapTableDescription,
                        QueryFilter});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void QueryRowCountAsync(string mapName, MapTableDescription mapTableDescription, QueryFilter queryFilter)
        {
            this.QueryRowCountAsync(mapName, mapTableDescription, queryFilter, null);
        }
        
        /// <remarks/>
        public void QueryRowCountAsync(string mapName, MapTableDescription mapTableDescription, QueryFilter queryFilter, object userState)
        {
            if ((this.QueryRowCountOperationCompleted == null))
            {
                this.QueryRowCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryRowCountOperationCompleted);
            }
            this.InvokeAsync("QueryRowCount", new object[] {
                        mapName,
                        mapTableDescription,
                        queryFilter}, this.QueryRowCountOperationCompleted, userState);
        }
        
        private void OnQueryRowCountOperationCompleted(object arg)
        {
            if ((this.QueryRowCountCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryRowCountCompleted(this, new QueryRowCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.esri.com/schemas/ArcGIS/10.0", ResponseNamespace="http://www.esri.com/schemas/ArcGIS/10.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Result", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public esriImageReturnType GetSupportedImageReturnTypes()
        {
            object[] results = this.Invoke("GetSupportedImageReturnTypes", new object[0]);
            return ((esriImageReturnType)(results[0]));
        }
        
        /// <remarks/>
        public void GetSupportedImageReturnTypesAsync()
        {
            this.GetSupportedImageReturnTypesAsync(null);
        }
        
        /// <remarks/>
        public void GetSupportedImageReturnTypesAsync(object userState)
        {
            if ((this.GetSupportedImageReturnTypesOperationCompleted == null))
            {
                this.GetSupportedImageReturnTypesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSupportedImageReturnTypesOperationCompleted);
            }
            this.InvokeAsync("GetSupportedImageReturnTypes", new object[0], this.GetSupportedImageReturnTypesOperationCompleted, userState);
        }
        
        private void OnGetSupportedImageReturnTypesOperationCompleted(object arg)
        {
            if ((this.GetSupportedImageReturnTypesCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSupportedImageReturnTypesCompleted(this, new GetSupportedImageReturnTypesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.esri.com/schemas/ArcGIS/10.0", ResponseNamespace="http://www.esri.com/schemas/ArcGIS/10.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Result", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public FIDSet QueryFeatureIDs([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, ElementName="MapName")] string MapName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, ElementName="LayerID")] int LayerID, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, ElementName="QueryFilter")] QueryFilter QueryFilter)
        {
            object[] results = this.Invoke("QueryFeatureIDs", new object[] {
                        MapName,
                        LayerID,
                        QueryFilter});
            return ((FIDSet)(results[0]));
        }
        
        /// <remarks/>
        public void QueryFeatureIDsAsync(string mapName, int layerID, QueryFilter queryFilter)
        {
            this.QueryFeatureIDsAsync(mapName, layerID, queryFilter, null);
        }
        
        /// <remarks/>
        public void QueryFeatureIDsAsync(string mapName, int layerID, QueryFilter queryFilter, object userState)
        {
            if ((this.QueryFeatureIDsOperationCompleted == null))
            {
                this.QueryFeatureIDsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryFeatureIDsOperationCompleted);
            }
            this.InvokeAsync("QueryFeatureIDs", new object[] {
                        mapName,
                        layerID,
                        queryFilter}, this.QueryFeatureIDsOperationCompleted, userState);
        }
        
        private void OnQueryFeatureIDsOperationCompleted(object arg)
        {
            if ((this.QueryFeatureIDsCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryFeatureIDsCompleted(this, new QueryFeatureIDsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.esri.com/schemas/ArcGIS/10.0", ResponseNamespace="http://www.esri.com/schemas/ArcGIS/10.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Result", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public QueryResult QueryData([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, ElementName="MapName")] string MapName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, ElementName="MapTableDescription")] MapTableDescription MapTableDescription, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, ElementName="QueryFilter")] QueryFilter QueryFilter, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, ElementName="QueryResultOptions")] QueryResultOptions QueryResultOptions)
        {
            object[] results = this.Invoke("QueryData", new object[] {
                        MapName,
                        MapTableDescription,
                        QueryFilter,
                        QueryResultOptions});
            return ((QueryResult)(results[0]));
        }
        
        /// <remarks/>
        public void QueryDataAsync(string mapName, MapTableDescription mapTableDescription, QueryFilter queryFilter, QueryResultOptions queryResultOptions)
        {
            this.QueryDataAsync(mapName, mapTableDescription, queryFilter, queryResultOptions, null);
        }
        
        /// <remarks/>
        public void QueryDataAsync(string mapName, MapTableDescription mapTableDescription, QueryFilter queryFilter, QueryResultOptions queryResultOptions, object userState)
        {
            if ((this.QueryDataOperationCompleted == null))
            {
                this.QueryDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryDataOperationCompleted);
            }
            this.InvokeAsync("QueryData", new object[] {
                        mapName,
                        mapTableDescription,
                        queryFilter,
                        queryResultOptions}, this.QueryDataOperationCompleted, userState);
        }
        
        private void OnQueryDataOperationCompleted(object arg)
        {
            if ((this.QueryDataCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryDataCompleted(this, new QueryDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.esri.com/schemas/ArcGIS/10.0", ResponseNamespace="http://www.esri.com/schemas/ArcGIS/10.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("Result", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("String", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public string[] QueryHTMLPopups([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, ElementName="MapName")] string MapName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, ElementName="TableID")] int TableID, [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, ElementName="RowIDs")] [System.Xml.Serialization.XmlArrayItemAttribute("Int", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)] int[] RowIDs)
        {
            object[] results = this.Invoke("QueryHTMLPopups", new object[] {
                        MapName,
                        TableID,
                        RowIDs});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void QueryHTMLPopupsAsync(string mapName, int tableID, int[] rowIDs)
        {
            this.QueryHTMLPopupsAsync(mapName, tableID, rowIDs, null);
        }
        
        /// <remarks/>
        public void QueryHTMLPopupsAsync(string mapName, int tableID, int[] rowIDs, object userState)
        {
            if ((this.QueryHTMLPopupsOperationCompleted == null))
            {
                this.QueryHTMLPopupsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryHTMLPopupsOperationCompleted);
            }
            this.InvokeAsync("QueryHTMLPopups", new object[] {
                        mapName,
                        tableID,
                        rowIDs}, this.QueryHTMLPopupsOperationCompleted, userState);
        }
        
        private void OnQueryHTMLPopupsOperationCompleted(object arg)
        {
            if ((this.QueryHTMLPopupsCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryHTMLPopupsCompleted(this, new QueryHTMLPopupsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.esri.com/schemas/ArcGIS/10.0", ResponseNamespace="http://www.esri.com/schemas/ArcGIS/10.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Result", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public CacheStorageInfo GetCacheStorageInfo([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, ElementName="MapName")] string MapName)
        {
            object[] results = this.Invoke("GetCacheStorageInfo", new object[] {
                        MapName});
            return ((CacheStorageInfo)(results[0]));
        }
        
        /// <remarks/>
        public void GetCacheStorageInfoAsync(string mapName)
        {
            this.GetCacheStorageInfoAsync(mapName, null);
        }
        
        /// <remarks/>
        public void GetCacheStorageInfoAsync(string mapName, object userState)
        {
            if ((this.GetCacheStorageInfoOperationCompleted == null))
            {
                this.GetCacheStorageInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCacheStorageInfoOperationCompleted);
            }
            this.InvokeAsync("GetCacheStorageInfo", new object[] {
                        mapName}, this.GetCacheStorageInfoOperationCompleted, userState);
        }
        
        private void OnGetCacheStorageInfoOperationCompleted(object arg)
        {
            if ((this.GetCacheStorageInfoCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCacheStorageInfoCompleted(this, new GetCacheStorageInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.esri.com/schemas/ArcGIS/10.0", ResponseNamespace="http://www.esri.com/schemas/ArcGIS/10.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Result", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Multipoint ToMapPoints([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, ElementName="MapDescription")] MapDescription MapDescription, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, ElementName="MapImageDisplay")] ImageDisplay MapImageDisplay, [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, ElementName="ScreenXValues")] [System.Xml.Serialization.XmlArrayItemAttribute("Int", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)] int[] ScreenXValues, [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, ElementName="ScreenYValues")] [System.Xml.Serialization.XmlArrayItemAttribute("Int", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)] int[] ScreenYValues)
        {
            object[] results = this.Invoke("ToMapPoints", new object[] {
                        MapDescription,
                        MapImageDisplay,
                        ScreenXValues,
                        ScreenYValues});
            return ((Multipoint)(results[0]));
        }
        
        /// <remarks/>
        public void ToMapPointsAsync(MapDescription mapDescription, ImageDisplay mapImageDisplay, int[] screenXValues, int[] screenYValues)
        {
            this.ToMapPointsAsync(mapDescription, mapImageDisplay, screenXValues, screenYValues, null);
        }
        
        /// <remarks/>
        public void ToMapPointsAsync(MapDescription mapDescription, ImageDisplay mapImageDisplay, int[] screenXValues, int[] screenYValues, object userState)
        {
            if ((this.ToMapPointsOperationCompleted == null))
            {
                this.ToMapPointsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnToMapPointsOperationCompleted);
            }
            this.InvokeAsync("ToMapPoints", new object[] {
                        mapDescription,
                        mapImageDisplay,
                        screenXValues,
                        screenYValues}, this.ToMapPointsOperationCompleted, userState);
        }
        
        private void OnToMapPointsOperationCompleted(object arg)
        {
            if ((this.ToMapPointsCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ToMapPointsCompleted(this, new ToMapPointsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.esri.com/schemas/ArcGIS/10.0", ResponseNamespace="http://www.esri.com/schemas/ArcGIS/10.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Result", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string GetMapName([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, ElementName="Index")] int Index)
        {
            object[] results = this.Invoke("GetMapName", new object[] {
                        Index});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetMapNameAsync(int index)
        {
            this.GetMapNameAsync(index, null);
        }
        
        /// <remarks/>
        public void GetMapNameAsync(int index, object userState)
        {
            if ((this.GetMapNameOperationCompleted == null))
            {
                this.GetMapNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMapNameOperationCompleted);
            }
            this.InvokeAsync("GetMapName", new object[] {
                        index}, this.GetMapNameOperationCompleted, userState);
        }
        
        private void OnGetMapNameOperationCompleted(object arg)
        {
            if ((this.GetMapNameCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMapNameCompleted(this, new GetMapNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.esri.com/schemas/ArcGIS/10.0", ResponseNamespace="http://www.esri.com/schemas/ArcGIS/10.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Result", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public TileCacheInfo GetTileCacheInfo([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, ElementName="MapName")] string MapName)
        {
            object[] results = this.Invoke("GetTileCacheInfo", new object[] {
                        MapName});
            return ((TileCacheInfo)(results[0]));
        }
        
        /// <remarks/>
        public void GetTileCacheInfoAsync(string mapName)
        {
            this.GetTileCacheInfoAsync(mapName, null);
        }
        
        /// <remarks/>
        public void GetTileCacheInfoAsync(string mapName, object userState)
        {
            if ((this.GetTileCacheInfoOperationCompleted == null))
            {
                this.GetTileCacheInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTileCacheInfoOperationCompleted);
            }
            this.InvokeAsync("GetTileCacheInfo", new object[] {
                        mapName}, this.GetTileCacheInfoOperationCompleted, userState);
        }
        
        private void OnGetTileCacheInfoOperationCompleted(object arg)
        {
            if ((this.GetTileCacheInfoCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTileCacheInfoCompleted(this, new GetTileCacheInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.esri.com/schemas/ArcGIS/10.0", ResponseNamespace="http://www.esri.com/schemas/ArcGIS/10.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Result", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public QueryResult QueryRelatedRecords([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, ElementName="MapName")] string MapName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, ElementName="SourceTableID")] int SourceTableID, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, ElementName="SourceFIDSet")] FIDSet SourceFIDSet, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, ElementName="RelateDescription")] RelateDescription RelateDescription)
        {
            object[] results = this.Invoke("QueryRelatedRecords", new object[] {
                        MapName,
                        SourceTableID,
                        SourceFIDSet,
                        RelateDescription});
            return ((QueryResult)(results[0]));
        }
        
        /// <remarks/>
        public void QueryRelatedRecordsAsync(string mapName, int sourceTableID, FIDSet sourceFIDSet, RelateDescription relateDescription)
        {
            this.QueryRelatedRecordsAsync(mapName, sourceTableID, sourceFIDSet, relateDescription, null);
        }
        
        /// <remarks/>
        public void QueryRelatedRecordsAsync(string mapName, int sourceTableID, FIDSet sourceFIDSet, RelateDescription relateDescription, object userState)
        {
            if ((this.QueryRelatedRecordsOperationCompleted == null))
            {
                this.QueryRelatedRecordsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryRelatedRecordsOperationCompleted);
            }
            this.InvokeAsync("QueryRelatedRecords", new object[] {
                        mapName,
                        sourceTableID,
                        sourceFIDSet,
                        relateDescription}, this.QueryRelatedRecordsOperationCompleted, userState);
        }
        
        private void OnQueryRelatedRecordsOperationCompleted(object arg)
        {
            if ((this.QueryRelatedRecordsCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryRelatedRecordsCompleted(this, new QueryRelatedRecordsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.esri.com/schemas/ArcGIS/10.0", ResponseNamespace="http://www.esri.com/schemas/ArcGIS/10.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Result", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public RecordSet QueryFeatureData([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, ElementName="MapName")] string MapName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, ElementName="LayerID")] int LayerID, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, ElementName="QueryFilter")] QueryFilter QueryFilter)
        {
            object[] results = this.Invoke("QueryFeatureData", new object[] {
                        MapName,
                        LayerID,
                        QueryFilter});
            return ((RecordSet)(results[0]));
        }
        
        /// <remarks/>
        public void QueryFeatureDataAsync(string mapName, int layerID, QueryFilter queryFilter)
        {
            this.QueryFeatureDataAsync(mapName, layerID, queryFilter, null);
        }
        
        /// <remarks/>
        public void QueryFeatureDataAsync(string mapName, int layerID, QueryFilter queryFilter, object userState)
        {
            if ((this.QueryFeatureDataOperationCompleted == null))
            {
                this.QueryFeatureDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryFeatureDataOperationCompleted);
            }
            this.InvokeAsync("QueryFeatureData", new object[] {
                        mapName,
                        layerID,
                        queryFilter}, this.QueryFeatureDataOperationCompleted, userState);
        }
        
        private void OnQueryFeatureDataOperationCompleted(object arg)
        {
            if ((this.QueryFeatureDataCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryFeatureDataCompleted(this, new QueryFeatureDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.esri.com/schemas/ArcGIS/10.0", ResponseNamespace="http://www.esri.com/schemas/ArcGIS/10.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("Result", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MapServerHyperlink[] QueryHyperlinks([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, ElementName="MapDescription")] MapDescription MapDescription, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, ElementName="MapImageDisplay")] ImageDisplay MapImageDisplay, [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, ElementName="LayerIDs")] [System.Xml.Serialization.XmlArrayItemAttribute("Int", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)] int[] LayerIDs)
        {
            object[] results = this.Invoke("QueryHyperlinks", new object[] {
                        MapDescription,
                        MapImageDisplay,
                        LayerIDs});
            return ((MapServerHyperlink[])(results[0]));
        }
        
        /// <remarks/>
        public void QueryHyperlinksAsync(MapDescription mapDescription, ImageDisplay mapImageDisplay, int[] layerIDs)
        {
            this.QueryHyperlinksAsync(mapDescription, mapImageDisplay, layerIDs, null);
        }
        
        /// <remarks/>
        public void QueryHyperlinksAsync(MapDescription mapDescription, ImageDisplay mapImageDisplay, int[] layerIDs, object userState)
        {
            if ((this.QueryHyperlinksOperationCompleted == null))
            {
                this.QueryHyperlinksOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryHyperlinksOperationCompleted);
            }
            this.InvokeAsync("QueryHyperlinks", new object[] {
                        mapDescription,
                        mapImageDisplay,
                        layerIDs}, this.QueryHyperlinksOperationCompleted, userState);
        }
        
        private void OnQueryHyperlinksOperationCompleted(object arg)
        {
            if ((this.QueryHyperlinksCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryHyperlinksCompleted(this, new QueryHyperlinksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.esri.com/schemas/ArcGIS/10.0", ResponseNamespace="http://www.esri.com/schemas/ArcGIS/10.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Result", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool HasLayerCache([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, ElementName="MapName")] string MapName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, ElementName="LayerID")] int LayerID)
        {
            object[] results = this.Invoke("HasLayerCache", new object[] {
                        MapName,
                        LayerID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void HasLayerCacheAsync(string mapName, int layerID)
        {
            this.HasLayerCacheAsync(mapName, layerID, null);
        }
        
        /// <remarks/>
        public void HasLayerCacheAsync(string mapName, int layerID, object userState)
        {
            if ((this.HasLayerCacheOperationCompleted == null))
            {
                this.HasLayerCacheOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHasLayerCacheOperationCompleted);
            }
            this.InvokeAsync("HasLayerCache", new object[] {
                        mapName,
                        layerID}, this.HasLayerCacheOperationCompleted, userState);
        }
        
        private void OnHasLayerCacheOperationCompleted(object arg)
        {
            if ((this.HasLayerCacheCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HasLayerCacheCompleted(this, new HasLayerCacheCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.esri.com/schemas/ArcGIS/10.0", ResponseNamespace="http://www.esri.com/schemas/ArcGIS/10.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Result", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public FIDSet QueryFeatureIDs2([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, ElementName="MapName")] string MapName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, ElementName="LayerDescription")] LayerDescription LayerDescription, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, ElementName="QueryFilter")] QueryFilter QueryFilter)
        {
            object[] results = this.Invoke("QueryFeatureIDs2", new object[] {
                        MapName,
                        LayerDescription,
                        QueryFilter});
            return ((FIDSet)(results[0]));
        }
        
        /// <remarks/>
        public void QueryFeatureIDs2Async(string mapName, LayerDescription layerDescription, QueryFilter queryFilter)
        {
            this.QueryFeatureIDs2Async(mapName, layerDescription, queryFilter, null);
        }
        
        /// <remarks/>
        public void QueryFeatureIDs2Async(string mapName, LayerDescription layerDescription, QueryFilter queryFilter, object userState)
        {
            if ((this.QueryFeatureIDs2OperationCompleted == null))
            {
                this.QueryFeatureIDs2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryFeatureIDs2OperationCompleted);
            }
            this.InvokeAsync("QueryFeatureIDs2", new object[] {
                        mapName,
                        layerDescription,
                        queryFilter}, this.QueryFeatureIDs2OperationCompleted, userState);
        }
        
        private void OnQueryFeatureIDs2OperationCompleted(object arg)
        {
            if ((this.QueryFeatureIDs2Completed != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryFeatureIDs2Completed(this, new QueryFeatureIDs2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.esri.com/schemas/ArcGIS/10.0", ResponseNamespace="http://www.esri.com/schemas/ArcGIS/10.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Result", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary")]
        public byte[] GetLayerTile([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, ElementName="MapName")] string MapName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, ElementName="LayerID")] int LayerID, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, ElementName="Level")] int Level, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, ElementName="Row")] int Row, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, ElementName="Column")] int Column, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, ElementName="Format")] string Format)
        {
            object[] results = this.Invoke("GetLayerTile", new object[] {
                        MapName,
                        LayerID,
                        Level,
                        Row,
                        Column,
                        Format});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetLayerTileAsync(string mapName, int layerID, int level, int row, int column, string format)
        {
            this.GetLayerTileAsync(mapName, layerID, level, row, column, format, null);
        }
        
        /// <remarks/>
        public void GetLayerTileAsync(string mapName, int layerID, int level, int row, int column, string format, object userState)
        {
            if ((this.GetLayerTileOperationCompleted == null))
            {
                this.GetLayerTileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLayerTileOperationCompleted);
            }
            this.InvokeAsync("GetLayerTile", new object[] {
                        mapName,
                        layerID,
                        level,
                        row,
                        column,
                        format}, this.GetLayerTileOperationCompleted, userState);
        }
        
        private void OnGetLayerTileOperationCompleted(object arg)
        {
            if ((this.GetLayerTileCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLayerTileCompleted(this, new GetLayerTileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.esri.com/schemas/ArcGIS/10.0", ResponseNamespace="http://www.esri.com/schemas/ArcGIS/10.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Result", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public PropertySet GetServiceConfigurationInfo()
        {
            object[] results = this.Invoke("GetServiceConfigurationInfo", new object[0]);
            return ((PropertySet)(results[0]));
        }
        
        /// <remarks/>
        public void GetServiceConfigurationInfoAsync()
        {
            this.GetServiceConfigurationInfoAsync(null);
        }
        
        /// <remarks/>
        public void GetServiceConfigurationInfoAsync(object userState)
        {
            if ((this.GetServiceConfigurationInfoOperationCompleted == null))
            {
                this.GetServiceConfigurationInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetServiceConfigurationInfoOperationCompleted);
            }
            this.InvokeAsync("GetServiceConfigurationInfo", new object[0], this.GetServiceConfigurationInfoOperationCompleted, userState);
        }
        
        private void OnGetServiceConfigurationInfoOperationCompleted(object arg)
        {
            if ((this.GetServiceConfigurationInfoCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetServiceConfigurationInfoCompleted(this, new GetServiceConfigurationInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.esri.com/schemas/ArcGIS/10.0", ResponseNamespace="http://www.esri.com/schemas/ArcGIS/10.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Result", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int QueryFeatureCount2([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, ElementName="MapName")] string MapName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, ElementName="LayerDescription")] LayerDescription LayerDescription, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, ElementName="QueryFilter")] QueryFilter QueryFilter)
        {
            object[] results = this.Invoke("QueryFeatureCount2", new object[] {
                        MapName,
                        LayerDescription,
                        QueryFilter});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void QueryFeatureCount2Async(string mapName, LayerDescription layerDescription, QueryFilter queryFilter)
        {
            this.QueryFeatureCount2Async(mapName, layerDescription, queryFilter, null);
        }
        
        /// <remarks/>
        public void QueryFeatureCount2Async(string mapName, LayerDescription layerDescription, QueryFilter queryFilter, object userState)
        {
            if ((this.QueryFeatureCount2OperationCompleted == null))
            {
                this.QueryFeatureCount2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryFeatureCount2OperationCompleted);
            }
            this.InvokeAsync("QueryFeatureCount2", new object[] {
                        mapName,
                        layerDescription,
                        queryFilter}, this.QueryFeatureCount2OperationCompleted, userState);
        }
        
        private void OnQueryFeatureCount2OperationCompleted(object arg)
        {
            if ((this.QueryFeatureCount2Completed != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryFeatureCount2Completed(this, new QueryFeatureCount2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.esri.com/schemas/ArcGIS/10.0", ResponseNamespace="http://www.esri.com/schemas/ArcGIS/10.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Result", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public CacheDescriptionInfo GetCacheDescriptionInfo([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, ElementName="MapName")] string MapName)
        {
            object[] results = this.Invoke("GetCacheDescriptionInfo", new object[] {
                        MapName});
            return ((CacheDescriptionInfo)(results[0]));
        }
        
        /// <remarks/>
        public void GetCacheDescriptionInfoAsync(string mapName)
        {
            this.GetCacheDescriptionInfoAsync(mapName, null);
        }
        
        /// <remarks/>
        public void GetCacheDescriptionInfoAsync(string mapName, object userState)
        {
            if ((this.GetCacheDescriptionInfoOperationCompleted == null))
            {
                this.GetCacheDescriptionInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCacheDescriptionInfoOperationCompleted);
            }
            this.InvokeAsync("GetCacheDescriptionInfo", new object[] {
                        mapName}, this.GetCacheDescriptionInfoOperationCompleted, userState);
        }
        
        private void OnGetCacheDescriptionInfoOperationCompleted(object arg)
        {
            if ((this.GetCacheDescriptionInfoCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCacheDescriptionInfoCompleted(this, new GetCacheDescriptionInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.esri.com/schemas/ArcGIS/10.0", ResponseNamespace="http://www.esri.com/schemas/ArcGIS/10.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("Result", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MapServerIdentifyResult[] Identify([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, ElementName="MapDescription")] MapDescription MapDescription, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, ElementName="MapImageDisplay")] ImageDisplay MapImageDisplay, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, ElementName="SearchShape")] Geometry SearchShape, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, ElementName="Tolerance")] int Tolerance, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, ElementName="IdentifyOption")] esriIdentifyOption IdentifyOption, [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, ElementName="LayerIDs")] [System.Xml.Serialization.XmlArrayItemAttribute("Int", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)] int[] LayerIDs)
        {
            object[] results = this.Invoke("Identify", new object[] {
                        MapDescription,
                        MapImageDisplay,
                        SearchShape,
                        Tolerance,
                        IdentifyOption,
                        LayerIDs});
            return ((MapServerIdentifyResult[])(results[0]));
        }
        
        /// <remarks/>
        public void IdentifyAsync(MapDescription mapDescription, ImageDisplay mapImageDisplay, Geometry searchShape, int tolerance, esriIdentifyOption identifyOption, int[] layerIDs)
        {
            this.IdentifyAsync(mapDescription, mapImageDisplay, searchShape, tolerance, identifyOption, layerIDs, null);
        }
        
        /// <remarks/>
        public void IdentifyAsync(MapDescription mapDescription, ImageDisplay mapImageDisplay, Geometry searchShape, int tolerance, esriIdentifyOption identifyOption, int[] layerIDs, object userState)
        {
            if ((this.IdentifyOperationCompleted == null))
            {
                this.IdentifyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIdentifyOperationCompleted);
            }
            this.InvokeAsync("Identify", new object[] {
                        mapDescription,
                        mapImageDisplay,
                        searchShape,
                        tolerance,
                        identifyOption,
                        layerIDs}, this.IdentifyOperationCompleted, userState);
        }
        
        private void OnIdentifyOperationCompleted(object arg)
        {
            if ((this.IdentifyCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IdentifyCompleted(this, new IdentifyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.esri.com/schemas/ArcGIS/10.0", ResponseNamespace="http://www.esri.com/schemas/ArcGIS/10.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Result", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public double ComputeDistance([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, ElementName="MapName")] string MapName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, ElementName="FromPoint")] Point FromPoint, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, ElementName="ToPoint")] Point ToPoint, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, ElementName="Units")] esriUnits Units)
        {
            object[] results = this.Invoke("ComputeDistance", new object[] {
                        MapName,
                        FromPoint,
                        ToPoint,
                        Units});
            return ((double)(results[0]));
        }
        
        /// <remarks/>
        public void ComputeDistanceAsync(string mapName, Point fromPoint, Point toPoint, esriUnits units)
        {
            this.ComputeDistanceAsync(mapName, fromPoint, toPoint, units, null);
        }
        
        /// <remarks/>
        public void ComputeDistanceAsync(string mapName, Point fromPoint, Point toPoint, esriUnits units, object userState)
        {
            if ((this.ComputeDistanceOperationCompleted == null))
            {
                this.ComputeDistanceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnComputeDistanceOperationCompleted);
            }
            this.InvokeAsync("ComputeDistance", new object[] {
                        mapName,
                        fromPoint,
                        toPoint,
                        units}, this.ComputeDistanceOperationCompleted, userState);
        }
        
        private void OnComputeDistanceOperationCompleted(object arg)
        {
            if ((this.ComputeDistanceCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ComputeDistanceCompleted(this, new ComputeDistanceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.esri.com/schemas/ArcGIS/10.0", ResponseNamespace="http://www.esri.com/schemas/ArcGIS/10.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Result", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string GetDefaultMapName()
        {
            object[] results = this.Invoke("GetDefaultMapName", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDefaultMapNameAsync()
        {
            this.GetDefaultMapNameAsync(null);
        }
        
        /// <remarks/>
        public void GetDefaultMapNameAsync(object userState)
        {
            if ((this.GetDefaultMapNameOperationCompleted == null))
            {
                this.GetDefaultMapNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDefaultMapNameOperationCompleted);
            }
            this.InvokeAsync("GetDefaultMapName", new object[0], this.GetDefaultMapNameOperationCompleted, userState);
        }
        
        private void OnGetDefaultMapNameOperationCompleted(object arg)
        {
            if ((this.GetDefaultMapNameCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDefaultMapNameCompleted(this, new GetDefaultMapNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.esri.com/schemas/ArcGIS/10.0", ResponseNamespace="http://www.esri.com/schemas/ArcGIS/10.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Result", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool IsFixedScaleMap([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, ElementName="MapName")] string MapName)
        {
            object[] results = this.Invoke("IsFixedScaleMap", new object[] {
                        MapName});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsFixedScaleMapAsync(string mapName)
        {
            this.IsFixedScaleMapAsync(mapName, null);
        }
        
        /// <remarks/>
        public void IsFixedScaleMapAsync(string mapName, object userState)
        {
            if ((this.IsFixedScaleMapOperationCompleted == null))
            {
                this.IsFixedScaleMapOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsFixedScaleMapOperationCompleted);
            }
            this.InvokeAsync("IsFixedScaleMap", new object[] {
                        mapName}, this.IsFixedScaleMapOperationCompleted, userState);
        }
        
        private void OnIsFixedScaleMapOperationCompleted(object arg)
        {
            if ((this.IsFixedScaleMapCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsFixedScaleMapCompleted(this, new IsFixedScaleMapCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.esri.com/schemas/ArcGIS/10.0", ResponseNamespace="http://www.esri.com/schemas/ArcGIS/10.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("Result", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MapServerLegendInfo[] GetLegendInfo([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, ElementName="MapName")] string MapName, [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, ElementName="LayerIDs")] [System.Xml.Serialization.XmlArrayItemAttribute("Int", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)] int[] LayerIDs, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, ElementName="LegendPatch")] MapServerLegendPatch LegendPatch, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, ElementName="ImageType")] ImageType ImageType)
        {
            object[] results = this.Invoke("GetLegendInfo", new object[] {
                        MapName,
                        LayerIDs,
                        LegendPatch,
                        ImageType});
            return ((MapServerLegendInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void GetLegendInfoAsync(string mapName, int[] layerIDs, MapServerLegendPatch legendPatch, ImageType imageType)
        {
            this.GetLegendInfoAsync(mapName, layerIDs, legendPatch, imageType, null);
        }
        
        /// <remarks/>
        public void GetLegendInfoAsync(string mapName, int[] layerIDs, MapServerLegendPatch legendPatch, ImageType imageType, object userState)
        {
            if ((this.GetLegendInfoOperationCompleted == null))
            {
                this.GetLegendInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLegendInfoOperationCompleted);
            }
            this.InvokeAsync("GetLegendInfo", new object[] {
                        mapName,
                        layerIDs,
                        legendPatch,
                        imageType}, this.GetLegendInfoOperationCompleted, userState);
        }
        
        private void OnGetLegendInfoOperationCompleted(object arg)
        {
            if ((this.GetLegendInfoCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLegendInfoCompleted(this, new GetLegendInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.esri.com/schemas/ArcGIS/10.0", ResponseNamespace="http://www.esri.com/schemas/ArcGIS/10.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Result", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int GetMapCount()
        {
            object[] results = this.Invoke("GetMapCount", new object[0]);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetMapCountAsync()
        {
            this.GetMapCountAsync(null);
        }
        
        /// <remarks/>
        public void GetMapCountAsync(object userState)
        {
            if ((this.GetMapCountOperationCompleted == null))
            {
                this.GetMapCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMapCountOperationCompleted);
            }
            this.InvokeAsync("GetMapCount", new object[0], this.GetMapCountOperationCompleted, userState);
        }
        
        private void OnGetMapCountOperationCompleted(object arg)
        {
            if ((this.GetMapCountCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMapCountCompleted(this, new GetMapCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.esri.com/schemas/ArcGIS/10.0", ResponseNamespace="http://www.esri.com/schemas/ArcGIS/10.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Result", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool HasSingleFusedMapCache([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, ElementName="MapName")] string MapName)
        {
            object[] results = this.Invoke("HasSingleFusedMapCache", new object[] {
                        MapName});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void HasSingleFusedMapCacheAsync(string mapName)
        {
            this.HasSingleFusedMapCacheAsync(mapName, null);
        }
        
        /// <remarks/>
        public void HasSingleFusedMapCacheAsync(string mapName, object userState)
        {
            if ((this.HasSingleFusedMapCacheOperationCompleted == null))
            {
                this.HasSingleFusedMapCacheOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHasSingleFusedMapCacheOperationCompleted);
            }
            this.InvokeAsync("HasSingleFusedMapCache", new object[] {
                        mapName}, this.HasSingleFusedMapCacheOperationCompleted, userState);
        }
        
        private void OnHasSingleFusedMapCacheOperationCompleted(object arg)
        {
            if ((this.HasSingleFusedMapCacheCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HasSingleFusedMapCacheCompleted(this, new HasSingleFusedMapCacheCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.esri.com/schemas/ArcGIS/10.0", ResponseNamespace="http://www.esri.com/schemas/ArcGIS/10.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Result", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary")]
        public byte[] GetMapTile([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, ElementName="MapName")] string MapName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, ElementName="Level")] int Level, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, ElementName="Row")] int Row, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, ElementName="Column")] int Column, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, ElementName="Format")] string Format)
        {
            object[] results = this.Invoke("GetMapTile", new object[] {
                        MapName,
                        Level,
                        Row,
                        Column,
                        Format});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetMapTileAsync(string mapName, int level, int row, int column, string format)
        {
            this.GetMapTileAsync(mapName, level, row, column, format, null);
        }
        
        /// <remarks/>
        public void GetMapTileAsync(string mapName, int level, int row, int column, string format, object userState)
        {
            if ((this.GetMapTileOperationCompleted == null))
            {
                this.GetMapTileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMapTileOperationCompleted);
            }
            this.InvokeAsync("GetMapTile", new object[] {
                        mapName,
                        level,
                        row,
                        column,
                        format}, this.GetMapTileOperationCompleted, userState);
        }
        
        private void OnGetMapTileOperationCompleted(object arg)
        {
            if ((this.GetMapTileCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMapTileCompleted(this, new GetMapTileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.esri.com/schemas/ArcGIS/10.0", ResponseNamespace="http://www.esri.com/schemas/ArcGIS/10.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Result", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public MapServerInfo GetServerInfo([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, ElementName="MapName")] string MapName)
        {
            object[] results = this.Invoke("GetServerInfo", new object[] {
                        MapName});
            return ((MapServerInfo)(results[0]));
        }
        
        /// <remarks/>
        public void GetServerInfoAsync(string mapName)
        {
            this.GetServerInfoAsync(mapName, null);
        }
        
        /// <remarks/>
        public void GetServerInfoAsync(string mapName, object userState)
        {
            if ((this.GetServerInfoOperationCompleted == null))
            {
                this.GetServerInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetServerInfoOperationCompleted);
            }
            this.InvokeAsync("GetServerInfo", new object[] {
                        mapName}, this.GetServerInfoOperationCompleted, userState);
        }
        
        private void OnGetServerInfoOperationCompleted(object arg)
        {
            if ((this.GetServerInfoCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetServerInfoCompleted(this, new GetServerInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.esri.com/schemas/ArcGIS/10.0", ResponseNamespace="http://www.esri.com/schemas/ArcGIS/10.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("Result", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MapTableSubtypeInfo[] GetMapTableSubtypeInfos([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, ElementName="MapName")] string MapName, [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, ElementName="TableIDs")] [System.Xml.Serialization.XmlArrayItemAttribute("Int", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)] int[] TableIDs)
        {
            object[] results = this.Invoke("GetMapTableSubtypeInfos", new object[] {
                        MapName,
                        TableIDs});
            return ((MapTableSubtypeInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void GetMapTableSubtypeInfosAsync(string mapName, int[] tableIDs)
        {
            this.GetMapTableSubtypeInfosAsync(mapName, tableIDs, null);
        }
        
        /// <remarks/>
        public void GetMapTableSubtypeInfosAsync(string mapName, int[] tableIDs, object userState)
        {
            if ((this.GetMapTableSubtypeInfosOperationCompleted == null))
            {
                this.GetMapTableSubtypeInfosOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMapTableSubtypeInfosOperationCompleted);
            }
            this.InvokeAsync("GetMapTableSubtypeInfos", new object[] {
                        mapName,
                        tableIDs}, this.GetMapTableSubtypeInfosOperationCompleted, userState);
        }
        
        private void OnGetMapTableSubtypeInfosOperationCompleted(object arg)
        {
            if ((this.GetMapTableSubtypeInfosCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMapTableSubtypeInfosCompleted(this, new GetMapTableSubtypeInfosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.esri.com/schemas/ArcGIS/10.0", ResponseNamespace="http://www.esri.com/schemas/ArcGIS/10.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Result", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int QueryFeatureCount([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, ElementName="MapName")] string MapName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, ElementName="LayerID")] int LayerID, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, ElementName="QueryFilter")] QueryFilter QueryFilter)
        {
            object[] results = this.Invoke("QueryFeatureCount", new object[] {
                        MapName,
                        LayerID,
                        QueryFilter});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void QueryFeatureCountAsync(string mapName, int layerID, QueryFilter queryFilter)
        {
            this.QueryFeatureCountAsync(mapName, layerID, queryFilter, null);
        }
        
        /// <remarks/>
        public void QueryFeatureCountAsync(string mapName, int layerID, QueryFilter queryFilter, object userState)
        {
            if ((this.QueryFeatureCountOperationCompleted == null))
            {
                this.QueryFeatureCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryFeatureCountOperationCompleted);
            }
            this.InvokeAsync("QueryFeatureCount", new object[] {
                        mapName,
                        layerID,
                        queryFilter}, this.QueryFeatureCountOperationCompleted, userState);
        }
        
        private void OnQueryFeatureCountOperationCompleted(object arg)
        {
            if ((this.QueryFeatureCountCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryFeatureCountCompleted(this, new QueryFeatureCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.esri.com/schemas/ArcGIS/10.0", ResponseNamespace="http://www.esri.com/schemas/ArcGIS/10.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("Result", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public ImageResult[] QueryRasterValue([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, ElementName="MapName")] string MapName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, ElementName="SourceTableID")] int SourceTableID, [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, ElementName="RowIDs")] [System.Xml.Serialization.XmlArrayItemAttribute("Int", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)] int[] RowIDs, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, ElementName="FieldName")] string FieldName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, ElementName="ImageType")] ImageType ImageType)
        {
            object[] results = this.Invoke("QueryRasterValue", new object[] {
                        MapName,
                        SourceTableID,
                        RowIDs,
                        FieldName,
                        ImageType});
            return ((ImageResult[])(results[0]));
        }
        
        /// <remarks/>
        public void QueryRasterValueAsync(string mapName, int sourceTableID, int[] rowIDs, string fieldName, ImageType imageType)
        {
            this.QueryRasterValueAsync(mapName, sourceTableID, rowIDs, fieldName, imageType, null);
        }
        
        /// <remarks/>
        public void QueryRasterValueAsync(string mapName, int sourceTableID, int[] rowIDs, string fieldName, ImageType imageType, object userState)
        {
            if ((this.QueryRasterValueOperationCompleted == null))
            {
                this.QueryRasterValueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryRasterValueOperationCompleted);
            }
            this.InvokeAsync("QueryRasterValue", new object[] {
                        mapName,
                        sourceTableID,
                        rowIDs,
                        fieldName,
                        imageType}, this.QueryRasterValueOperationCompleted, userState);
        }
        
        private void OnQueryRasterValueOperationCompleted(object arg)
        {
            if ((this.QueryRasterValueCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryRasterValueCompleted(this, new QueryRasterValueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.esri.com/schemas/ArcGIS/10.0", ResponseNamespace="http://www.esri.com/schemas/ArcGIS/10.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("ScreenXValues", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("Int", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public int[] FromMapPoints([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, ElementName="MapDescription")] MapDescription MapDescription, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, ElementName="MapImageDisplay")] ImageDisplay MapImageDisplay, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, ElementName="MapPoints")] Multipoint MapPoints, [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, ElementName="ScreenYValues")] [System.Xml.Serialization.XmlArrayItemAttribute("Int", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)] out int[] ScreenYValues)
        {
            object[] results = this.Invoke("FromMapPoints", new object[] {
                        MapDescription,
                        MapImageDisplay,
                        MapPoints});
            ScreenYValues = ((int[])(results[1]));
            return ((int[])(results[0]));
        }
        
        /// <remarks/>
        public void FromMapPointsAsync(MapDescription mapDescription, ImageDisplay mapImageDisplay, Multipoint mapPoints)
        {
            this.FromMapPointsAsync(mapDescription, mapImageDisplay, mapPoints, null);
        }
        
        /// <remarks/>
        public void FromMapPointsAsync(MapDescription mapDescription, ImageDisplay mapImageDisplay, Multipoint mapPoints, object userState)
        {
            if ((this.FromMapPointsOperationCompleted == null))
            {
                this.FromMapPointsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFromMapPointsOperationCompleted);
            }
            this.InvokeAsync("FromMapPoints", new object[] {
                        mapDescription,
                        mapImageDisplay,
                        mapPoints}, this.FromMapPointsOperationCompleted, userState);
        }
        
        private void OnFromMapPointsOperationCompleted(object arg)
        {
            if ((this.FromMapPointsCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FromMapPointsCompleted(this, new FromMapPointsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.esri.com/schemas/ArcGIS/10.0", ResponseNamespace="http://www.esri.com/schemas/ArcGIS/10.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("Result", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("Int", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public int[] QueryRowIDs([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, ElementName="MapName")] string MapName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, ElementName="MapTableDescription")] MapTableDescription MapTableDescription, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, ElementName="QueryFilter")] QueryFilter QueryFilter)
        {
            object[] results = this.Invoke("QueryRowIDs", new object[] {
                        MapName,
                        MapTableDescription,
                        QueryFilter});
            return ((int[])(results[0]));
        }
        
        /// <remarks/>
        public void QueryRowIDsAsync(string mapName, MapTableDescription mapTableDescription, QueryFilter queryFilter)
        {
            this.QueryRowIDsAsync(mapName, mapTableDescription, queryFilter, null);
        }
        
        /// <remarks/>
        public void QueryRowIDsAsync(string mapName, MapTableDescription mapTableDescription, QueryFilter queryFilter, object userState)
        {
            if ((this.QueryRowIDsOperationCompleted == null))
            {
                this.QueryRowIDsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryRowIDsOperationCompleted);
            }
            this.InvokeAsync("QueryRowIDs", new object[] {
                        mapName,
                        mapTableDescription,
                        queryFilter}, this.QueryRowIDsOperationCompleted, userState);
        }
        
        private void OnQueryRowIDsOperationCompleted(object arg)
        {
            if ((this.QueryRowIDsCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryRowIDsCompleted(this, new QueryRowIDsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.esri.com/schemas/ArcGIS/10.0", ResponseNamespace="http://www.esri.com/schemas/ArcGIS/10.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Result", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string GetCacheName([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, ElementName="MapName")] string MapName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, ElementName="LayerID")] int LayerID)
        {
            object[] results = this.Invoke("GetCacheName", new object[] {
                        MapName,
                        LayerID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCacheNameAsync(string mapName, int layerID)
        {
            this.GetCacheNameAsync(mapName, layerID, null);
        }
        
        /// <remarks/>
        public void GetCacheNameAsync(string mapName, int layerID, object userState)
        {
            if ((this.GetCacheNameOperationCompleted == null))
            {
                this.GetCacheNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCacheNameOperationCompleted);
            }
            this.InvokeAsync("GetCacheName", new object[] {
                        mapName,
                        layerID}, this.GetCacheNameOperationCompleted, userState);
        }
        
        private void OnGetCacheNameOperationCompleted(object arg)
        {
            if ((this.GetCacheNameCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCacheNameCompleted(this, new GetCacheNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.esri.com/schemas/ArcGIS/10.0", ResponseNamespace="http://www.esri.com/schemas/ArcGIS/10.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Result", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public double ComputeScale([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, ElementName="MapDescription")] MapDescription MapDescription, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, ElementName="MapImageDisplay")] ImageDisplay MapImageDisplay)
        {
            object[] results = this.Invoke("ComputeScale", new object[] {
                        MapDescription,
                        MapImageDisplay});
            return ((double)(results[0]));
        }
        
        /// <remarks/>
        public void ComputeScaleAsync(MapDescription mapDescription, ImageDisplay mapImageDisplay)
        {
            this.ComputeScaleAsync(mapDescription, mapImageDisplay, null);
        }
        
        /// <remarks/>
        public void ComputeScaleAsync(MapDescription mapDescription, ImageDisplay mapImageDisplay, object userState)
        {
            if ((this.ComputeScaleOperationCompleted == null))
            {
                this.ComputeScaleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnComputeScaleOperationCompleted);
            }
            this.InvokeAsync("ComputeScale", new object[] {
                        mapDescription,
                        mapImageDisplay}, this.ComputeScaleOperationCompleted, userState);
        }
        
        private void OnComputeScaleOperationCompleted(object arg)
        {
            if ((this.ComputeScaleCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ComputeScaleCompleted(this, new ComputeScaleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.esri.com/schemas/ArcGIS/10.0", ResponseNamespace="http://www.esri.com/schemas/ArcGIS/10.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("Result", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public MapServerFindResult[] Find([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, ElementName="MapDescription")] MapDescription MapDescription, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, ElementName="MapImageDisplay")] ImageDisplay MapImageDisplay, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, ElementName="SearchString")] string SearchString, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, ElementName="Contains")] bool Contains, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, ElementName="SearchFields")] string SearchFields, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, ElementName="FindOption")] esriFindOption FindOption, [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, ElementName="LayerIDs")] [System.Xml.Serialization.XmlArrayItemAttribute("Int", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)] int[] LayerIDs)
        {
            object[] results = this.Invoke("Find", new object[] {
                        MapDescription,
                        MapImageDisplay,
                        SearchString,
                        Contains,
                        SearchFields,
                        FindOption,
                        LayerIDs});
            return ((MapServerFindResult[])(results[0]));
        }
        
        /// <remarks/>
        public void FindAsync(MapDescription mapDescription, ImageDisplay mapImageDisplay, string searchString, bool contains, string searchFields, esriFindOption findOption, int[] layerIDs)
        {
            this.FindAsync(mapDescription, mapImageDisplay, searchString, contains, searchFields, findOption, layerIDs, null);
        }
        
        /// <remarks/>
        public void FindAsync(MapDescription mapDescription, ImageDisplay mapImageDisplay, string searchString, bool contains, string searchFields, esriFindOption findOption, int[] layerIDs, object userState)
        {
            if ((this.FindOperationCompleted == null))
            {
                this.FindOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFindOperationCompleted);
            }
            this.InvokeAsync("Find", new object[] {
                        mapDescription,
                        mapImageDisplay,
                        searchString,
                        contains,
                        searchFields,
                        findOption,
                        layerIDs}, this.FindOperationCompleted, userState);
        }
        
        private void OnFindOperationCompleted(object arg)
        {
            if ((this.FindCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FindCompleted(this, new FindCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.esri.com/schemas/ArcGIS/10.0", ResponseNamespace="http://www.esri.com/schemas/ArcGIS/10.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Result", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public MapImage ExportMapImage([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, ElementName="MapDescription")] MapDescription MapDescription, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, ElementName="ImageDescription")] ImageDescription ImageDescription)
        {
            object[] results = this.Invoke("ExportMapImage", new object[] {
                        MapDescription,
                        ImageDescription});
            return ((MapImage)(results[0]));
        }
        
        /// <remarks/>
        public void ExportMapImageAsync(MapDescription mapDescription, ImageDescription imageDescription)
        {
            this.ExportMapImageAsync(mapDescription, imageDescription, null);
        }
        
        /// <remarks/>
        public void ExportMapImageAsync(MapDescription mapDescription, ImageDescription imageDescription, object userState)
        {
            if ((this.ExportMapImageOperationCompleted == null))
            {
                this.ExportMapImageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExportMapImageOperationCompleted);
            }
            this.InvokeAsync("ExportMapImage", new object[] {
                        mapDescription,
                        imageDescription}, this.ExportMapImageOperationCompleted, userState);
        }
        
        private void OnExportMapImageOperationCompleted(object arg)
        {
            if ((this.ExportMapImageCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExportMapImageCompleted(this, new ExportMapImageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState)
        {
            base.CancelAsync(userState);
        }
    }
    
    /// <summary>
    /// .
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="PropertySet")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class PropertySet
    {
        
        /// <remarks/>
        private System.Collections.Generic.List<PropertySetProperty> propertyArray;
        
        public PropertySet()
        {
        }
        
        public PropertySet(System.Collections.Generic.List<PropertySetProperty> propertyArray)
        {
            this.propertyArray = propertyArray;
        }
        
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0, ElementName="PropertyArray")]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public System.Collections.Generic.List<PropertySetProperty> PropertyArray
        {
            get
            {
                return this.propertyArray;
            }
            set
            {
                if ((this.propertyArray != value))
                {
                    this.propertyArray = value;
                }
            }
        }
    }
    
    /// <summary>
    /// .
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="PropertySetProperty")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class PropertySetProperty
    {
        
        /// <remarks/>
        private string key;
        
        /// <remarks/>
        private object value;
        
        public PropertySetProperty()
        {
        }
        
        public PropertySetProperty(string key, object value)
        {
            this.key = key;
            this.value = value;
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0, ElementName="Key")]
        public string Key
        {
            get
            {
                return this.key;
            }
            set
            {
                if ((this.key != value))
                {
                    this.key = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true, Order=1, ElementName="Value")]
        public object Value
        {
            get
            {
                return this.value;
            }
            set
            {
                if ((this.value != value))
                {
                    this.value = value;
                }
            }
        }
    }
    
    /// <summary>
    /// ESRI AttachmentData Object.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="AttachmentData")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class AttachmentData
    {
        
        /// <remarks/>
        private byte[] data;
        
        /// <remarks/>
        private AttachmentInfo attachmentInfo;
        
        /// <remarks/>
        private string uRL;
        
        /// <remarks/>
        private esriTransportType transportType;
        
        public AttachmentData()
        {
        }
        
        public AttachmentData(byte[] data, AttachmentInfo attachmentInfo, string uRL, esriTransportType transportType)
        {
            this.data = data;
            this.attachmentInfo = attachmentInfo;
            this.uRL = uRL;
            this.transportType = transportType;
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary", Order=0, ElementName="Data")]
        public byte[] Data
        {
            get
            {
                return this.data;
            }
            set
            {
                if ((this.data != value))
                {
                    this.data = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1, ElementName="AttachmentInfo")]
        public AttachmentInfo AttachmentInfo
        {
            get
            {
                return this.attachmentInfo;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("AttachmentInfo");
                }
                if ((this.attachmentInfo != value))
                {
                    this.attachmentInfo = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2, ElementName="URL")]
        public string URL
        {
            get
            {
                return this.uRL;
            }
            set
            {
                if ((this.uRL != value))
                {
                    this.uRL = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=3, ElementName="TransportType")]
        public esriTransportType TransportType
        {
            get
            {
                return this.transportType;
            }
            set
            {
                if ((this.transportType != value))
                {
                    this.transportType = value;
                }
            }
        }
    }
    
    /// <summary>
    /// ESRI AttachmentInfo Object.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="AttachmentInfo")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class AttachmentInfo
    {
        
        /// <remarks/>
        private int attachmentID;
        
        /// <remarks/>
        private int parentID;
        
        /// <remarks/>
        private string name;
        
        /// <remarks/>
        private string contentType;
        
        /// <remarks/>
        private int size;
        
        public AttachmentInfo()
        {
        }
        
        public AttachmentInfo(int attachmentID, int parentID, string name, string contentType, int size)
        {
            this.attachmentID = attachmentID;
            this.parentID = parentID;
            this.name = name;
            this.contentType = contentType;
            this.size = size;
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0, ElementName="AttachmentID")]
        public int AttachmentID
        {
            get
            {
                return this.attachmentID;
            }
            set
            {
                if ((this.attachmentID != value))
                {
                    this.attachmentID = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1, ElementName="ParentID")]
        public int ParentID
        {
            get
            {
                return this.parentID;
            }
            set
            {
                if ((this.parentID != value))
                {
                    this.parentID = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2, ElementName="Name")]
        public string Name
        {
            get
            {
                return this.name;
            }
            set
            {
                if ((this.name != value))
                {
                    this.name = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=3, ElementName="ContentType")]
        public string ContentType
        {
            get
            {
                return this.contentType;
            }
            set
            {
                if ((this.contentType != value))
                {
                    this.contentType = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=4, ElementName="Size")]
        public int Size
        {
            get
            {
                return this.size;
            }
            set
            {
                if ((this.size != value))
                {
                    this.size = value;
                }
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="esriTransportType")]
    public enum esriTransportType
    {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriTransportTypeEmbedded")]
        esriTransportTypeEmbedded,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriTransportTypeUrl")]
        esriTransportTypeUrl,
    }
    
    /// <summary>
    /// .
    /// </summary>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(XMLFilterDef))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="FilterDef")]
    public abstract partial class FilterDef
    {
        
        public FilterDef()
        {
        }
    }
    
    /// <summary>
    /// ESRI XML Filter Definition Object.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="XMLFilterDef")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class XMLFilterDef : FilterDef
    {
        
        /// <remarks/>
        private string fieldName;
        
        /// <remarks/>
        private string expression;
        
        public XMLFilterDef()
        {
        }
        
        public XMLFilterDef(string fieldName, string expression)
        {
            this.fieldName = fieldName;
            this.expression = expression;
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0, ElementName="FieldName")]
        public string FieldName
        {
            get
            {
                return this.fieldName;
            }
            set
            {
                if ((this.fieldName != value))
                {
                    this.fieldName = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1, ElementName="Expression")]
        public string Expression
        {
            get
            {
                return this.expression;
            }
            set
            {
                if ((this.expression != value))
                {
                    this.expression = value;
                }
            }
        }
    }
    
    /// <summary>
    /// ESRI Query Filter Object.
    /// </summary>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SpatialFilter))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TimeQueryFilter))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ImageQueryFilter))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="QueryFilter")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class QueryFilter
    {
        
        /// <remarks/>
        private string subFields;
        
        /// <remarks/>
        private string whereClause;
        
        /// <remarks/>
        private string spatialReferenceFieldName;
        
        /// <remarks/>
        private double resolution;
        
        /// <remarks/>
        private SpatialReference outputSpatialReference;
        
        /// <remarks/>
        private FIDSet fIDSet;
        
        /// <remarks/>
        private string postfixClause;
        
        /// <remarks/>
        private System.Collections.Generic.List<FilterDef> filterDefs;
        
        /// <remarks/>
        private string prefixClause;
        
        public QueryFilter()
        {
        }
        
        public QueryFilter(string subFields, string whereClause, string spatialReferenceFieldName, double resolution, SpatialReference outputSpatialReference, FIDSet fIDSet, string postfixClause, System.Collections.Generic.List<FilterDef> filterDefs, string prefixClause)
        {
            this.subFields = subFields;
            this.whereClause = whereClause;
            this.spatialReferenceFieldName = spatialReferenceFieldName;
            this.resolution = resolution;
            this.outputSpatialReference = outputSpatialReference;
            this.fIDSet = fIDSet;
            this.postfixClause = postfixClause;
            this.filterDefs = filterDefs;
            this.prefixClause = prefixClause;
        }
        
        /// <summary>
        /// The comma delimited list of field names for the filter.
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0, ElementName="SubFields")]
        public string SubFields
        {
            get
            {
                return this.subFields;
            }
            set
            {
                if ((this.subFields != value))
                {
                    this.subFields = value;
                }
            }
        }
        
        /// <summary>
        /// The where clause for the filter.
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1, ElementName="WhereClause")]
        public string WhereClause
        {
            get
            {
                return this.whereClause;
            }
            set
            {
                if ((this.whereClause != value))
                {
                    this.whereClause = value;
                }
            }
        }
        
        /// <summary>
        /// 
        ///            The field name of the output spatial reference.
        ///          .
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2, ElementName="SpatialReferenceFieldName")]
        public string SpatialReferenceFieldName
        {
            get
            {
                return this.spatialReferenceFieldName;
            }
            set
            {
                if ((this.spatialReferenceFieldName != value))
                {
                    this.spatialReferenceFieldName = value;
                }
            }
        }
        
        /// <summary>
        /// 
        ///            The spatial resolution in which to output geometry.
        ///          .
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=3, ElementName="Resolution")]
        public double Resolution
        {
            get
            {
                return this.resolution;
            }
            set
            {
                if ((this.resolution != value))
                {
                    this.resolution = value;
                }
            }
        }
        
        /// <summary>
        /// The spatial reference in which to output geometry for a given field.
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=4, ElementName="OutputSpatialReference")]
        public SpatialReference OutputSpatialReference
        {
            get
            {
                return this.outputSpatialReference;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("OutputSpatialReference");
                }
                if ((this.outputSpatialReference != value))
                {
                    this.outputSpatialReference = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=5, ElementName="FIDSet")]
        public FIDSet FIDSet
        {
            get
            {
                return this.fIDSet;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("FIDSet");
                }
                if ((this.fIDSet != value))
                {
                    this.fIDSet = value;
                }
            }
        }
        
        /// <summary>
        /// A clause that will be appended to the end of the where clause. Most commonly used for clauses like ORDER BY.
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=6, ElementName="PostfixClause")]
        public string PostfixClause
        {
            get
            {
                return this.postfixClause;
            }
            set
            {
                if ((this.postfixClause != value))
                {
                    this.postfixClause = value;
                }
            }
        }
        
        /// <summary>
        /// The filter definitions specified for this query filter.
        /// </summary>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=7, ElementName="FilterDefs")]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public System.Collections.Generic.List<FilterDef> FilterDefs
        {
            get
            {
                return this.filterDefs;
            }
            set
            {
                if ((this.filterDefs != value))
                {
                    this.filterDefs = value;
                }
            }
        }
        
        /// <summary>
        /// A clause that will be appended to the select statement. Most commonly used for select statements with DISTINCT clause.
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=8, ElementName="PrefixClause")]
        public string PrefixClause
        {
            get
            {
                return this.prefixClause;
            }
            set
            {
                if ((this.prefixClause != value))
                {
                    this.prefixClause = value;
                }
            }
        }
    }
    
    /// <summary>
    /// .
    /// </summary>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UnknownCoordinateSystem))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GeographicCoordinateSystem))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ProjectedCoordinateSystem))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="SpatialReference")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public abstract partial class SpatialReference
    {
        
        /// <remarks/>
        private string wKT;
        
        /// <remarks/>
        private double xOrigin;
        
        /// <remarks/>
        private bool xOriginSpecified;
        
        /// <remarks/>
        private double yOrigin;
        
        /// <remarks/>
        private bool yOriginSpecified;
        
        /// <remarks/>
        private double xYScale;
        
        /// <remarks/>
        private bool xYScaleSpecified;
        
        /// <remarks/>
        private double zOrigin;
        
        /// <remarks/>
        private bool zOriginSpecified;
        
        /// <remarks/>
        private double zScale;
        
        /// <remarks/>
        private bool zScaleSpecified;
        
        /// <remarks/>
        private double mOrigin;
        
        /// <remarks/>
        private bool mOriginSpecified;
        
        /// <remarks/>
        private double mScale;
        
        /// <remarks/>
        private bool mScaleSpecified;
        
        /// <remarks/>
        private double xYTolerance;
        
        /// <remarks/>
        private bool xYToleranceSpecified;
        
        /// <remarks/>
        private double zTolerance;
        
        /// <remarks/>
        private bool zToleranceSpecified;
        
        /// <remarks/>
        private double mTolerance;
        
        /// <remarks/>
        private bool mToleranceSpecified;
        
        /// <remarks/>
        private bool highPrecision;
        
        /// <remarks/>
        private bool highPrecisionSpecified;
        
        /// <remarks/>
        private double leftLongitude;
        
        /// <remarks/>
        private bool leftLongitudeSpecified;
        
        /// <remarks/>
        private int wKID;
        
        /// <remarks/>
        private bool wKIDSpecified;
        
        /// <remarks/>
        private int vCSWKID;
        
        /// <remarks/>
        private bool vCSWKIDSpecified;
        
        public SpatialReference()
        {
        }
        
        public SpatialReference(
                    string wKT, 
                    double xOrigin, 
                    bool xOriginSpecified, 
                    double yOrigin, 
                    bool yOriginSpecified, 
                    double xYScale, 
                    bool xYScaleSpecified, 
                    double zOrigin, 
                    bool zOriginSpecified, 
                    double zScale, 
                    bool zScaleSpecified, 
                    double mOrigin, 
                    bool mOriginSpecified, 
                    double mScale, 
                    bool mScaleSpecified, 
                    double xYTolerance, 
                    bool xYToleranceSpecified, 
                    double zTolerance, 
                    bool zToleranceSpecified, 
                    double mTolerance, 
                    bool mToleranceSpecified, 
                    bool highPrecision, 
                    bool highPrecisionSpecified, 
                    double leftLongitude, 
                    bool leftLongitudeSpecified, 
                    int wKID, 
                    bool wKIDSpecified, 
                    int vCSWKID, 
                    bool vCSWKIDSpecified)
        {
            this.wKT = wKT;
            this.xOrigin = xOrigin;
            this.xOriginSpecified = xOriginSpecified;
            this.yOrigin = yOrigin;
            this.yOriginSpecified = yOriginSpecified;
            this.xYScale = xYScale;
            this.xYScaleSpecified = xYScaleSpecified;
            this.zOrigin = zOrigin;
            this.zOriginSpecified = zOriginSpecified;
            this.zScale = zScale;
            this.zScaleSpecified = zScaleSpecified;
            this.mOrigin = mOrigin;
            this.mOriginSpecified = mOriginSpecified;
            this.mScale = mScale;
            this.mScaleSpecified = mScaleSpecified;
            this.xYTolerance = xYTolerance;
            this.xYToleranceSpecified = xYToleranceSpecified;
            this.zTolerance = zTolerance;
            this.zToleranceSpecified = zToleranceSpecified;
            this.mTolerance = mTolerance;
            this.mToleranceSpecified = mToleranceSpecified;
            this.highPrecision = highPrecision;
            this.highPrecisionSpecified = highPrecisionSpecified;
            this.leftLongitude = leftLongitude;
            this.leftLongitudeSpecified = leftLongitudeSpecified;
            this.wKID = wKID;
            this.wKIDSpecified = wKIDSpecified;
            this.vCSWKID = vCSWKID;
            this.vCSWKIDSpecified = vCSWKIDSpecified;
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0, ElementName="WKT")]
        public string WKT
        {
            get
            {
                return this.wKT;
            }
            set
            {
                if ((this.wKT != value))
                {
                    this.wKT = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1, ElementName="XOrigin")]
        public double XOrigin
        {
            get
            {
                return this.xOrigin;
            }
            set
            {
                if ((this.xOrigin != value))
                {
                    this.xOrigin = value;
                    this.xOriginSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool XOriginSpecified
        {
            get
            {
                return this.xOriginSpecified;
            }
            set
            {
                if ((this.xOriginSpecified != value))
                {
                    this.xOriginSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2, ElementName="YOrigin")]
        public double YOrigin
        {
            get
            {
                return this.yOrigin;
            }
            set
            {
                if ((this.yOrigin != value))
                {
                    this.yOrigin = value;
                    this.yOriginSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool YOriginSpecified
        {
            get
            {
                return this.yOriginSpecified;
            }
            set
            {
                if ((this.yOriginSpecified != value))
                {
                    this.yOriginSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=3, ElementName="XYScale")]
        public double XYScale
        {
            get
            {
                return this.xYScale;
            }
            set
            {
                if ((this.xYScale != value))
                {
                    this.xYScale = value;
                    this.xYScaleSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool XYScaleSpecified
        {
            get
            {
                return this.xYScaleSpecified;
            }
            set
            {
                if ((this.xYScaleSpecified != value))
                {
                    this.xYScaleSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=4, ElementName="ZOrigin")]
        public double ZOrigin
        {
            get
            {
                return this.zOrigin;
            }
            set
            {
                if ((this.zOrigin != value))
                {
                    this.zOrigin = value;
                    this.zOriginSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ZOriginSpecified
        {
            get
            {
                return this.zOriginSpecified;
            }
            set
            {
                if ((this.zOriginSpecified != value))
                {
                    this.zOriginSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=5, ElementName="ZScale")]
        public double ZScale
        {
            get
            {
                return this.zScale;
            }
            set
            {
                if ((this.zScale != value))
                {
                    this.zScale = value;
                    this.zScaleSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ZScaleSpecified
        {
            get
            {
                return this.zScaleSpecified;
            }
            set
            {
                if ((this.zScaleSpecified != value))
                {
                    this.zScaleSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=6, ElementName="MOrigin")]
        public double MOrigin
        {
            get
            {
                return this.mOrigin;
            }
            set
            {
                if ((this.mOrigin != value))
                {
                    this.mOrigin = value;
                    this.mOriginSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MOriginSpecified
        {
            get
            {
                return this.mOriginSpecified;
            }
            set
            {
                if ((this.mOriginSpecified != value))
                {
                    this.mOriginSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=7, ElementName="MScale")]
        public double MScale
        {
            get
            {
                return this.mScale;
            }
            set
            {
                if ((this.mScale != value))
                {
                    this.mScale = value;
                    this.mScaleSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MScaleSpecified
        {
            get
            {
                return this.mScaleSpecified;
            }
            set
            {
                if ((this.mScaleSpecified != value))
                {
                    this.mScaleSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=8, ElementName="XYTolerance")]
        public double XYTolerance
        {
            get
            {
                return this.xYTolerance;
            }
            set
            {
                if ((this.xYTolerance != value))
                {
                    this.xYTolerance = value;
                    this.xYToleranceSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool XYToleranceSpecified
        {
            get
            {
                return this.xYToleranceSpecified;
            }
            set
            {
                if ((this.xYToleranceSpecified != value))
                {
                    this.xYToleranceSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=9, ElementName="ZTolerance")]
        public double ZTolerance
        {
            get
            {
                return this.zTolerance;
            }
            set
            {
                if ((this.zTolerance != value))
                {
                    this.zTolerance = value;
                    this.zToleranceSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ZToleranceSpecified
        {
            get
            {
                return this.zToleranceSpecified;
            }
            set
            {
                if ((this.zToleranceSpecified != value))
                {
                    this.zToleranceSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=10, ElementName="MTolerance")]
        public double MTolerance
        {
            get
            {
                return this.mTolerance;
            }
            set
            {
                if ((this.mTolerance != value))
                {
                    this.mTolerance = value;
                    this.mToleranceSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MToleranceSpecified
        {
            get
            {
                return this.mToleranceSpecified;
            }
            set
            {
                if ((this.mToleranceSpecified != value))
                {
                    this.mToleranceSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=11, ElementName="HighPrecision")]
        public bool HighPrecision
        {
            get
            {
                return this.highPrecision;
            }
            set
            {
                if ((this.highPrecision != value))
                {
                    this.highPrecision = value;
                    this.highPrecisionSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HighPrecisionSpecified
        {
            get
            {
                return this.highPrecisionSpecified;
            }
            set
            {
                if ((this.highPrecisionSpecified != value))
                {
                    this.highPrecisionSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=12, ElementName="LeftLongitude")]
        public double LeftLongitude
        {
            get
            {
                return this.leftLongitude;
            }
            set
            {
                if ((this.leftLongitude != value))
                {
                    this.leftLongitude = value;
                    this.leftLongitudeSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LeftLongitudeSpecified
        {
            get
            {
                return this.leftLongitudeSpecified;
            }
            set
            {
                if ((this.leftLongitudeSpecified != value))
                {
                    this.leftLongitudeSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=13, ElementName="WKID")]
        public int WKID
        {
            get
            {
                return this.wKID;
            }
            set
            {
                if ((this.wKID != value))
                {
                    this.wKID = value;
                    this.wKIDSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WKIDSpecified
        {
            get
            {
                return this.wKIDSpecified;
            }
            set
            {
                if ((this.wKIDSpecified != value))
                {
                    this.wKIDSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=14, ElementName="VCSWKID")]
        public int VCSWKID
        {
            get
            {
                return this.vCSWKID;
            }
            set
            {
                if ((this.vCSWKID != value))
                {
                    this.vCSWKID = value;
                    this.vCSWKIDSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool VCSWKIDSpecified
        {
            get
            {
                return this.vCSWKIDSpecified;
            }
            set
            {
                if ((this.vCSWKIDSpecified != value))
                {
                    this.vCSWKIDSpecified = value;
                }
            }
        }
    }
    
    /// <summary>
    /// .
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="UnknownCoordinateSystem")]
    public partial class UnknownCoordinateSystem : SpatialReference
    {
        
        public UnknownCoordinateSystem()
        {
        }
    }
    
    /// <summary>
    /// .
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="GeographicCoordinateSystem")]
    public partial class GeographicCoordinateSystem : SpatialReference
    {
        
        public GeographicCoordinateSystem()
        {
        }
    }
    
    /// <summary>
    /// .
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="ProjectedCoordinateSystem")]
    public partial class ProjectedCoordinateSystem : SpatialReference
    {
        
        public ProjectedCoordinateSystem()
        {
        }
    }
    
    /// <summary>
    /// ESRI FID Set object.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="FIDSet")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class FIDSet
    {
        
        /// <remarks/>
        private System.Collections.Generic.List<int> fIDArray;
        
        public FIDSet()
        {
        }
        
        public FIDSet(System.Collections.Generic.List<int> fIDArray)
        {
            this.fIDArray = fIDArray;
        }
        
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0, ElementName="FIDArray")]
        [System.Xml.Serialization.XmlArrayItemAttribute("Int", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public System.Collections.Generic.List<int> FIDArray
        {
            get
            {
                return this.fIDArray;
            }
            set
            {
                if ((this.fIDArray != value))
                {
                    this.fIDArray = value;
                }
            }
        }
    }
    
    /// <summary>
    /// ESRI Spatial Filter Object.
    /// </summary>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TimeQueryFilter))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ImageQueryFilter))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="SpatialFilter")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class SpatialFilter : QueryFilter
    {
        
        /// <remarks/>
        private esriSearchOrder searchOrder;
        
        /// <remarks/>
        private esriSpatialRelEnum spatialRel;
        
        /// <remarks/>
        private string spatialRelDescription;
        
        /// <remarks/>
        private Geometry filterGeometry;
        
        /// <remarks/>
        private string geometryFieldName;
        
        /// <remarks/>
        private bool filterOwnsGeometry;
        
        public SpatialFilter()
        {
        }
        
        public SpatialFilter(esriSearchOrder searchOrder, esriSpatialRelEnum spatialRel, string spatialRelDescription, Geometry filterGeometry, string geometryFieldName, bool filterOwnsGeometry)
        {
            this.searchOrder = searchOrder;
            this.spatialRel = spatialRel;
            this.spatialRelDescription = spatialRelDescription;
            this.filterGeometry = filterGeometry;
            this.geometryFieldName = geometryFieldName;
            this.filterOwnsGeometry = filterOwnsGeometry;
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0, ElementName="SearchOrder")]
        public esriSearchOrder SearchOrder
        {
            get
            {
                return this.searchOrder;
            }
            set
            {
                if ((this.searchOrder != value))
                {
                    this.searchOrder = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1, ElementName="SpatialRel")]
        public esriSpatialRelEnum SpatialRel
        {
            get
            {
                return this.spatialRel;
            }
            set
            {
                if ((this.spatialRel != value))
                {
                    this.spatialRel = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2, ElementName="SpatialRelDescription")]
        public string SpatialRelDescription
        {
            get
            {
                return this.spatialRelDescription;
            }
            set
            {
                if ((this.spatialRelDescription != value))
                {
                    this.spatialRelDescription = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=3, ElementName="FilterGeometry")]
        public Geometry FilterGeometry
        {
            get
            {
                return this.filterGeometry;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("FilterGeometry");
                }
                if ((this.filterGeometry != value))
                {
                    this.filterGeometry = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=4, ElementName="GeometryFieldName")]
        public string GeometryFieldName
        {
            get
            {
                return this.geometryFieldName;
            }
            set
            {
                if ((this.geometryFieldName != value))
                {
                    this.geometryFieldName = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=5, ElementName="FilterOwnsGeometry")]
        public bool FilterOwnsGeometry
        {
            get
            {
                return this.filterOwnsGeometry;
            }
            set
            {
                if ((this.filterOwnsGeometry != value))
                {
                    this.filterOwnsGeometry = value;
                }
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="esriSearchOrder")]
    public enum esriSearchOrder
    {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriSearchOrderSpatial")]
        esriSearchOrderSpatial,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriSearchOrderAttribute")]
        esriSearchOrderAttribute,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="esriSpatialRelEnum")]
    public enum esriSpatialRelEnum
    {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriSpatialRelUndefined")]
        esriSpatialRelUndefined,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriSpatialRelIntersects")]
        esriSpatialRelIntersects,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriSpatialRelEnvelopeIntersects")]
        esriSpatialRelEnvelopeIntersects,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriSpatialRelIndexIntersects")]
        esriSpatialRelIndexIntersects,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriSpatialRelTouches")]
        esriSpatialRelTouches,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriSpatialRelOverlaps")]
        esriSpatialRelOverlaps,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriSpatialRelCrosses")]
        esriSpatialRelCrosses,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriSpatialRelWithin")]
        esriSpatialRelWithin,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriSpatialRelContains")]
        esriSpatialRelContains,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriSpatialRelRelation")]
        esriSpatialRelRelation,
    }
    
    /// <summary>
    /// .
    /// </summary>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TriangleStrip))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TriangleFan))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(MultiPatch))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(MultiPatchN))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(MultiPatchB))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Multipoint))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(MultipointN))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(MultipointB))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Envelope))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(EnvelopeB))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(EnvelopeN))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Point))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(PointB))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(PointN))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Curve))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Path))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Ring))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Polycurve))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Polyline))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(PolylineB))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(PolylineN))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Polygon))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(PolygonB))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(PolygonN))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Segment))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(BezierCurve))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CircularArc))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(EllipticArc))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Line))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="Geometry")]
    public partial class Geometry
    {
        
        public Geometry()
        {
        }
    }
    
    /// <summary>
    /// .
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="TriangleStrip")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class TriangleStrip : Geometry
    {
        
        /// <remarks/>
        private System.Collections.Generic.List<Point> pointArray;
        
        public TriangleStrip()
        {
        }
        
        public TriangleStrip(System.Collections.Generic.List<Point> pointArray)
        {
            this.pointArray = pointArray;
        }
        
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0, ElementName="PointArray")]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public System.Collections.Generic.List<Point> PointArray
        {
            get
            {
                return this.pointArray;
            }
            set
            {
                if ((this.pointArray != value))
                {
                    this.pointArray = value;
                }
            }
        }
    }
    
    /// <summary>
    /// .
    /// </summary>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(PointB))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(PointN))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="Point")]
    public abstract partial class Point : Geometry
    {
        
        public Point()
        {
        }
    }
    
    /// <summary>
    /// .
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="PointB")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class PointB : Point
    {
        
        /// <remarks/>
        private byte[] bytes;
        
        public PointB()
        {
        }
        
        public PointB(byte[] bytes)
        {
            this.bytes = bytes;
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary", Order=0, ElementName="Bytes")]
        public byte[] Bytes
        {
            get
            {
                return this.bytes;
            }
            set
            {
                if ((this.bytes != value))
                {
                    this.bytes = value;
                }
            }
        }
    }
    
    /// <summary>
    /// .
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="PointN")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class PointN : Point
    {
        
        /// <remarks/>
        private double x;
        
        /// <remarks/>
        private double y;
        
        /// <remarks/>
        private double m;
        
        /// <remarks/>
        private bool mSpecified;
        
        /// <remarks/>
        private double z;
        
        /// <remarks/>
        private bool zSpecified;
        
        /// <remarks/>
        private int iD;
        
        /// <remarks/>
        private bool iDSpecified;
        
        /// <remarks/>
        private SpatialReference spatialReference;
        
        public PointN()
        {
        }
        
        public PointN(double x, double y, double m, bool mSpecified, double z, bool zSpecified, int iD, bool iDSpecified, SpatialReference spatialReference)
        {
            this.x = x;
            this.y = y;
            this.m = m;
            this.mSpecified = mSpecified;
            this.z = z;
            this.zSpecified = zSpecified;
            this.iD = iD;
            this.iDSpecified = iDSpecified;
            this.spatialReference = spatialReference;
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0, ElementName="X")]
        public double X
        {
            get
            {
                return this.x;
            }
            set
            {
                if ((this.x != value))
                {
                    this.x = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1, ElementName="Y")]
        public double Y
        {
            get
            {
                return this.y;
            }
            set
            {
                if ((this.y != value))
                {
                    this.y = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2, ElementName="M")]
        public double M
        {
            get
            {
                return this.m;
            }
            set
            {
                if ((this.m != value))
                {
                    this.m = value;
                    this.mSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MSpecified
        {
            get
            {
                return this.mSpecified;
            }
            set
            {
                if ((this.mSpecified != value))
                {
                    this.mSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=3, ElementName="Z")]
        public double Z
        {
            get
            {
                return this.z;
            }
            set
            {
                if ((this.z != value))
                {
                    this.z = value;
                    this.zSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ZSpecified
        {
            get
            {
                return this.zSpecified;
            }
            set
            {
                if ((this.zSpecified != value))
                {
                    this.zSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=4, ElementName="ID")]
        public int ID
        {
            get
            {
                return this.iD;
            }
            set
            {
                if ((this.iD != value))
                {
                    this.iD = value;
                    this.iDSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IDSpecified
        {
            get
            {
                return this.iDSpecified;
            }
            set
            {
                if ((this.iDSpecified != value))
                {
                    this.iDSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=5, ElementName="SpatialReference")]
        public SpatialReference SpatialReference
        {
            get
            {
                return this.spatialReference;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("SpatialReference");
                }
                if ((this.spatialReference != value))
                {
                    this.spatialReference = value;
                }
            }
        }
    }
    
    /// <summary>
    /// .
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="TriangleFan")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class TriangleFan : Geometry
    {
        
        /// <remarks/>
        private System.Collections.Generic.List<Point> pointArray;
        
        public TriangleFan()
        {
        }
        
        public TriangleFan(System.Collections.Generic.List<Point> pointArray)
        {
            this.pointArray = pointArray;
        }
        
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0, ElementName="PointArray")]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public System.Collections.Generic.List<Point> PointArray
        {
            get
            {
                return this.pointArray;
            }
            set
            {
                if ((this.pointArray != value))
                {
                    this.pointArray = value;
                }
            }
        }
    }
    
    /// <summary>
    /// .
    /// </summary>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(MultiPatchN))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(MultiPatchB))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="MultiPatch")]
    public abstract partial class MultiPatch : Geometry
    {
        
        public MultiPatch()
        {
        }
    }
    
    /// <summary>
    /// .
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="MultiPatchN")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class MultiPatchN : MultiPatch
    {
        
        /// <remarks/>
        private bool hasID;
        
        /// <remarks/>
        private bool hasZ;
        
        /// <remarks/>
        private bool hasM;
        
        /// <remarks/>
        private Envelope extent;
        
        /// <remarks/>
        private System.Collections.Generic.List<Geometry> surfacePatchArray;
        
        public MultiPatchN()
        {
        }
        
        public MultiPatchN(bool hasID, bool hasZ, bool hasM, Envelope extent, System.Collections.Generic.List<Geometry> surfacePatchArray)
        {
            this.hasID = hasID;
            this.hasZ = hasZ;
            this.hasM = hasM;
            this.extent = extent;
            this.surfacePatchArray = surfacePatchArray;
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0, ElementName="HasID")]
        public bool HasID
        {
            get
            {
                return this.hasID;
            }
            set
            {
                if ((this.hasID != value))
                {
                    this.hasID = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1, ElementName="HasZ")]
        public bool HasZ
        {
            get
            {
                return this.hasZ;
            }
            set
            {
                if ((this.hasZ != value))
                {
                    this.hasZ = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2, ElementName="HasM")]
        public bool HasM
        {
            get
            {
                return this.hasM;
            }
            set
            {
                if ((this.hasM != value))
                {
                    this.hasM = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=3, ElementName="Extent")]
        public Envelope Extent
        {
            get
            {
                return this.extent;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("Extent");
                }
                if ((this.extent != value))
                {
                    this.extent = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=4, ElementName="SurfacePatchArray")]
        [System.Xml.Serialization.XmlArrayItemAttribute("SurfacePatch", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public System.Collections.Generic.List<Geometry> SurfacePatchArray
        {
            get
            {
                return this.surfacePatchArray;
            }
            set
            {
                if ((this.surfacePatchArray != value))
                {
                    this.surfacePatchArray = value;
                }
            }
        }
    }
    
    /// <summary>
    /// .
    /// </summary>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(EnvelopeB))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(EnvelopeN))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="Envelope")]
    public abstract partial class Envelope : Geometry
    {
        
        public Envelope()
        {
        }
    }
    
    /// <summary>
    /// .
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="EnvelopeB")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class EnvelopeB : Envelope
    {
        
        /// <remarks/>
        private byte[] bytes;
        
        public EnvelopeB()
        {
        }
        
        public EnvelopeB(byte[] bytes)
        {
            this.bytes = bytes;
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary", Order=0, ElementName="Bytes")]
        public byte[] Bytes
        {
            get
            {
                return this.bytes;
            }
            set
            {
                if ((this.bytes != value))
                {
                    this.bytes = value;
                }
            }
        }
    }
    
    /// <summary>
    /// .
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="EnvelopeN")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class EnvelopeN : Envelope
    {
        
        /// <remarks/>
        private double xMin;
        
        /// <remarks/>
        private double yMin;
        
        /// <remarks/>
        private double xMax;
        
        /// <remarks/>
        private double yMax;
        
        /// <remarks/>
        private double zMin;
        
        /// <remarks/>
        private bool zMinSpecified;
        
        /// <remarks/>
        private double zMax;
        
        /// <remarks/>
        private bool zMaxSpecified;
        
        /// <remarks/>
        private double mMin;
        
        /// <remarks/>
        private bool mMinSpecified;
        
        /// <remarks/>
        private double mMax;
        
        /// <remarks/>
        private bool mMaxSpecified;
        
        /// <remarks/>
        private SpatialReference spatialReference;
        
        public EnvelopeN()
        {
        }
        
        public EnvelopeN(double xMin, double yMin, double xMax, double yMax, double zMin, bool zMinSpecified, double zMax, bool zMaxSpecified, double mMin, bool mMinSpecified, double mMax, bool mMaxSpecified, SpatialReference spatialReference)
        {
            this.xMin = xMin;
            this.yMin = yMin;
            this.xMax = xMax;
            this.yMax = yMax;
            this.zMin = zMin;
            this.zMinSpecified = zMinSpecified;
            this.zMax = zMax;
            this.zMaxSpecified = zMaxSpecified;
            this.mMin = mMin;
            this.mMinSpecified = mMinSpecified;
            this.mMax = mMax;
            this.mMaxSpecified = mMaxSpecified;
            this.spatialReference = spatialReference;
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0, ElementName="XMin")]
        public double XMin
        {
            get
            {
                return this.xMin;
            }
            set
            {
                if ((this.xMin != value))
                {
                    this.xMin = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1, ElementName="YMin")]
        public double YMin
        {
            get
            {
                return this.yMin;
            }
            set
            {
                if ((this.yMin != value))
                {
                    this.yMin = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2, ElementName="XMax")]
        public double XMax
        {
            get
            {
                return this.xMax;
            }
            set
            {
                if ((this.xMax != value))
                {
                    this.xMax = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=3, ElementName="YMax")]
        public double YMax
        {
            get
            {
                return this.yMax;
            }
            set
            {
                if ((this.yMax != value))
                {
                    this.yMax = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=4, ElementName="ZMin")]
        public double ZMin
        {
            get
            {
                return this.zMin;
            }
            set
            {
                if ((this.zMin != value))
                {
                    this.zMin = value;
                    this.zMinSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ZMinSpecified
        {
            get
            {
                return this.zMinSpecified;
            }
            set
            {
                if ((this.zMinSpecified != value))
                {
                    this.zMinSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=5, ElementName="ZMax")]
        public double ZMax
        {
            get
            {
                return this.zMax;
            }
            set
            {
                if ((this.zMax != value))
                {
                    this.zMax = value;
                    this.zMaxSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ZMaxSpecified
        {
            get
            {
                return this.zMaxSpecified;
            }
            set
            {
                if ((this.zMaxSpecified != value))
                {
                    this.zMaxSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=6, ElementName="MMin")]
        public double MMin
        {
            get
            {
                return this.mMin;
            }
            set
            {
                if ((this.mMin != value))
                {
                    this.mMin = value;
                    this.mMinSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MMinSpecified
        {
            get
            {
                return this.mMinSpecified;
            }
            set
            {
                if ((this.mMinSpecified != value))
                {
                    this.mMinSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=7, ElementName="MMax")]
        public double MMax
        {
            get
            {
                return this.mMax;
            }
            set
            {
                if ((this.mMax != value))
                {
                    this.mMax = value;
                    this.mMaxSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MMaxSpecified
        {
            get
            {
                return this.mMaxSpecified;
            }
            set
            {
                if ((this.mMaxSpecified != value))
                {
                    this.mMaxSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=8, ElementName="SpatialReference")]
        public SpatialReference SpatialReference
        {
            get
            {
                return this.spatialReference;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("SpatialReference");
                }
                if ((this.spatialReference != value))
                {
                    this.spatialReference = value;
                }
            }
        }
    }
    
    /// <summary>
    /// .
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="MultiPatchB")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class MultiPatchB : MultiPatch
    {
        
        /// <remarks/>
        private byte[] bytes;
        
        public MultiPatchB()
        {
        }
        
        public MultiPatchB(byte[] bytes)
        {
            this.bytes = bytes;
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary", Order=0, ElementName="Bytes")]
        public byte[] Bytes
        {
            get
            {
                return this.bytes;
            }
            set
            {
                if ((this.bytes != value))
                {
                    this.bytes = value;
                }
            }
        }
    }
    
    /// <summary>
    /// .
    /// </summary>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(MultipointN))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(MultipointB))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="Multipoint")]
    public abstract partial class Multipoint : Geometry
    {
        
        public Multipoint()
        {
        }
    }
    
    /// <summary>
    /// .
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="MultipointN")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class MultipointN : Multipoint
    {
        
        /// <remarks/>
        private bool hasID;
        
        /// <remarks/>
        private bool hasZ;
        
        /// <remarks/>
        private bool hasM;
        
        /// <remarks/>
        private Envelope extent;
        
        /// <remarks/>
        private System.Collections.Generic.List<Point> pointArray;
        
        /// <remarks/>
        private SpatialReference spatialReference;
        
        public MultipointN()
        {
        }
        
        public MultipointN(bool hasID, bool hasZ, bool hasM, Envelope extent, System.Collections.Generic.List<Point> pointArray, SpatialReference spatialReference)
        {
            this.hasID = hasID;
            this.hasZ = hasZ;
            this.hasM = hasM;
            this.extent = extent;
            this.pointArray = pointArray;
            this.spatialReference = spatialReference;
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0, ElementName="HasID")]
        public bool HasID
        {
            get
            {
                return this.hasID;
            }
            set
            {
                if ((this.hasID != value))
                {
                    this.hasID = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1, ElementName="HasZ")]
        public bool HasZ
        {
            get
            {
                return this.hasZ;
            }
            set
            {
                if ((this.hasZ != value))
                {
                    this.hasZ = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2, ElementName="HasM")]
        public bool HasM
        {
            get
            {
                return this.hasM;
            }
            set
            {
                if ((this.hasM != value))
                {
                    this.hasM = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=3, ElementName="Extent")]
        public Envelope Extent
        {
            get
            {
                return this.extent;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("Extent");
                }
                if ((this.extent != value))
                {
                    this.extent = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=4, ElementName="PointArray")]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public System.Collections.Generic.List<Point> PointArray
        {
            get
            {
                return this.pointArray;
            }
            set
            {
                if ((this.pointArray != value))
                {
                    this.pointArray = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=5, ElementName="SpatialReference")]
        public SpatialReference SpatialReference
        {
            get
            {
                return this.spatialReference;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("SpatialReference");
                }
                if ((this.spatialReference != value))
                {
                    this.spatialReference = value;
                }
            }
        }
    }
    
    /// <summary>
    /// .
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="MultipointB")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class MultipointB : Multipoint
    {
        
        /// <remarks/>
        private byte[] bytes;
        
        public MultipointB()
        {
        }
        
        public MultipointB(byte[] bytes)
        {
            this.bytes = bytes;
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary", Order=0, ElementName="Bytes")]
        public byte[] Bytes
        {
            get
            {
                return this.bytes;
            }
            set
            {
                if ((this.bytes != value))
                {
                    this.bytes = value;
                }
            }
        }
    }
    
    /// <summary>
    /// .
    /// </summary>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Path))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Ring))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Polycurve))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Polyline))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(PolylineB))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(PolylineN))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Polygon))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(PolygonB))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(PolygonN))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Segment))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(BezierCurve))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CircularArc))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(EllipticArc))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Line))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="Curve")]
    public abstract partial class Curve : Geometry
    {
        
        public Curve()
        {
        }
    }
    
    /// <summary>
    /// .
    /// </summary>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Ring))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="Path")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class Path : Curve
    {
        
        /// <remarks/>
        private System.Collections.Generic.List<Point> pointArray;
        
        /// <remarks/>
        private System.Collections.Generic.List<Segment> segmentArray;
        
        public Path()
        {
        }
        
        public Path(System.Collections.Generic.List<Point> pointArray, System.Collections.Generic.List<Segment> segmentArray)
        {
            this.pointArray = pointArray;
            this.segmentArray = segmentArray;
        }
        
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0, ElementName="PointArray")]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public System.Collections.Generic.List<Point> PointArray
        {
            get
            {
                return this.pointArray;
            }
            set
            {
                if ((this.pointArray != value))
                {
                    this.pointArray = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1, ElementName="SegmentArray")]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public System.Collections.Generic.List<Segment> SegmentArray
        {
            get
            {
                return this.segmentArray;
            }
            set
            {
                if ((this.segmentArray != value))
                {
                    this.segmentArray = value;
                }
            }
        }
    }
    
    /// <summary>
    /// .
    /// </summary>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(BezierCurve))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CircularArc))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(EllipticArc))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Line))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="Segment")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public abstract partial class Segment : Curve
    {
        
        /// <remarks/>
        private Point fromPoint;
        
        /// <remarks/>
        private Point toPoint;
        
        public Segment()
        {
        }
        
        public Segment(Point fromPoint, Point toPoint)
        {
            this.fromPoint = fromPoint;
            this.toPoint = toPoint;
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0, ElementName="FromPoint")]
        public Point FromPoint
        {
            get
            {
                return this.fromPoint;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("FromPoint");
                }
                if ((this.fromPoint != value))
                {
                    this.fromPoint = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1, ElementName="ToPoint")]
        public Point ToPoint
        {
            get
            {
                return this.toPoint;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("ToPoint");
                }
                if ((this.toPoint != value))
                {
                    this.toPoint = value;
                }
            }
        }
    }
    
    /// <summary>
    /// .
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="BezierCurve")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class BezierCurve : Segment
    {
        
        /// <remarks/>
        private int degree;
        
        /// <remarks/>
        private System.Collections.Generic.List<Point> controlPointArray;
        
        public BezierCurve()
        {
        }
        
        public BezierCurve(int degree, System.Collections.Generic.List<Point> controlPointArray)
        {
            this.degree = degree;
            this.controlPointArray = controlPointArray;
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0, ElementName="Degree")]
        public int Degree
        {
            get
            {
                return this.degree;
            }
            set
            {
                if ((this.degree != value))
                {
                    this.degree = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1, ElementName="ControlPointArray")]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public System.Collections.Generic.List<Point> ControlPointArray
        {
            get
            {
                return this.controlPointArray;
            }
            set
            {
                if ((this.controlPointArray != value))
                {
                    this.controlPointArray = value;
                }
            }
        }
    }
    
    /// <summary>
    /// .
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="CircularArc")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class CircularArc : Segment
    {
        
        /// <remarks/>
        private Point centerPoint;
        
        /// <remarks/>
        private double fromAngle;
        
        /// <remarks/>
        private bool fromAngleSpecified;
        
        /// <remarks/>
        private double toAngle;
        
        /// <remarks/>
        private bool toAngleSpecified;
        
        /// <remarks/>
        private bool isCounterClockwise;
        
        /// <remarks/>
        private bool isMinor;
        
        /// <remarks/>
        private bool isLine;
        
        public CircularArc()
        {
        }
        
        public CircularArc(Point centerPoint, double fromAngle, bool fromAngleSpecified, double toAngle, bool toAngleSpecified, bool isCounterClockwise, bool isMinor, bool isLine)
        {
            this.centerPoint = centerPoint;
            this.fromAngle = fromAngle;
            this.fromAngleSpecified = fromAngleSpecified;
            this.toAngle = toAngle;
            this.toAngleSpecified = toAngleSpecified;
            this.isCounterClockwise = isCounterClockwise;
            this.isMinor = isMinor;
            this.isLine = isLine;
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0, ElementName="CenterPoint")]
        public Point CenterPoint
        {
            get
            {
                return this.centerPoint;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("CenterPoint");
                }
                if ((this.centerPoint != value))
                {
                    this.centerPoint = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1, ElementName="FromAngle")]
        public double FromAngle
        {
            get
            {
                return this.fromAngle;
            }
            set
            {
                if ((this.fromAngle != value))
                {
                    this.fromAngle = value;
                    this.fromAngleSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FromAngleSpecified
        {
            get
            {
                return this.fromAngleSpecified;
            }
            set
            {
                if ((this.fromAngleSpecified != value))
                {
                    this.fromAngleSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2, ElementName="ToAngle")]
        public double ToAngle
        {
            get
            {
                return this.toAngle;
            }
            set
            {
                if ((this.toAngle != value))
                {
                    this.toAngle = value;
                    this.toAngleSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ToAngleSpecified
        {
            get
            {
                return this.toAngleSpecified;
            }
            set
            {
                if ((this.toAngleSpecified != value))
                {
                    this.toAngleSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=3, ElementName="IsCounterClockwise")]
        public bool IsCounterClockwise
        {
            get
            {
                return this.isCounterClockwise;
            }
            set
            {
                if ((this.isCounterClockwise != value))
                {
                    this.isCounterClockwise = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=4, ElementName="IsMinor")]
        public bool IsMinor
        {
            get
            {
                return this.isMinor;
            }
            set
            {
                if ((this.isMinor != value))
                {
                    this.isMinor = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=5, ElementName="IsLine")]
        public bool IsLine
        {
            get
            {
                return this.isLine;
            }
            set
            {
                if ((this.isLine != value))
                {
                    this.isLine = value;
                }
            }
        }
    }
    
    /// <summary>
    /// .
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="EllipticArc")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class EllipticArc : Segment
    {
        
        /// <remarks/>
        private bool ellipseStd;
        
        /// <remarks/>
        private Point centerPoint;
        
        /// <remarks/>
        private double rotation;
        
        /// <remarks/>
        private double minorMajorRatio;
        
        /// <remarks/>
        private bool isCounterClockwise;
        
        /// <remarks/>
        private bool isMinor;
        
        public EllipticArc()
        {
        }
        
        public EllipticArc(bool ellipseStd, Point centerPoint, double rotation, double minorMajorRatio, bool isCounterClockwise, bool isMinor)
        {
            this.ellipseStd = ellipseStd;
            this.centerPoint = centerPoint;
            this.rotation = rotation;
            this.minorMajorRatio = minorMajorRatio;
            this.isCounterClockwise = isCounterClockwise;
            this.isMinor = isMinor;
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0, ElementName="EllipseStd")]
        public bool EllipseStd
        {
            get
            {
                return this.ellipseStd;
            }
            set
            {
                if ((this.ellipseStd != value))
                {
                    this.ellipseStd = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1, ElementName="CenterPoint")]
        public Point CenterPoint
        {
            get
            {
                return this.centerPoint;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("CenterPoint");
                }
                if ((this.centerPoint != value))
                {
                    this.centerPoint = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2, ElementName="Rotation")]
        public double Rotation
        {
            get
            {
                return this.rotation;
            }
            set
            {
                if ((this.rotation != value))
                {
                    this.rotation = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=3, ElementName="MinorMajorRatio")]
        public double MinorMajorRatio
        {
            get
            {
                return this.minorMajorRatio;
            }
            set
            {
                if ((this.minorMajorRatio != value))
                {
                    this.minorMajorRatio = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=4, ElementName="IsCounterClockwise")]
        public bool IsCounterClockwise
        {
            get
            {
                return this.isCounterClockwise;
            }
            set
            {
                if ((this.isCounterClockwise != value))
                {
                    this.isCounterClockwise = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=5, ElementName="IsMinor")]
        public bool IsMinor
        {
            get
            {
                return this.isMinor;
            }
            set
            {
                if ((this.isMinor != value))
                {
                    this.isMinor = value;
                }
            }
        }
    }
    
    /// <summary>
    /// .
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="Line")]
    public partial class Line : Segment
    {
        
        public Line()
        {
        }
    }
    
    /// <summary>
    /// .
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="Ring")]
    public partial class Ring : Path
    {
        
        public Ring()
        {
        }
    }
    
    /// <summary>
    /// .
    /// </summary>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Polyline))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(PolylineB))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(PolylineN))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Polygon))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(PolygonB))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(PolygonN))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="Polycurve")]
    public abstract partial class Polycurve : Curve
    {
        
        public Polycurve()
        {
        }
    }
    
    /// <summary>
    /// .
    /// </summary>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(PolylineB))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(PolylineN))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="Polyline")]
    public abstract partial class Polyline : Polycurve
    {
        
        public Polyline()
        {
        }
    }
    
    /// <summary>
    /// .
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="PolylineB")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class PolylineB : Polyline
    {
        
        /// <remarks/>
        private byte[] bytes;
        
        public PolylineB()
        {
        }
        
        public PolylineB(byte[] bytes)
        {
            this.bytes = bytes;
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary", Order=0, ElementName="Bytes")]
        public byte[] Bytes
        {
            get
            {
                return this.bytes;
            }
            set
            {
                if ((this.bytes != value))
                {
                    this.bytes = value;
                }
            }
        }
    }
    
    /// <summary>
    /// .
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="PolylineN")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class PolylineN : Polyline
    {
        
        /// <remarks/>
        private bool hasID;
        
        /// <remarks/>
        private bool hasZ;
        
        /// <remarks/>
        private bool hasM;
        
        /// <remarks/>
        private Envelope extent;
        
        /// <remarks/>
        private System.Collections.Generic.List<Path> pathArray;
        
        /// <remarks/>
        private SpatialReference spatialReference;
        
        public PolylineN()
        {
        }
        
        public PolylineN(bool hasID, bool hasZ, bool hasM, Envelope extent, System.Collections.Generic.List<Path> pathArray, SpatialReference spatialReference)
        {
            this.hasID = hasID;
            this.hasZ = hasZ;
            this.hasM = hasM;
            this.extent = extent;
            this.pathArray = pathArray;
            this.spatialReference = spatialReference;
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0, ElementName="HasID")]
        public bool HasID
        {
            get
            {
                return this.hasID;
            }
            set
            {
                if ((this.hasID != value))
                {
                    this.hasID = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1, ElementName="HasZ")]
        public bool HasZ
        {
            get
            {
                return this.hasZ;
            }
            set
            {
                if ((this.hasZ != value))
                {
                    this.hasZ = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2, ElementName="HasM")]
        public bool HasM
        {
            get
            {
                return this.hasM;
            }
            set
            {
                if ((this.hasM != value))
                {
                    this.hasM = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=3, ElementName="Extent")]
        public Envelope Extent
        {
            get
            {
                return this.extent;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("Extent");
                }
                if ((this.extent != value))
                {
                    this.extent = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=4, ElementName="PathArray")]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public System.Collections.Generic.List<Path> PathArray
        {
            get
            {
                return this.pathArray;
            }
            set
            {
                if ((this.pathArray != value))
                {
                    this.pathArray = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=5, ElementName="SpatialReference")]
        public SpatialReference SpatialReference
        {
            get
            {
                return this.spatialReference;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("SpatialReference");
                }
                if ((this.spatialReference != value))
                {
                    this.spatialReference = value;
                }
            }
        }
    }
    
    /// <summary>
    /// .
    /// </summary>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(PolygonB))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(PolygonN))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="Polygon")]
    public abstract partial class Polygon : Polycurve
    {
        
        public Polygon()
        {
        }
    }
    
    /// <summary>
    /// .
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="PolygonB")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class PolygonB : Polygon
    {
        
        /// <remarks/>
        private byte[] bytes;
        
        public PolygonB()
        {
        }
        
        public PolygonB(byte[] bytes)
        {
            this.bytes = bytes;
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary", Order=0, ElementName="Bytes")]
        public byte[] Bytes
        {
            get
            {
                return this.bytes;
            }
            set
            {
                if ((this.bytes != value))
                {
                    this.bytes = value;
                }
            }
        }
    }
    
    /// <summary>
    /// .
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="PolygonN")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class PolygonN : Polygon
    {
        
        /// <remarks/>
        private bool hasID;
        
        /// <remarks/>
        private bool hasZ;
        
        /// <remarks/>
        private bool hasM;
        
        /// <remarks/>
        private Envelope extent;
        
        /// <remarks/>
        private System.Collections.Generic.List<Ring> ringArray;
        
        /// <remarks/>
        private SpatialReference spatialReference;
        
        public PolygonN()
        {
        }
        
        public PolygonN(bool hasID, bool hasZ, bool hasM, Envelope extent, System.Collections.Generic.List<Ring> ringArray, SpatialReference spatialReference)
        {
            this.hasID = hasID;
            this.hasZ = hasZ;
            this.hasM = hasM;
            this.extent = extent;
            this.ringArray = ringArray;
            this.spatialReference = spatialReference;
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0, ElementName="HasID")]
        public bool HasID
        {
            get
            {
                return this.hasID;
            }
            set
            {
                if ((this.hasID != value))
                {
                    this.hasID = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1, ElementName="HasZ")]
        public bool HasZ
        {
            get
            {
                return this.hasZ;
            }
            set
            {
                if ((this.hasZ != value))
                {
                    this.hasZ = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2, ElementName="HasM")]
        public bool HasM
        {
            get
            {
                return this.hasM;
            }
            set
            {
                if ((this.hasM != value))
                {
                    this.hasM = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=3, ElementName="Extent")]
        public Envelope Extent
        {
            get
            {
                return this.extent;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("Extent");
                }
                if ((this.extent != value))
                {
                    this.extent = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=4, ElementName="RingArray")]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public System.Collections.Generic.List<Ring> RingArray
        {
            get
            {
                return this.ringArray;
            }
            set
            {
                if ((this.ringArray != value))
                {
                    this.ringArray = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=5, ElementName="SpatialReference")]
        public SpatialReference SpatialReference
        {
            get
            {
                return this.spatialReference;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("SpatialReference");
                }
                if ((this.spatialReference != value))
                {
                    this.spatialReference = value;
                }
            }
        }
    }
    
    /// <summary>
    /// .
    /// </summary>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ImageQueryFilter))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="TimeQueryFilter")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class TimeQueryFilter : SpatialFilter
    {
        
        /// <remarks/>
        private TimeValue timeValue;
        
        /// <remarks/>
        private TimeReference outputTimeReference;
        
        /// <remarks/>
        private esriTimeRelation timeRelation;
        
        public TimeQueryFilter()
        {
        }
        
        public TimeQueryFilter(TimeValue timeValue, TimeReference outputTimeReference, esriTimeRelation timeRelation)
        {
            this.timeValue = timeValue;
            this.outputTimeReference = outputTimeReference;
            this.timeRelation = timeRelation;
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0, ElementName="TimeValue")]
        public TimeValue TimeValue
        {
            get
            {
                return this.timeValue;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("TimeValue");
                }
                if ((this.timeValue != value))
                {
                    this.timeValue = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1, ElementName="OutputTimeReference")]
        public TimeReference OutputTimeReference
        {
            get
            {
                return this.outputTimeReference;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("OutputTimeReference");
                }
                if ((this.outputTimeReference != value))
                {
                    this.outputTimeReference = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2, ElementName="TimeRelation")]
        public esriTimeRelation TimeRelation
        {
            get
            {
                return this.timeRelation;
            }
            set
            {
                if ((this.timeRelation != value))
                {
                    this.timeRelation = value;
                }
            }
        }
    }
    
    /// <summary>
    /// .
    /// </summary>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TimeExtent))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TimeInstant))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="TimeValue")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class TimeValue
    {
        
        /// <remarks/>
        private TimeReference timeReference;
        
        public TimeValue()
        {
        }
        
        public TimeValue(TimeReference timeReference)
        {
            this.timeReference = timeReference;
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0, ElementName="TimeReference")]
        public TimeReference TimeReference
        {
            get
            {
                return this.timeReference;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("TimeReference");
                }
                if ((this.timeReference != value))
                {
                    this.timeReference = value;
                }
            }
        }
    }
    
    /// <summary>
    /// .
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="TimeReference")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class TimeReference
    {
        
        /// <remarks/>
        private string timeZoneNameID;
        
        /// <remarks/>
        private bool respectsDaylightSavingTime;
        
        /// <remarks/>
        private bool respectsDaylightSavingTimeSpecified;
        
        public TimeReference()
        {
        }
        
        public TimeReference(string timeZoneNameID, bool respectsDaylightSavingTime, bool respectsDaylightSavingTimeSpecified)
        {
            this.timeZoneNameID = timeZoneNameID;
            this.respectsDaylightSavingTime = respectsDaylightSavingTime;
            this.respectsDaylightSavingTimeSpecified = respectsDaylightSavingTimeSpecified;
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0, ElementName="TimeZoneNameID")]
        public string TimeZoneNameID
        {
            get
            {
                return this.timeZoneNameID;
            }
            set
            {
                if ((this.timeZoneNameID != value))
                {
                    this.timeZoneNameID = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1, ElementName="RespectsDaylightSavingTime")]
        public bool RespectsDaylightSavingTime
        {
            get
            {
                return this.respectsDaylightSavingTime;
            }
            set
            {
                if ((this.respectsDaylightSavingTime != value))
                {
                    this.respectsDaylightSavingTime = value;
                    this.respectsDaylightSavingTimeSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RespectsDaylightSavingTimeSpecified
        {
            get
            {
                return this.respectsDaylightSavingTimeSpecified;
            }
            set
            {
                if ((this.respectsDaylightSavingTimeSpecified != value))
                {
                    this.respectsDaylightSavingTimeSpecified = value;
                }
            }
        }
    }
    
    /// <summary>
    /// .
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="TimeExtent")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class TimeExtent : TimeValue
    {
        
        /// <remarks/>
        private System.DateTime startTime;
        
        /// <remarks/>
        private bool startTimeSpecified;
        
        /// <remarks/>
        private System.DateTime endTime;
        
        /// <remarks/>
        private bool endTimeSpecified;
        
        /// <remarks/>
        private bool empty;
        
        public TimeExtent()
        {
            this.Empty = false;
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0, ElementName="StartTime")]
        public System.DateTime StartTime
        {
            get
            {
                return this.startTime;
            }
            set
            {
                if ((this.startTime != value))
                {
                    this.startTime = value;
                    this.startTimeSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StartTimeSpecified
        {
            get
            {
                return this.startTimeSpecified;
            }
            set
            {
                if ((this.startTimeSpecified != value))
                {
                    this.startTimeSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1, ElementName="EndTime")]
        public System.DateTime EndTime
        {
            get
            {
                return this.endTime;
            }
            set
            {
                if ((this.endTime != value))
                {
                    this.endTime = value;
                    this.endTimeSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EndTimeSpecified
        {
            get
            {
                return this.endTimeSpecified;
            }
            set
            {
                if ((this.endTimeSpecified != value))
                {
                    this.endTimeSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2, ElementName="Empty")]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool Empty
        {
            get
            {
                return this.empty;
            }
            set
            {
                if ((this.empty != value))
                {
                    this.empty = value;
                }
            }
        }
    }
    
    /// <summary>
    /// .
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="TimeInstant")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class TimeInstant : TimeValue
    {
        
        /// <remarks/>
        private System.DateTime time;
        
        public TimeInstant()
        {
        }
        
        public TimeInstant(System.DateTime time)
        {
            this.time = time;
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0, ElementName="Time")]
        public System.DateTime Time
        {
            get
            {
                return this.time;
            }
            set
            {
                if ((this.time != value))
                {
                    this.time = value;
                }
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="esriTimeRelation")]
    public enum esriTimeRelation
    {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriTimeRelationOverlaps")]
        esriTimeRelationOverlaps,
    }
    
    /// <summary>
    /// ESRI Image Query Filter Object.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="ImageQueryFilter")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class ImageQueryFilter : TimeQueryFilter
    {
        
        /// <remarks/>
        private Point pixelSize;
        
        public ImageQueryFilter()
        {
        }
        
        public ImageQueryFilter(Point pixelSize)
        {
            this.pixelSize = pixelSize;
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0, ElementName="PixelSize")]
        public Point PixelSize
        {
            get
            {
                return this.pixelSize;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("PixelSize");
                }
                if ((this.pixelSize != value))
                {
                    this.pixelSize = value;
                }
            }
        }
    }
    
    /// <summary>
    /// ESRI RecordSet Object.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="RecordSet")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class RecordSet
    {
        
        /// <remarks/>
        private Fields fields;
        
        /// <remarks/>
        private System.Collections.Generic.List<Record> records;
        
        public RecordSet()
        {
        }
        
        public RecordSet(Fields fields, System.Collections.Generic.List<Record> records)
        {
            this.fields = fields;
            this.records = records;
        }
        
        /// <summary>
        /// returns the fields for the recordset.
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0, ElementName="Fields")]
        public Fields Fields
        {
            get
            {
                return this.fields;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("Fields");
                }
                if ((this.fields != value))
                {
                    this.fields = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1, ElementName="Records")]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public System.Collections.Generic.List<Record> Records
        {
            get
            {
                return this.records;
            }
            set
            {
                if ((this.records != value))
                {
                    this.records = value;
                }
            }
        }
    }
    
    /// <summary>
    /// ESRI Fields Object.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="Fields")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class Fields
    {
        
        /// <remarks/>
        private System.Collections.Generic.List<Field> fieldArray;
        
        public Fields()
        {
        }
        
        public Fields(System.Collections.Generic.List<Field> fieldArray)
        {
            this.fieldArray = fieldArray;
        }
        
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0, ElementName="FieldArray")]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public System.Collections.Generic.List<Field> FieldArray
        {
            get
            {
                return this.fieldArray;
            }
            set
            {
                if ((this.fieldArray != value))
                {
                    this.fieldArray = value;
                }
            }
        }
    }
    
    /// <summary>
    /// ESRI Field Object.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="Field")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class Field
    {
        
        /// <remarks/>
        private string name;
        
        /// <remarks/>
        private esriFieldType type;
        
        /// <remarks/>
        private bool isNullable;
        
        /// <remarks/>
        private int length;
        
        /// <remarks/>
        private int precision;
        
        /// <remarks/>
        private int scale;
        
        /// <remarks/>
        private bool required;
        
        /// <remarks/>
        private bool requiredSpecified;
        
        /// <remarks/>
        private bool editable;
        
        /// <remarks/>
        private bool domainFixed;
        
        /// <remarks/>
        private bool domainFixedSpecified;
        
        /// <remarks/>
        private GeometryDef geometryDef;
        
        /// <remarks/>
        private string aliasName;
        
        /// <remarks/>
        private string modelName;
        
        /// <remarks/>
        private object defaultValue;
        
        /// <remarks/>
        private Domain domain;
        
        /// <remarks/>
        private RasterDef rasterDef;
        
        public Field()
        {
            this.Editable = true;
        }
        
        /// <summary>
        /// The name of the field.
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0, ElementName="Name")]
        public string Name
        {
            get
            {
                return this.name;
            }
            set
            {
                if ((this.name != value))
                {
                    this.name = value;
                }
            }
        }
        
        /// <summary>
        /// The type of the field.
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1, ElementName="Type")]
        public esriFieldType Type
        {
            get
            {
                return this.type;
            }
            set
            {
                if ((this.type != value))
                {
                    this.type = value;
                }
            }
        }
        
        /// <summary>
        /// Indicates if the field can contain null values.
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2, ElementName="IsNullable")]
        public bool IsNullable
        {
            get
            {
                return this.isNullable;
            }
            set
            {
                if ((this.isNullable != value))
                {
                    this.isNullable = value;
                }
            }
        }
        
        /// <summary>
        /// The maximum length, in bytes, for values described by the field.
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=3, ElementName="Length")]
        public int Length
        {
            get
            {
                return this.length;
            }
            set
            {
                if ((this.length != value))
                {
                    this.length = value;
                }
            }
        }
        
        /// <summary>
        /// The precision for field values.
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=4, ElementName="Precision")]
        public int Precision
        {
            get
            {
                return this.precision;
            }
            set
            {
                if ((this.precision != value))
                {
                    this.precision = value;
                }
            }
        }
        
        /// <summary>
        /// The scale for field values.
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=5, ElementName="Scale")]
        public int Scale
        {
            get
            {
                return this.scale;
            }
            set
            {
                if ((this.scale != value))
                {
                    this.scale = value;
                }
            }
        }
        
        /// <summary>
        /// Indicates if the field is required.
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=6, ElementName="Required")]
        public bool Required
        {
            get
            {
                return this.required;
            }
            set
            {
                if ((this.required != value))
                {
                    this.required = value;
                    this.requiredSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RequiredSpecified
        {
            get
            {
                return this.requiredSpecified;
            }
            set
            {
                if ((this.requiredSpecified != value))
                {
                    this.requiredSpecified = value;
                }
            }
        }
        
        /// <summary>
        /// Indicates if the field is editable.
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=7, ElementName="Editable")]
        [System.ComponentModel.DefaultValueAttribute(true)]
        public bool Editable
        {
            get
            {
                return this.editable;
            }
            set
            {
                if ((this.editable != value))
                {
                    this.editable = value;
                }
            }
        }
        
        /// <summary>
        /// Indicates if the field's domain is fixed.
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=8, ElementName="DomainFixed")]
        public bool DomainFixed
        {
            get
            {
                return this.domainFixed;
            }
            set
            {
                if ((this.domainFixed != value))
                {
                    this.domainFixed = value;
                    this.domainFixedSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DomainFixedSpecified
        {
            get
            {
                return this.domainFixedSpecified;
            }
            set
            {
                if ((this.domainFixedSpecified != value))
                {
                    this.domainFixedSpecified = value;
                }
            }
        }
        
        /// <summary>
        /// The geometry definition for the field if IsGeometry is TRUE.
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=9, ElementName="GeometryDef")]
        public GeometryDef GeometryDef
        {
            get
            {
                return this.geometryDef;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("GeometryDef");
                }
                if ((this.geometryDef != value))
                {
                    this.geometryDef = value;
                }
            }
        }
        
        /// <summary>
        /// The alias name of the field.
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=10, ElementName="AliasName")]
        public string AliasName
        {
            get
            {
                return this.aliasName;
            }
            set
            {
                if ((this.aliasName != value))
                {
                    this.aliasName = value;
                }
            }
        }
        
        /// <summary>
        /// The model name of the field.
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=11, ElementName="ModelName")]
        public string ModelName
        {
            get
            {
                return this.modelName;
            }
            set
            {
                if ((this.modelName != value))
                {
                    this.modelName = value;
                }
            }
        }
        
        /// <summary>
        /// The default value of the field.
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=12, ElementName="DefaultValue")]
        public object DefaultValue
        {
            get
            {
                return this.defaultValue;
            }
            set
            {
                if ((this.defaultValue != value))
                {
                    this.defaultValue = value;
                }
            }
        }
        
        /// <summary>
        /// The default domain of the field.
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=13, ElementName="Domain")]
        public Domain Domain
        {
            get
            {
                return this.domain;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("Domain");
                }
                if ((this.domain != value))
                {
                    this.domain = value;
                }
            }
        }
        
        /// <summary>
        /// The raster column definition.
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=14, ElementName="RasterDef")]
        public RasterDef RasterDef
        {
            get
            {
                return this.rasterDef;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("RasterDef");
                }
                if ((this.rasterDef != value))
                {
                    this.rasterDef = value;
                }
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="esriFieldType")]
    public enum esriFieldType
    {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriFieldTypeInteger")]
        esriFieldTypeInteger,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriFieldTypeSmallInteger")]
        esriFieldTypeSmallInteger,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriFieldTypeDouble")]
        esriFieldTypeDouble,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriFieldTypeSingle")]
        esriFieldTypeSingle,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriFieldTypeString")]
        esriFieldTypeString,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriFieldTypeDate")]
        esriFieldTypeDate,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriFieldTypeGeometry")]
        esriFieldTypeGeometry,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriFieldTypeOID")]
        esriFieldTypeOID,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriFieldTypeBlob")]
        esriFieldTypeBlob,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriFieldTypeGlobalID")]
        esriFieldTypeGlobalID,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriFieldTypeRaster")]
        esriFieldTypeRaster,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriFieldTypeGUID")]
        esriFieldTypeGUID,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriFieldTypeXML")]
        esriFieldTypeXML,
    }
    
    /// <summary>
    /// ESRI Geometry Definition Object.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="GeometryDef")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class GeometryDef
    {
        
        /// <remarks/>
        private int avgNumPoints;
        
        /// <remarks/>
        private esriGeometryType geometryType;
        
        /// <remarks/>
        private bool hasM;
        
        /// <remarks/>
        private bool hasZ;
        
        /// <remarks/>
        private SpatialReference spatialReference;
        
        /// <remarks/>
        private double gridSize0;
        
        /// <remarks/>
        private bool gridSize0Specified;
        
        /// <remarks/>
        private double gridSize1;
        
        /// <remarks/>
        private bool gridSize1Specified;
        
        /// <remarks/>
        private double gridSize2;
        
        /// <remarks/>
        private bool gridSize2Specified;
        
        public GeometryDef()
        {
        }
        
        public GeometryDef(int avgNumPoints, esriGeometryType geometryType, bool hasM, bool hasZ, SpatialReference spatialReference, double gridSize0, bool gridSize0Specified, double gridSize1, bool gridSize1Specified, double gridSize2, bool gridSize2Specified)
        {
            this.avgNumPoints = avgNumPoints;
            this.geometryType = geometryType;
            this.hasM = hasM;
            this.hasZ = hasZ;
            this.spatialReference = spatialReference;
            this.gridSize0 = gridSize0;
            this.gridSize0Specified = gridSize0Specified;
            this.gridSize1 = gridSize1;
            this.gridSize1Specified = gridSize1Specified;
            this.gridSize2 = gridSize2;
            this.gridSize2Specified = gridSize2Specified;
        }
        
        /// <summary>
        /// Estimated average number of points per feature.
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0, ElementName="AvgNumPoints")]
        public int AvgNumPoints
        {
            get
            {
                return this.avgNumPoints;
            }
            set
            {
                if ((this.avgNumPoints != value))
                {
                    this.avgNumPoints = value;
                }
            }
        }
        
        /// <summary>
        /// The enumerated geometry type.
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1, ElementName="GeometryType")]
        public esriGeometryType GeometryType
        {
            get
            {
                return this.geometryType;
            }
            set
            {
                if ((this.geometryType != value))
                {
                    this.geometryType = value;
                }
            }
        }
        
        /// <summary>
        /// Indicates if the feature class has measure (M) values.
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2, ElementName="HasM")]
        public bool HasM
        {
            get
            {
                return this.hasM;
            }
            set
            {
                if ((this.hasM != value))
                {
                    this.hasM = value;
                }
            }
        }
        
        /// <summary>
        /// Indicates if the featureClass has Z values.
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=3, ElementName="HasZ")]
        public bool HasZ
        {
            get
            {
                return this.hasZ;
            }
            set
            {
                if ((this.hasZ != value))
                {
                    this.hasZ = value;
                }
            }
        }
        
        /// <summary>
        /// The spatial reference for the dataset.
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=4, ElementName="SpatialReference")]
        public SpatialReference SpatialReference
        {
            get
            {
                return this.spatialReference;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("SpatialReference");
                }
                if ((this.spatialReference != value))
                {
                    this.spatialReference = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=5, ElementName="GridSize0")]
        public double GridSize0
        {
            get
            {
                return this.gridSize0;
            }
            set
            {
                if ((this.gridSize0 != value))
                {
                    this.gridSize0 = value;
                    this.gridSize0Specified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GridSize0Specified
        {
            get
            {
                return this.gridSize0Specified;
            }
            set
            {
                if ((this.gridSize0Specified != value))
                {
                    this.gridSize0Specified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=6, ElementName="GridSize1")]
        public double GridSize1
        {
            get
            {
                return this.gridSize1;
            }
            set
            {
                if ((this.gridSize1 != value))
                {
                    this.gridSize1 = value;
                    this.gridSize1Specified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GridSize1Specified
        {
            get
            {
                return this.gridSize1Specified;
            }
            set
            {
                if ((this.gridSize1Specified != value))
                {
                    this.gridSize1Specified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=7, ElementName="GridSize2")]
        public double GridSize2
        {
            get
            {
                return this.gridSize2;
            }
            set
            {
                if ((this.gridSize2 != value))
                {
                    this.gridSize2 = value;
                    this.gridSize2Specified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GridSize2Specified
        {
            get
            {
                return this.gridSize2Specified;
            }
            set
            {
                if ((this.gridSize2Specified != value))
                {
                    this.gridSize2Specified = value;
                }
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="esriGeometryType")]
    public enum esriGeometryType
    {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriGeometryPoint")]
        esriGeometryPoint,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriGeometryMultipoint")]
        esriGeometryMultipoint,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriGeometryPolyline")]
        esriGeometryPolyline,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriGeometryPolygon")]
        esriGeometryPolygon,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriGeometryMultiPatch")]
        esriGeometryMultiPatch,
    }
    
    /// <summary>
    /// 
    ///        Domain Properties control and their merge split policies control.
    ///      .
    /// </summary>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CodedValueDomain))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(BitMaskCodedValueDomain))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RangeDomain))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="Domain")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public abstract partial class Domain
    {
        
        /// <remarks/>
        private string domainName;
        
        /// <remarks/>
        private esriFieldType fieldType;
        
        /// <remarks/>
        private esriMergePolicyType mergePolicy;
        
        /// <remarks/>
        private esriSplitPolicyType splitPolicy;
        
        /// <remarks/>
        private string description;
        
        /// <remarks/>
        private string owner;
        
        public Domain()
        {
        }
        
        public Domain(string domainName, esriFieldType fieldType, esriMergePolicyType mergePolicy, esriSplitPolicyType splitPolicy, string description, string owner)
        {
            this.domainName = domainName;
            this.fieldType = fieldType;
            this.mergePolicy = mergePolicy;
            this.splitPolicy = splitPolicy;
            this.description = description;
            this.owner = owner;
        }
        
        /// <summary>
        /// 
        ///            The ID of the domain.
        ///          .
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0, ElementName="DomainName")]
        public string DomainName
        {
            get
            {
                return this.domainName;
            }
            set
            {
                if ((this.domainName != value))
                {
                    this.domainName = value;
                }
            }
        }
        
        /// <summary>
        /// The field type of the field.
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1, ElementName="FieldType")]
        public esriFieldType FieldType
        {
            get
            {
                return this.fieldType;
            }
            set
            {
                if ((this.fieldType != value))
                {
                    this.fieldType = value;
                }
            }
        }
        
        /// <summary>
        /// The merge policy.
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2, ElementName="MergePolicy")]
        public esriMergePolicyType MergePolicy
        {
            get
            {
                return this.mergePolicy;
            }
            set
            {
                if ((this.mergePolicy != value))
                {
                    this.mergePolicy = value;
                }
            }
        }
        
        /// <summary>
        /// The split policy.
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=3, ElementName="SplitPolicy")]
        public esriSplitPolicyType SplitPolicy
        {
            get
            {
                return this.splitPolicy;
            }
            set
            {
                if ((this.splitPolicy != value))
                {
                    this.splitPolicy = value;
                }
            }
        }
        
        /// <summary>
        /// The description of the domain.
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=4, ElementName="Description")]
        public string Description
        {
            get
            {
                return this.description;
            }
            set
            {
                if ((this.description != value))
                {
                    this.description = value;
                }
            }
        }
        
        /// <summary>
        /// The owner of the domain.
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=5, ElementName="Owner")]
        public string Owner
        {
            get
            {
                return this.owner;
            }
            set
            {
                if ((this.owner != value))
                {
                    this.owner = value;
                }
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="esriMergePolicyType")]
    public enum esriMergePolicyType
    {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriMPTSumValues")]
        esriMPTSumValues,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriMPTAreaWeighted")]
        esriMPTAreaWeighted,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriMPTDefaultValue")]
        esriMPTDefaultValue,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="esriSplitPolicyType")]
    public enum esriSplitPolicyType
    {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriSPTGeometryRatio")]
        esriSPTGeometryRatio,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriSPTDuplicate")]
        esriSPTDuplicate,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriSPTDefaultValue")]
        esriSPTDefaultValue,
    }
    
    /// <summary>
    /// ESRI Attribute set constraint object.
    /// </summary>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(BitMaskCodedValueDomain))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="CodedValueDomain")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class CodedValueDomain : Domain
    {
        
        /// <remarks/>
        private System.Collections.Generic.List<CodedValue> codedValues;
        
        public CodedValueDomain()
        {
        }
        
        public CodedValueDomain(System.Collections.Generic.List<CodedValue> codedValues)
        {
            this.codedValues = codedValues;
        }
        
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0, ElementName="CodedValues")]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public System.Collections.Generic.List<CodedValue> CodedValues
        {
            get
            {
                return this.codedValues;
            }
            set
            {
                if ((this.codedValues != value))
                {
                    this.codedValues = value;
                }
            }
        }
    }
    
    /// <summary>
    /// 
    ///        ESRI Attribute set constraint object.
    ///      .
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="CodedValue")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class CodedValue
    {
        
        /// <remarks/>
        private string name;
        
        /// <remarks/>
        private object code;
        
        public CodedValue()
        {
        }
        
        public CodedValue(string name, object code)
        {
            this.name = name;
            this.code = code;
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0, ElementName="Name")]
        public string Name
        {
            get
            {
                return this.name;
            }
            set
            {
                if ((this.name != value))
                {
                    this.name = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1, ElementName="Code")]
        public object Code
        {
            get
            {
                return this.code;
            }
            set
            {
                if ((this.code != value))
                {
                    this.code = value;
                }
            }
        }
    }
    
    /// <summary>
    /// ESRI Attribute bitmask constraint object.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="BitMaskCodedValueDomain")]
    public partial class BitMaskCodedValueDomain : CodedValueDomain
    {
        
        public BitMaskCodedValueDomain()
        {
        }
    }
    
    /// <summary>
    /// ESRI Range Domain object.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="RangeDomain")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class RangeDomain : Domain
    {
        
        /// <remarks/>
        private object maxValue;
        
        /// <remarks/>
        private object minValue;
        
        public RangeDomain()
        {
        }
        
        public RangeDomain(object maxValue, object minValue)
        {
            this.maxValue = maxValue;
            this.minValue = minValue;
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0, ElementName="MaxValue")]
        public object MaxValue
        {
            get
            {
                return this.maxValue;
            }
            set
            {
                if ((this.maxValue != value))
                {
                    this.maxValue = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1, ElementName="MinValue")]
        public object MinValue
        {
            get
            {
                return this.minValue;
            }
            set
            {
                if ((this.minValue != value))
                {
                    this.minValue = value;
                }
            }
        }
    }
    
    /// <summary>
    /// Raster Column Definition Class.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="RasterDef")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class RasterDef
    {
        
        /// <remarks/>
        private string description;
        
        /// <remarks/>
        private bool isByRef;
        
        /// <remarks/>
        private bool isByRefSpecified;
        
        /// <remarks/>
        private SpatialReference spatialReference;
        
        /// <remarks/>
        private bool isByFunction;
        
        /// <remarks/>
        private bool isByFunctionSpecified;
        
        public RasterDef()
        {
        }
        
        public RasterDef(string description, bool isByRef, bool isByRefSpecified, SpatialReference spatialReference, bool isByFunction, bool isByFunctionSpecified)
        {
            this.description = description;
            this.isByRef = isByRef;
            this.isByRefSpecified = isByRefSpecified;
            this.spatialReference = spatialReference;
            this.isByFunction = isByFunction;
            this.isByFunctionSpecified = isByFunctionSpecified;
        }
        
        /// <summary>
        /// The raster column description.
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0, ElementName="Description")]
        public string Description
        {
            get
            {
                return this.description;
            }
            set
            {
                if ((this.description != value))
                {
                    this.description = value;
                }
            }
        }
        
        /// <summary>
        /// 
        ///            Indicates if the Raster column value is to be managed by GeoDatabase.
        ///          .
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1, ElementName="IsByRef")]
        public bool IsByRef
        {
            get
            {
                return this.isByRef;
            }
            set
            {
                if ((this.isByRef != value))
                {
                    this.isByRef = value;
                    this.isByRefSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsByRefSpecified
        {
            get
            {
                return this.isByRefSpecified;
            }
            set
            {
                if ((this.isByRefSpecified != value))
                {
                    this.isByRefSpecified = value;
                }
            }
        }
        
        /// <summary>
        /// The SpatialReference of the raster.
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2, ElementName="SpatialReference")]
        public SpatialReference SpatialReference
        {
            get
            {
                return this.spatialReference;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("SpatialReference");
                }
                if ((this.spatialReference != value))
                {
                    this.spatialReference = value;
                }
            }
        }
        
        /// <summary>
        /// 
        ///            Indicates if the Raster column value is of type function raster dataset.
        ///          .
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=3, ElementName="IsByFunction")]
        public bool IsByFunction
        {
            get
            {
                return this.isByFunction;
            }
            set
            {
                if ((this.isByFunction != value))
                {
                    this.isByFunction = value;
                    this.isByFunctionSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsByFunctionSpecified
        {
            get
            {
                return this.isByFunctionSpecified;
            }
            set
            {
                if ((this.isByFunctionSpecified != value))
                {
                    this.isByFunctionSpecified = value;
                }
            }
        }
    }
    
    /// <summary>
    /// ESRI Record Object.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="Record")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class Record
    {
        
        /// <remarks/>
        private System.Collections.Generic.List<object> values;
        
        public Record()
        {
        }
        
        public Record(System.Collections.Generic.List<object> values)
        {
            this.values = values;
        }
        
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0, ElementName="Values")]
        [System.Xml.Serialization.XmlArrayItemAttribute("Value", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.Collections.Generic.List<object> Values
        {
            get
            {
                return this.values;
            }
            set
            {
                if ((this.values != value))
                {
                    this.values = value;
                }
            }
        }
    }
    
    /// <summary>
    /// .
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="ServerSymbolOutputOptions")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class ServerSymbolOutputOptions
    {
        
        /// <remarks/>
        private esriServerPictureOutputType pictureOutputType;
        
        /// <remarks/>
        private bool pictureOutputTypeSpecified;
        
        /// <remarks/>
        private bool convertLabelExpressions;
        
        public ServerSymbolOutputOptions()
        {
            this.ConvertLabelExpressions = true;
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0, ElementName="PictureOutputType")]
        public esriServerPictureOutputType PictureOutputType
        {
            get
            {
                return this.pictureOutputType;
            }
            set
            {
                if ((this.pictureOutputType != value))
                {
                    this.pictureOutputType = value;
                    this.pictureOutputTypeSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PictureOutputTypeSpecified
        {
            get
            {
                return this.pictureOutputTypeSpecified;
            }
            set
            {
                if ((this.pictureOutputTypeSpecified != value))
                {
                    this.pictureOutputTypeSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1, ElementName="ConvertLabelExpressions")]
        [System.ComponentModel.DefaultValueAttribute(true)]
        public bool ConvertLabelExpressions
        {
            get
            {
                return this.convertLabelExpressions;
            }
            set
            {
                if ((this.convertLabelExpressions != value))
                {
                    this.convertLabelExpressions = value;
                }
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="esriServerPictureOutputType")]
    public enum esriServerPictureOutputType
    {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriServerPictureOutputAsPNG")]
        esriServerPictureOutputAsPNG,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriServerPictureOutputAsPNGInMime")]
        esriServerPictureOutputAsPNGInMime,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriServerPictureOutputAsIPicture")]
        esriServerPictureOutputAsIPicture,
    }
    
    /// <summary>
    /// .
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="RelatedRecordSet")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class RelatedRecordSet
    {
        
        /// <remarks/>
        private Fields relatedRecordFields;
        
        /// <remarks/>
        private System.Collections.Generic.List<RelatedRecordGroup> relatedRecordGroups;
        
        public RelatedRecordSet()
        {
        }
        
        public RelatedRecordSet(Fields relatedRecordFields, System.Collections.Generic.List<RelatedRecordGroup> relatedRecordGroups)
        {
            this.relatedRecordFields = relatedRecordFields;
            this.relatedRecordGroups = relatedRecordGroups;
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0, ElementName="RelatedRecordFields")]
        public Fields RelatedRecordFields
        {
            get
            {
                return this.relatedRecordFields;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("RelatedRecordFields");
                }
                if ((this.relatedRecordFields != value))
                {
                    this.relatedRecordFields = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1, ElementName="RelatedRecordGroups")]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public System.Collections.Generic.List<RelatedRecordGroup> RelatedRecordGroups
        {
            get
            {
                return this.relatedRecordGroups;
            }
            set
            {
                if ((this.relatedRecordGroups != value))
                {
                    this.relatedRecordGroups = value;
                }
            }
        }
    }
    
    /// <summary>
    /// .
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="RelatedRecordGroup")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class RelatedRecordGroup
    {
        
        /// <remarks/>
        private int sourceRowID;
        
        /// <remarks/>
        private System.Collections.Generic.List<Record> records;
        
        public RelatedRecordGroup()
        {
        }
        
        public RelatedRecordGroup(int sourceRowID, System.Collections.Generic.List<Record> records)
        {
            this.sourceRowID = sourceRowID;
            this.records = records;
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0, ElementName="SourceRowID")]
        public int SourceRowID
        {
            get
            {
                return this.sourceRowID;
            }
            set
            {
                if ((this.sourceRowID != value))
                {
                    this.sourceRowID = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1, ElementName="Records")]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public System.Collections.Generic.List<Record> Records
        {
            get
            {
                return this.records;
            }
            set
            {
                if ((this.records != value))
                {
                    this.records = value;
                }
            }
        }
    }
    
    /// <summary>
    /// .
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="MapServerForceDeriveFromAnyType")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class MapServerForceDeriveFromAnyType
    {
        
        /// <remarks/>
        private RelatedRecordSet relatedRecordSet;
        
        /// <remarks/>
        private FieldDomainInfo fieldDomainInfo;
        
        public MapServerForceDeriveFromAnyType()
        {
        }
        
        public MapServerForceDeriveFromAnyType(RelatedRecordSet relatedRecordSet, FieldDomainInfo fieldDomainInfo)
        {
            this.relatedRecordSet = relatedRecordSet;
            this.fieldDomainInfo = fieldDomainInfo;
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0, ElementName="RelatedRecordSet")]
        public RelatedRecordSet RelatedRecordSet
        {
            get
            {
                return this.relatedRecordSet;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("RelatedRecordSet");
                }
                if ((this.relatedRecordSet != value))
                {
                    this.relatedRecordSet = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1, ElementName="FieldDomainInfo")]
        public FieldDomainInfo FieldDomainInfo
        {
            get
            {
                return this.fieldDomainInfo;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("FieldDomainInfo");
                }
                if ((this.fieldDomainInfo != value))
                {
                    this.fieldDomainInfo = value;
                }
            }
        }
    }
    
    /// <summary>
    /// .
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="FieldDomainInfo")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class FieldDomainInfo
    {
        
        /// <remarks/>
        private string fieldName;
        
        /// <remarks/>
        private Domain domain;
        
        /// <remarks/>
        private bool isInherited;
        
        public FieldDomainInfo()
        {
            this.IsInherited = false;
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0, ElementName="FieldName")]
        public string FieldName
        {
            get
            {
                return this.fieldName;
            }
            set
            {
                if ((this.fieldName != value))
                {
                    this.fieldName = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1, ElementName="Domain")]
        public Domain Domain
        {
            get
            {
                return this.domain;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("Domain");
                }
                if ((this.domain != value))
                {
                    this.domain = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2, ElementName="IsInherited")]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool IsInherited
        {
            get
            {
                return this.isInherited;
            }
            set
            {
                if ((this.isInherited != value))
                {
                    this.isInherited = value;
                }
            }
        }
    }
    
    /// <summary>
    /// .
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="RelateDescription")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class RelateDescription
    {
        
        /// <remarks/>
        private int relationshipID;
        
        /// <remarks/>
        private string relatedTableDefinitionExpression;
        
        /// <remarks/>
        private string relatedTableFields;
        
        /// <remarks/>
        private SpatialReference outputSpatialReference;
        
        /// <remarks/>
        private GeoTransformation geoTransformation;
        
        /// <remarks/>
        private bool includeGeometry;
        
        /// <remarks/>
        private GeometryResultOptions geometryResultOptions;
        
        /// <remarks/>
        private esriRelateResultFormat resultFormat;
        
        /// <remarks/>
        private TimeReference outputTimeReference;
        
        public RelateDescription()
        {
            this.IncludeGeometry = true;
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0, ElementName="RelationshipID")]
        public int RelationshipID
        {
            get
            {
                return this.relationshipID;
            }
            set
            {
                if ((this.relationshipID != value))
                {
                    this.relationshipID = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1, ElementName="RelatedTableDefinitionExpression")]
        public string RelatedTableDefinitionExpression
        {
            get
            {
                return this.relatedTableDefinitionExpression;
            }
            set
            {
                if ((this.relatedTableDefinitionExpression != value))
                {
                    this.relatedTableDefinitionExpression = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2, ElementName="RelatedTableFields")]
        public string RelatedTableFields
        {
            get
            {
                return this.relatedTableFields;
            }
            set
            {
                if ((this.relatedTableFields != value))
                {
                    this.relatedTableFields = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=3, ElementName="OutputSpatialReference")]
        public SpatialReference OutputSpatialReference
        {
            get
            {
                return this.outputSpatialReference;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("OutputSpatialReference");
                }
                if ((this.outputSpatialReference != value))
                {
                    this.outputSpatialReference = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=4, ElementName="GeoTransformation")]
        public GeoTransformation GeoTransformation
        {
            get
            {
                return this.geoTransformation;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("GeoTransformation");
                }
                if ((this.geoTransformation != value))
                {
                    this.geoTransformation = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=5, ElementName="IncludeGeometry")]
        [System.ComponentModel.DefaultValueAttribute(true)]
        public bool IncludeGeometry
        {
            get
            {
                return this.includeGeometry;
            }
            set
            {
                if ((this.includeGeometry != value))
                {
                    this.includeGeometry = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=6, ElementName="GeometryResultOptions")]
        public GeometryResultOptions GeometryResultOptions
        {
            get
            {
                return this.geometryResultOptions;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("GeometryResultOptions");
                }
                if ((this.geometryResultOptions != value))
                {
                    this.geometryResultOptions = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=7, ElementName="ResultFormat")]
        public esriRelateResultFormat ResultFormat
        {
            get
            {
                return this.resultFormat;
            }
            set
            {
                if ((this.resultFormat != value))
                {
                    this.resultFormat = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=8, ElementName="OutputTimeReference")]
        public TimeReference OutputTimeReference
        {
            get
            {
                return this.outputTimeReference;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("OutputTimeReference");
                }
                if ((this.outputTimeReference != value))
                {
                    this.outputTimeReference = value;
                }
            }
        }
    }
    
    /// <summary>
    /// .
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="GeoTransformation")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class GeoTransformation
    {
        
        /// <remarks/>
        private string wKT;
        
        /// <remarks/>
        private int wKID;
        
        /// <remarks/>
        private bool wKIDSpecified;
        
        public GeoTransformation()
        {
        }
        
        public GeoTransformation(string wKT, int wKID, bool wKIDSpecified)
        {
            this.wKT = wKT;
            this.wKID = wKID;
            this.wKIDSpecified = wKIDSpecified;
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0, ElementName="WKT")]
        public string WKT
        {
            get
            {
                return this.wKT;
            }
            set
            {
                if ((this.wKT != value))
                {
                    this.wKT = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1, ElementName="WKID")]
        public int WKID
        {
            get
            {
                return this.wKID;
            }
            set
            {
                if ((this.wKID != value))
                {
                    this.wKID = value;
                    this.wKIDSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WKIDSpecified
        {
            get
            {
                return this.wKIDSpecified;
            }
            set
            {
                if ((this.wKIDSpecified != value))
                {
                    this.wKIDSpecified = value;
                }
            }
        }
    }
    
    /// <summary>
    /// ESRI Geometry export options object.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="GeometryResultOptions")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class GeometryResultOptions
    {
        
        /// <remarks/>
        private bool densifyGeometries;
        
        /// <remarks/>
        private double maximumSegmentLength;
        
        /// <remarks/>
        private double maximumDeviation;
        
        /// <remarks/>
        private bool generalizeGeometries;
        
        /// <remarks/>
        private double maximumAllowableOffset;
        
        public GeometryResultOptions()
        {
            this.DensifyGeometries = false;
            this.MaximumSegmentLength = -1;
            this.MaximumDeviation = 0;
            this.GeneralizeGeometries = false;
            this.MaximumAllowableOffset = 0;
        }
        
        /// <summary>
        /// if true, MaximumSegmentLength and MaximumDeviation will be honored to densify geometry in the results.
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0, ElementName="DensifyGeometries")]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool DensifyGeometries
        {
            get
            {
                return this.densifyGeometries;
            }
            set
            {
                if ((this.densifyGeometries != value))
                {
                    this.densifyGeometries = value;
                }
            }
        }
        
        /// <summary>
        /// .
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1, ElementName="MaximumSegmentLength")]
        [System.ComponentModel.DefaultValueAttribute(-1)]
        public double MaximumSegmentLength
        {
            get
            {
                return this.maximumSegmentLength;
            }
            set
            {
                if ((this.maximumSegmentLength != value))
                {
                    this.maximumSegmentLength = value;
                }
            }
        }
        
        /// <summary>
        /// .
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2, ElementName="MaximumDeviation")]
        [System.ComponentModel.DefaultValueAttribute(0)]
        public double MaximumDeviation
        {
            get
            {
                return this.maximumDeviation;
            }
            set
            {
                if ((this.maximumDeviation != value))
                {
                    this.maximumDeviation = value;
                }
            }
        }
        
        /// <summary>
        /// if true, MaximumAllowableOffset will be honored to generalize the geometry in the results.
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=3, ElementName="GeneralizeGeometries")]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool GeneralizeGeometries
        {
            get
            {
                return this.generalizeGeometries;
            }
            set
            {
                if ((this.generalizeGeometries != value))
                {
                    this.generalizeGeometries = value;
                }
            }
        }
        
        /// <summary>
        /// .
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=4, ElementName="MaximumAllowableOffset")]
        [System.ComponentModel.DefaultValueAttribute(0)]
        public double MaximumAllowableOffset
        {
            get
            {
                return this.maximumAllowableOffset;
            }
            set
            {
                if ((this.maximumAllowableOffset != value))
                {
                    this.maximumAllowableOffset = value;
                }
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="esriRelateResultFormat")]
    public enum esriRelateResultFormat
    {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriRelateResultRelatedRecordSetAsObject")]
        esriRelateResultRelatedRecordSetAsObject,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriRelateResultJsonAsMime")]
        esriRelateResultJsonAsMime,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriRelateResultJsonAsURL")]
        esriRelateResultJsonAsURL,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriRelateResultAmfAsMime")]
        esriRelateResultAmfAsMime,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriRelateResultAmfAsURL")]
        esriRelateResultAmfAsURL,
    }
    
    /// <summary>
    /// Query Result.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="QueryResult")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class QueryResult
    {
        
        /// <remarks/>
        private byte[] mimeData;
        
        /// <remarks/>
        private string uRL;
        
        /// <remarks/>
        private object @object;
        
        public QueryResult()
        {
        }
        
        public QueryResult(byte[] mimeData, string uRL, object @object)
        {
            this.mimeData = mimeData;
            this.uRL = uRL;
            this.@object = @object;
        }
        
        /// <summary>
        /// Binary data representing the generated result in the requested format.
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary", Order=0, ElementName="MimeData")]
        public byte[] MimeData
        {
            get
            {
                return this.mimeData;
            }
            set
            {
                if ((this.mimeData != value))
                {
                    this.mimeData = value;
                }
            }
        }
        
        /// <summary>
        /// The URL of the generated query result in the requested format.
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1, ElementName="URL")]
        public string URL
        {
            get
            {
                return this.uRL;
            }
            set
            {
                if ((this.uRL != value))
                {
                    this.uRL = value;
                }
            }
        }
        
        /// <summary>
        /// The Object representing generated query result in the requested format.
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2, ElementName="Object")]
        public object Object
        {
            get
            {
                return this.@object;
            }
            set
            {
                if ((this.@object != value))
                {
                    this.@object = value;
                }
            }
        }
    }
    
    /// <summary>
    /// Query Result Options.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="QueryResultOptions")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class QueryResultOptions
    {
        
        /// <remarks/>
        private esriQueryResultFormat format;
        
        /// <remarks/>
        private PropertySet formatProperties;
        
        /// <remarks/>
        private GeoTransformation geoTransformation;
        
        public QueryResultOptions()
        {
        }
        
        public QueryResultOptions(esriQueryResultFormat format, PropertySet formatProperties, GeoTransformation geoTransformation)
        {
            this.format = format;
            this.formatProperties = formatProperties;
            this.geoTransformation = geoTransformation;
        }
        
        /// <summary>
        /// The query result format.
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0, ElementName="Format")]
        public esriQueryResultFormat Format
        {
            get
            {
                return this.format;
            }
            set
            {
                if ((this.format != value))
                {
                    this.format = value;
                }
            }
        }
        
        /// <summary>
        /// Format properties specific to result format.
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1, ElementName="FormatProperties")]
        public PropertySet FormatProperties
        {
            get
            {
                return this.formatProperties;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("FormatProperties");
                }
                if ((this.formatProperties != value))
                {
                    this.formatProperties = value;
                }
            }
        }
        
        /// <summary>
        /// Geographic Transformation.
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2, ElementName="GeoTransformation")]
        public GeoTransformation GeoTransformation
        {
            get
            {
                return this.geoTransformation;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("GeoTransformation");
                }
                if ((this.geoTransformation != value))
                {
                    this.geoTransformation = value;
                }
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="esriQueryResultFormat")]
    public enum esriQueryResultFormat
    {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriQueryResultRecordSetAsObject")]
        esriQueryResultRecordSetAsObject,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriQueryResultJsonAsMime")]
        esriQueryResultJsonAsMime,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriQueryResultJsonAsURL")]
        esriQueryResultJsonAsURL,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriQueryResultAmfAsMime")]
        esriQueryResultAmfAsMime,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriQueryResultAmfAsURL")]
        esriQueryResultAmfAsURL,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriQueryResultKMLAsMime")]
        esriQueryResultKMLAsMime,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriQueryResultKMLAsURL")]
        esriQueryResultKMLAsURL,
    }
    
    /// <summary>
    /// .
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="CacheControlInfo")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class CacheControlInfo
    {
        
        /// <remarks/>
        private bool clientCachingAllowed;
        
        public CacheControlInfo()
        {
        }
        
        public CacheControlInfo(bool clientCachingAllowed)
        {
            this.clientCachingAllowed = clientCachingAllowed;
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0, ElementName="ClientCachingAllowed")]
        public bool ClientCachingAllowed
        {
            get
            {
                return this.clientCachingAllowed;
            }
            set
            {
                if ((this.clientCachingAllowed != value))
                {
                    this.clientCachingAllowed = value;
                }
            }
        }
    }
    
    /// <summary>
    /// .
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="CacheDescriptionInfo")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class CacheDescriptionInfo
    {
        
        /// <remarks/>
        private TileCacheInfo tileCacheInfo;
        
        /// <remarks/>
        private TileImageInfo tileImageInfo;
        
        /// <remarks/>
        private ArrayOfLayerCacheInfo layerCacheInfos;
        
        /// <remarks/>
        private CacheControlInfo cacheControlInfo;
        
        /// <remarks/>
        private esriCachedMapServiceType serviceType;
        
        public CacheDescriptionInfo()
        {
        }
        
        public CacheDescriptionInfo(TileCacheInfo tileCacheInfo, TileImageInfo tileImageInfo, ArrayOfLayerCacheInfo layerCacheInfos, CacheControlInfo cacheControlInfo, esriCachedMapServiceType serviceType)
        {
            this.tileCacheInfo = tileCacheInfo;
            this.tileImageInfo = tileImageInfo;
            this.layerCacheInfos = layerCacheInfos;
            this.cacheControlInfo = cacheControlInfo;
            this.serviceType = serviceType;
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0, ElementName="TileCacheInfo")]
        public TileCacheInfo TileCacheInfo
        {
            get
            {
                return this.tileCacheInfo;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("TileCacheInfo");
                }
                if ((this.tileCacheInfo != value))
                {
                    this.tileCacheInfo = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1, ElementName="TileImageInfo")]
        public TileImageInfo TileImageInfo
        {
            get
            {
                return this.tileImageInfo;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("TileImageInfo");
                }
                if ((this.tileImageInfo != value))
                {
                    this.tileImageInfo = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2, ElementName="LayerCacheInfos")]
        public ArrayOfLayerCacheInfo LayerCacheInfos
        {
            get
            {
                return this.layerCacheInfos;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("LayerCacheInfos");
                }
                if ((this.layerCacheInfos != value))
                {
                    this.layerCacheInfos = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=3, ElementName="CacheControlInfo")]
        public CacheControlInfo CacheControlInfo
        {
            get
            {
                return this.cacheControlInfo;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("CacheControlInfo");
                }
                if ((this.cacheControlInfo != value))
                {
                    this.cacheControlInfo = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=4, ElementName="ServiceType")]
        public esriCachedMapServiceType ServiceType
        {
            get
            {
                return this.serviceType;
            }
            set
            {
                if ((this.serviceType != value))
                {
                    this.serviceType = value;
                }
            }
        }
    }
    
    /// <summary>
    /// .
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="TileCacheInfo")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class TileCacheInfo
    {
        
        /// <remarks/>
        private SpatialReference spatialReference;
        
        /// <remarks/>
        private Point tileOrigin;
        
        /// <remarks/>
        private int tileCols;
        
        /// <remarks/>
        private int tileRows;
        
        /// <remarks/>
        private int dPI;
        
        /// <remarks/>
        private System.Collections.Generic.List<LODInfo> lODInfos;
        
        public TileCacheInfo()
        {
        }
        
        public TileCacheInfo(SpatialReference spatialReference, Point tileOrigin, int tileCols, int tileRows, int dPI, System.Collections.Generic.List<LODInfo> lODInfos)
        {
            this.spatialReference = spatialReference;
            this.tileOrigin = tileOrigin;
            this.tileCols = tileCols;
            this.tileRows = tileRows;
            this.dPI = dPI;
            this.lODInfos = lODInfos;
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0, ElementName="SpatialReference")]
        public SpatialReference SpatialReference
        {
            get
            {
                return this.spatialReference;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("SpatialReference");
                }
                if ((this.spatialReference != value))
                {
                    this.spatialReference = value;
                }
            }
        }
        
        /// <summary>
        /// The tiling origin.
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1, ElementName="TileOrigin")]
        public Point TileOrigin
        {
            get
            {
                return this.tileOrigin;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("TileOrigin");
                }
                if ((this.tileOrigin != value))
                {
                    this.tileOrigin = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2, ElementName="TileCols")]
        public int TileCols
        {
            get
            {
                return this.tileCols;
            }
            set
            {
                if ((this.tileCols != value))
                {
                    this.tileCols = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=3, ElementName="TileRows")]
        public int TileRows
        {
            get
            {
                return this.tileRows;
            }
            set
            {
                if ((this.tileRows != value))
                {
                    this.tileRows = value;
                }
            }
        }
        
        /// <summary>
        /// The tiling DPI.
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=4, ElementName="DPI")]
        public int DPI
        {
            get
            {
                return this.dPI;
            }
            set
            {
                if ((this.dPI != value))
                {
                    this.dPI = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=5, ElementName="LODInfos")]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public System.Collections.Generic.List<LODInfo> LODInfos
        {
            get
            {
                return this.lODInfos;
            }
            set
            {
                if ((this.lODInfos != value))
                {
                    this.lODInfos = value;
                }
            }
        }
    }
    
    /// <summary>
    /// .
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="LODInfo")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class LODInfo
    {
        
        /// <remarks/>
        private int levelID;
        
        /// <remarks/>
        private double scale;
        
        /// <remarks/>
        private double resolution;
        
        public LODInfo()
        {
        }
        
        public LODInfo(int levelID, double scale, double resolution)
        {
            this.levelID = levelID;
            this.scale = scale;
            this.resolution = resolution;
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0, ElementName="LevelID")]
        public int LevelID
        {
            get
            {
                return this.levelID;
            }
            set
            {
                if ((this.levelID != value))
                {
                    this.levelID = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1, ElementName="Scale")]
        public double Scale
        {
            get
            {
                return this.scale;
            }
            set
            {
                if ((this.scale != value))
                {
                    this.scale = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2, ElementName="Resolution")]
        public double Resolution
        {
            get
            {
                return this.resolution;
            }
            set
            {
                if ((this.resolution != value))
                {
                    this.resolution = value;
                }
            }
        }
    }
    
    /// <summary>
    /// .
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="TileImageInfo")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class TileImageInfo
    {
        
        /// <remarks/>
        private string cacheTileFormat;
        
        /// <remarks/>
        private int compressionQuality;
        
        /// <remarks/>
        private string antialiasing;
        
        public TileImageInfo()
        {
        }
        
        public TileImageInfo(string cacheTileFormat, int compressionQuality, string antialiasing)
        {
            this.cacheTileFormat = cacheTileFormat;
            this.compressionQuality = compressionQuality;
            this.antialiasing = antialiasing;
        }
        
        /// <summary>
        /// The cache tile format.
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0, ElementName="CacheTileFormat")]
        public string CacheTileFormat
        {
            get
            {
                return this.cacheTileFormat;
            }
            set
            {
                if ((this.cacheTileFormat != value))
                {
                    this.cacheTileFormat = value;
                }
            }
        }
        
        /// <summary>
        /// The cache tile image compression quality.
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1, ElementName="CompressionQuality")]
        public int CompressionQuality
        {
            get
            {
                return this.compressionQuality;
            }
            set
            {
                if ((this.compressionQuality != value))
                {
                    this.compressionQuality = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2, ElementName="Antialiasing")]
        public string Antialiasing
        {
            get
            {
                return this.antialiasing;
            }
            set
            {
                if ((this.antialiasing != value))
                {
                    this.antialiasing = value;
                }
            }
        }
    }
    
    /// <summary>
    /// .
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="ArrayOfLayerCacheInfo")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class ArrayOfLayerCacheInfo
    {
        
        /// <remarks/>
        private LayerCacheInfo layerCacheInfo;
        
        public ArrayOfLayerCacheInfo()
        {
        }
        
        public ArrayOfLayerCacheInfo(LayerCacheInfo layerCacheInfo)
        {
            this.layerCacheInfo = layerCacheInfo;
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0, ElementName="LayerCacheInfo")]
        public LayerCacheInfo LayerCacheInfo
        {
            get
            {
                return this.layerCacheInfo;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("LayerCacheInfo");
                }
                if ((this.layerCacheInfo != value))
                {
                    this.layerCacheInfo = value;
                }
            }
        }
    }
    
    /// <summary>
    /// .
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="LayerCacheInfo")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class LayerCacheInfo
    {
        
        /// <remarks/>
        private int layerID;
        
        /// <remarks/>
        private bool hasCache;
        
        public LayerCacheInfo()
        {
        }
        
        public LayerCacheInfo(int layerID, bool hasCache)
        {
            this.layerID = layerID;
            this.hasCache = hasCache;
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0, ElementName="LayerID")]
        public int LayerID
        {
            get
            {
                return this.layerID;
            }
            set
            {
                if ((this.layerID != value))
                {
                    this.layerID = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1, ElementName="HasCache")]
        public bool HasCache
        {
            get
            {
                return this.hasCache;
            }
            set
            {
                if ((this.hasCache != value))
                {
                    this.hasCache = value;
                }
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="esriCachedMapServiceType")]
    public enum esriCachedMapServiceType
    {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriSingleFusedMapCache")]
        esriSingleFusedMapCache,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriIndividualLayerCaches")]
        esriIndividualLayerCaches,
    }
    
    /// <summary>
    /// .
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="CacheStorageInfo")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class CacheStorageInfo
    {
        
        /// <remarks/>
        private esriMapCacheStorageFormat storageFormat;
        
        /// <remarks/>
        private int packetSize;
        
        public CacheStorageInfo()
        {
        }
        
        public CacheStorageInfo(esriMapCacheStorageFormat storageFormat, int packetSize)
        {
            this.storageFormat = storageFormat;
            this.packetSize = packetSize;
        }
        
        /// <summary>
        /// The tile storage format.
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0, ElementName="StorageFormat")]
        public esriMapCacheStorageFormat StorageFormat
        {
            get
            {
                return this.storageFormat;
            }
            set
            {
                if ((this.storageFormat != value))
                {
                    this.storageFormat = value;
                }
            }
        }
        
        /// <summary>
        /// The cache tile packet size.
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1, ElementName="PacketSize")]
        public int PacketSize
        {
            get
            {
                return this.packetSize;
            }
            set
            {
                if ((this.packetSize != value))
                {
                    this.packetSize = value;
                }
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="esriMapCacheStorageFormat")]
    public enum esriMapCacheStorageFormat
    {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriMapCacheStorageModeCompact")]
        esriMapCacheStorageModeCompact,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriMapCacheStorageModeExploded")]
        esriMapCacheStorageModeExploded,
    }
    
    /// <summary>
    /// .
    /// </summary>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(MultiPartColorRamp))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(PresetColorRamp))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RandomColorRamp))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AlgorithmicColorRamp))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="ColorRamp")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public abstract partial class ColorRamp
    {
        
        /// <remarks/>
        private string name;
        
        public ColorRamp()
        {
        }
        
        public ColorRamp(string name)
        {
            this.name = name;
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0, ElementName="Name")]
        public string Name
        {
            get
            {
                return this.name;
            }
            set
            {
                if ((this.name != value))
                {
                    this.name = value;
                }
            }
        }
    }
    
    /// <summary>
    /// .
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="MultiPartColorRamp")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class MultiPartColorRamp : ColorRamp
    {
        
        /// <remarks/>
        private int numColorRamps;
        
        /// <remarks/>
        private bool numColorRampsSpecified;
        
        /// <remarks/>
        private System.Collections.Generic.List<ColorRamp> colorRamps;
        
        public MultiPartColorRamp()
        {
        }
        
        public MultiPartColorRamp(int numColorRamps, bool numColorRampsSpecified, System.Collections.Generic.List<ColorRamp> colorRamps)
        {
            this.numColorRamps = numColorRamps;
            this.numColorRampsSpecified = numColorRampsSpecified;
            this.colorRamps = colorRamps;
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0, ElementName="NumColorRamps")]
        public int NumColorRamps
        {
            get
            {
                return this.numColorRamps;
            }
            set
            {
                if ((this.numColorRamps != value))
                {
                    this.numColorRamps = value;
                    this.numColorRampsSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NumColorRampsSpecified
        {
            get
            {
                return this.numColorRampsSpecified;
            }
            set
            {
                if ((this.numColorRampsSpecified != value))
                {
                    this.numColorRampsSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1, ElementName="ColorRamps")]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public System.Collections.Generic.List<ColorRamp> ColorRamps
        {
            get
            {
                return this.colorRamps;
            }
            set
            {
                if ((this.colorRamps != value))
                {
                    this.colorRamps = value;
                }
            }
        }
    }
    
    /// <summary>
    /// .
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="PresetColorRamp")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class PresetColorRamp : ColorRamp
    {
        
        /// <remarks/>
        private int numColors;
        
        /// <remarks/>
        private bool numColorsSpecified;
        
        /// <remarks/>
        private int presetSize;
        
        /// <remarks/>
        private bool presetSizeSpecified;
        
        /// <remarks/>
        private System.Collections.Generic.List<Color> colors;
        
        public PresetColorRamp()
        {
        }
        
        public PresetColorRamp(int numColors, bool numColorsSpecified, int presetSize, bool presetSizeSpecified, System.Collections.Generic.List<Color> colors)
        {
            this.numColors = numColors;
            this.numColorsSpecified = numColorsSpecified;
            this.presetSize = presetSize;
            this.presetSizeSpecified = presetSizeSpecified;
            this.colors = colors;
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0, ElementName="NumColors")]
        public int NumColors
        {
            get
            {
                return this.numColors;
            }
            set
            {
                if ((this.numColors != value))
                {
                    this.numColors = value;
                    this.numColorsSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NumColorsSpecified
        {
            get
            {
                return this.numColorsSpecified;
            }
            set
            {
                if ((this.numColorsSpecified != value))
                {
                    this.numColorsSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1, ElementName="PresetSize")]
        public int PresetSize
        {
            get
            {
                return this.presetSize;
            }
            set
            {
                if ((this.presetSize != value))
                {
                    this.presetSize = value;
                    this.presetSizeSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PresetSizeSpecified
        {
            get
            {
                return this.presetSizeSpecified;
            }
            set
            {
                if ((this.presetSizeSpecified != value))
                {
                    this.presetSizeSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2, ElementName="Colors")]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public System.Collections.Generic.List<Color> Colors
        {
            get
            {
                return this.colors;
            }
            set
            {
                if ((this.colors != value))
                {
                    this.colors = value;
                }
            }
        }
    }
    
    /// <summary>
    /// .
    /// </summary>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(HsvColor))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(HlsColor))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CmykColor))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RgbColor))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GrayColor))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="Color")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public abstract partial class Color
    {
        
        /// <remarks/>
        private bool useWindowsDithering;
        
        /// <remarks/>
        private bool useWindowsDitheringSpecified;
        
        /// <remarks/>
        private byte alphaValue;
        
        /// <remarks/>
        private bool alphaValueSpecified;
        
        public Color()
        {
        }
        
        public Color(bool useWindowsDithering, bool useWindowsDitheringSpecified, byte alphaValue, bool alphaValueSpecified)
        {
            this.useWindowsDithering = useWindowsDithering;
            this.useWindowsDitheringSpecified = useWindowsDitheringSpecified;
            this.alphaValue = alphaValue;
            this.alphaValueSpecified = alphaValueSpecified;
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0, ElementName="UseWindowsDithering")]
        public bool UseWindowsDithering
        {
            get
            {
                return this.useWindowsDithering;
            }
            set
            {
                if ((this.useWindowsDithering != value))
                {
                    this.useWindowsDithering = value;
                    this.useWindowsDitheringSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UseWindowsDitheringSpecified
        {
            get
            {
                return this.useWindowsDitheringSpecified;
            }
            set
            {
                if ((this.useWindowsDitheringSpecified != value))
                {
                    this.useWindowsDitheringSpecified = value;
                }
            }
        }
        
        /// <summary>
        /// The Alpha Blending value. (0 for transparent, 255 for opaque).
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1, ElementName="AlphaValue")]
        public byte AlphaValue
        {
            get
            {
                return this.alphaValue;
            }
            set
            {
                if ((this.alphaValue != value))
                {
                    this.alphaValue = value;
                    this.alphaValueSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AlphaValueSpecified
        {
            get
            {
                return this.alphaValueSpecified;
            }
            set
            {
                if ((this.alphaValueSpecified != value))
                {
                    this.alphaValueSpecified = value;
                }
            }
        }
    }
    
    /// <summary>
    /// .
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="HsvColor")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class HsvColor : Color
    {
        
        /// <remarks/>
        private short hue;
        
        /// <remarks/>
        private byte saturation;
        
        /// <remarks/>
        private byte value;
        
        public HsvColor()
        {
        }
        
        public HsvColor(short hue, byte saturation, byte value)
        {
            this.hue = hue;
            this.saturation = saturation;
            this.value = value;
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0, ElementName="Hue")]
        public short Hue
        {
            get
            {
                return this.hue;
            }
            set
            {
                if ((this.hue != value))
                {
                    this.hue = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1, ElementName="Saturation")]
        public byte Saturation
        {
            get
            {
                return this.saturation;
            }
            set
            {
                if ((this.saturation != value))
                {
                    this.saturation = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2, ElementName="Value")]
        public byte Value
        {
            get
            {
                return this.value;
            }
            set
            {
                if ((this.value != value))
                {
                    this.value = value;
                }
            }
        }
    }
    
    /// <summary>
    /// .
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="HlsColor")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class HlsColor : Color
    {
        
        /// <remarks/>
        private short hue;
        
        /// <remarks/>
        private byte lightness;
        
        /// <remarks/>
        private byte saturation;
        
        public HlsColor()
        {
        }
        
        public HlsColor(short hue, byte lightness, byte saturation)
        {
            this.hue = hue;
            this.lightness = lightness;
            this.saturation = saturation;
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0, ElementName="Hue")]
        public short Hue
        {
            get
            {
                return this.hue;
            }
            set
            {
                if ((this.hue != value))
                {
                    this.hue = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1, ElementName="Lightness")]
        public byte Lightness
        {
            get
            {
                return this.lightness;
            }
            set
            {
                if ((this.lightness != value))
                {
                    this.lightness = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2, ElementName="Saturation")]
        public byte Saturation
        {
            get
            {
                return this.saturation;
            }
            set
            {
                if ((this.saturation != value))
                {
                    this.saturation = value;
                }
            }
        }
    }
    
    /// <summary>
    /// .
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="CmykColor")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class CmykColor : Color
    {
        
        /// <remarks/>
        private byte cyan;
        
        /// <remarks/>
        private byte magenta;
        
        /// <remarks/>
        private byte yellow;
        
        /// <remarks/>
        private byte black;
        
        /// <remarks/>
        private bool overprint;
        
        /// <remarks/>
        private bool isSpot;
        
        /// <remarks/>
        private string spotDescription;
        
        /// <remarks/>
        private short spotPercent;
        
        public CmykColor()
        {
        }
        
        public CmykColor(byte cyan, byte magenta, byte yellow, byte black, bool overprint, bool isSpot, string spotDescription, short spotPercent)
        {
            this.cyan = cyan;
            this.magenta = magenta;
            this.yellow = yellow;
            this.black = black;
            this.overprint = overprint;
            this.isSpot = isSpot;
            this.spotDescription = spotDescription;
            this.spotPercent = spotPercent;
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0, ElementName="Cyan")]
        public byte Cyan
        {
            get
            {
                return this.cyan;
            }
            set
            {
                if ((this.cyan != value))
                {
                    this.cyan = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1, ElementName="Magenta")]
        public byte Magenta
        {
            get
            {
                return this.magenta;
            }
            set
            {
                if ((this.magenta != value))
                {
                    this.magenta = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2, ElementName="Yellow")]
        public byte Yellow
        {
            get
            {
                return this.yellow;
            }
            set
            {
                if ((this.yellow != value))
                {
                    this.yellow = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=3, ElementName="Black")]
        public byte Black
        {
            get
            {
                return this.black;
            }
            set
            {
                if ((this.black != value))
                {
                    this.black = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=4, ElementName="Overprint")]
        public bool Overprint
        {
            get
            {
                return this.overprint;
            }
            set
            {
                if ((this.overprint != value))
                {
                    this.overprint = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=5, ElementName="IsSpot")]
        public bool IsSpot
        {
            get
            {
                return this.isSpot;
            }
            set
            {
                if ((this.isSpot != value))
                {
                    this.isSpot = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=6, ElementName="SpotDescription")]
        public string SpotDescription
        {
            get
            {
                return this.spotDescription;
            }
            set
            {
                if ((this.spotDescription != value))
                {
                    this.spotDescription = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=7, ElementName="SpotPercent")]
        public short SpotPercent
        {
            get
            {
                return this.spotPercent;
            }
            set
            {
                if ((this.spotPercent != value))
                {
                    this.spotPercent = value;
                }
            }
        }
    }
    
    /// <summary>
    /// .
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="RgbColor")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class RgbColor : Color
    {
        
        /// <remarks/>
        private byte red;
        
        /// <remarks/>
        private byte green;
        
        /// <remarks/>
        private byte blue;
        
        public RgbColor()
        {
        }
        
        public RgbColor(byte red, byte green, byte blue)
        {
            this.red = red;
            this.green = green;
            this.blue = blue;
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0, ElementName="Red")]
        public byte Red
        {
            get
            {
                return this.red;
            }
            set
            {
                if ((this.red != value))
                {
                    this.red = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1, ElementName="Green")]
        public byte Green
        {
            get
            {
                return this.green;
            }
            set
            {
                if ((this.green != value))
                {
                    this.green = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2, ElementName="Blue")]
        public byte Blue
        {
            get
            {
                return this.blue;
            }
            set
            {
                if ((this.blue != value))
                {
                    this.blue = value;
                }
            }
        }
    }
    
    /// <summary>
    /// .
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="GrayColor")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class GrayColor : Color
    {
        
        /// <remarks/>
        private byte grayLevel;
        
        public GrayColor()
        {
        }
        
        public GrayColor(byte grayLevel)
        {
            this.grayLevel = grayLevel;
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0, ElementName="GrayLevel")]
        public byte GrayLevel
        {
            get
            {
                return this.grayLevel;
            }
            set
            {
                if ((this.grayLevel != value))
                {
                    this.grayLevel = value;
                }
            }
        }
    }
    
    /// <summary>
    /// .
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="RandomColorRamp")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class RandomColorRamp : ColorRamp
    {
        
        /// <remarks/>
        private int numColors;
        
        /// <remarks/>
        private bool numColorsSpecified;
        
        /// <remarks/>
        private bool useSeed;
        
        /// <remarks/>
        private bool useSeedSpecified;
        
        /// <remarks/>
        private int seed;
        
        /// <remarks/>
        private bool seedSpecified;
        
        /// <remarks/>
        private short minValue;
        
        /// <remarks/>
        private bool minValueSpecified;
        
        /// <remarks/>
        private short maxValue;
        
        /// <remarks/>
        private bool maxValueSpecified;
        
        /// <remarks/>
        private short minSaturation;
        
        /// <remarks/>
        private bool minSaturationSpecified;
        
        /// <remarks/>
        private short maxSaturation;
        
        /// <remarks/>
        private bool maxSaturationSpecified;
        
        /// <remarks/>
        private short startHue;
        
        /// <remarks/>
        private bool startHueSpecified;
        
        /// <remarks/>
        private short endHue;
        
        /// <remarks/>
        private bool endHueSpecified;
        
        public RandomColorRamp()
        {
        }
        
        public RandomColorRamp(
                    int numColors, 
                    bool numColorsSpecified, 
                    bool useSeed, 
                    bool useSeedSpecified, 
                    int seed, 
                    bool seedSpecified, 
                    short minValue, 
                    bool minValueSpecified, 
                    short maxValue, 
                    bool maxValueSpecified, 
                    short minSaturation, 
                    bool minSaturationSpecified, 
                    short maxSaturation, 
                    bool maxSaturationSpecified, 
                    short startHue, 
                    bool startHueSpecified, 
                    short endHue, 
                    bool endHueSpecified)
        {
            this.numColors = numColors;
            this.numColorsSpecified = numColorsSpecified;
            this.useSeed = useSeed;
            this.useSeedSpecified = useSeedSpecified;
            this.seed = seed;
            this.seedSpecified = seedSpecified;
            this.minValue = minValue;
            this.minValueSpecified = minValueSpecified;
            this.maxValue = maxValue;
            this.maxValueSpecified = maxValueSpecified;
            this.minSaturation = minSaturation;
            this.minSaturationSpecified = minSaturationSpecified;
            this.maxSaturation = maxSaturation;
            this.maxSaturationSpecified = maxSaturationSpecified;
            this.startHue = startHue;
            this.startHueSpecified = startHueSpecified;
            this.endHue = endHue;
            this.endHueSpecified = endHueSpecified;
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0, ElementName="NumColors")]
        public int NumColors
        {
            get
            {
                return this.numColors;
            }
            set
            {
                if ((this.numColors != value))
                {
                    this.numColors = value;
                    this.numColorsSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NumColorsSpecified
        {
            get
            {
                return this.numColorsSpecified;
            }
            set
            {
                if ((this.numColorsSpecified != value))
                {
                    this.numColorsSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1, ElementName="UseSeed")]
        public bool UseSeed
        {
            get
            {
                return this.useSeed;
            }
            set
            {
                if ((this.useSeed != value))
                {
                    this.useSeed = value;
                    this.useSeedSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UseSeedSpecified
        {
            get
            {
                return this.useSeedSpecified;
            }
            set
            {
                if ((this.useSeedSpecified != value))
                {
                    this.useSeedSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2, ElementName="Seed")]
        public int Seed
        {
            get
            {
                return this.seed;
            }
            set
            {
                if ((this.seed != value))
                {
                    this.seed = value;
                    this.seedSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SeedSpecified
        {
            get
            {
                return this.seedSpecified;
            }
            set
            {
                if ((this.seedSpecified != value))
                {
                    this.seedSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=3, ElementName="MinValue")]
        public short MinValue
        {
            get
            {
                return this.minValue;
            }
            set
            {
                if ((this.minValue != value))
                {
                    this.minValue = value;
                    this.minValueSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MinValueSpecified
        {
            get
            {
                return this.minValueSpecified;
            }
            set
            {
                if ((this.minValueSpecified != value))
                {
                    this.minValueSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=4, ElementName="MaxValue")]
        public short MaxValue
        {
            get
            {
                return this.maxValue;
            }
            set
            {
                if ((this.maxValue != value))
                {
                    this.maxValue = value;
                    this.maxValueSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MaxValueSpecified
        {
            get
            {
                return this.maxValueSpecified;
            }
            set
            {
                if ((this.maxValueSpecified != value))
                {
                    this.maxValueSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=5, ElementName="MinSaturation")]
        public short MinSaturation
        {
            get
            {
                return this.minSaturation;
            }
            set
            {
                if ((this.minSaturation != value))
                {
                    this.minSaturation = value;
                    this.minSaturationSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MinSaturationSpecified
        {
            get
            {
                return this.minSaturationSpecified;
            }
            set
            {
                if ((this.minSaturationSpecified != value))
                {
                    this.minSaturationSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=6, ElementName="MaxSaturation")]
        public short MaxSaturation
        {
            get
            {
                return this.maxSaturation;
            }
            set
            {
                if ((this.maxSaturation != value))
                {
                    this.maxSaturation = value;
                    this.maxSaturationSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MaxSaturationSpecified
        {
            get
            {
                return this.maxSaturationSpecified;
            }
            set
            {
                if ((this.maxSaturationSpecified != value))
                {
                    this.maxSaturationSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=7, ElementName="StartHue")]
        public short StartHue
        {
            get
            {
                return this.startHue;
            }
            set
            {
                if ((this.startHue != value))
                {
                    this.startHue = value;
                    this.startHueSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StartHueSpecified
        {
            get
            {
                return this.startHueSpecified;
            }
            set
            {
                if ((this.startHueSpecified != value))
                {
                    this.startHueSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=8, ElementName="EndHue")]
        public short EndHue
        {
            get
            {
                return this.endHue;
            }
            set
            {
                if ((this.endHue != value))
                {
                    this.endHue = value;
                    this.endHueSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EndHueSpecified
        {
            get
            {
                return this.endHueSpecified;
            }
            set
            {
                if ((this.endHueSpecified != value))
                {
                    this.endHueSpecified = value;
                }
            }
        }
    }
    
    /// <summary>
    /// .
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="AlgorithmicColorRamp")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class AlgorithmicColorRamp : ColorRamp
    {
        
        /// <remarks/>
        private string algorithm;
        
        /// <remarks/>
        private HsvColor fromColor;
        
        /// <remarks/>
        private HsvColor toColor;
        
        public AlgorithmicColorRamp()
        {
        }
        
        public AlgorithmicColorRamp(string algorithm, HsvColor fromColor, HsvColor toColor)
        {
            this.algorithm = algorithm;
            this.fromColor = fromColor;
            this.toColor = toColor;
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0, ElementName="Algorithm")]
        public string Algorithm
        {
            get
            {
                return this.algorithm;
            }
            set
            {
                if ((this.algorithm != value))
                {
                    this.algorithm = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1, ElementName="FromColor")]
        public HsvColor FromColor
        {
            get
            {
                return this.fromColor;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("FromColor");
                }
                if ((this.fromColor != value))
                {
                    this.fromColor = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2, ElementName="ToColor")]
        public HsvColor ToColor
        {
            get
            {
                return this.toColor;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("ToColor");
                }
                if ((this.toColor != value))
                {
                    this.toColor = value;
                }
            }
        }
    }
    
    /// <summary>
    /// .
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="RasterUniqueValues")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class RasterUniqueValues
    {
        
        /// <remarks/>
        private int uniqueValuesSize;
        
        /// <remarks/>
        private bool uniqueValuesSizeSpecified;
        
        /// <remarks/>
        private System.Collections.Generic.List<object> values;
        
        /// <remarks/>
        private System.Collections.Generic.List<int> counts;
        
        public RasterUniqueValues()
        {
        }
        
        public RasterUniqueValues(int uniqueValuesSize, bool uniqueValuesSizeSpecified, System.Collections.Generic.List<object> values, System.Collections.Generic.List<int> counts)
        {
            this.uniqueValuesSize = uniqueValuesSize;
            this.uniqueValuesSizeSpecified = uniqueValuesSizeSpecified;
            this.values = values;
            this.counts = counts;
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0, ElementName="UniqueValuesSize")]
        public int UniqueValuesSize
        {
            get
            {
                return this.uniqueValuesSize;
            }
            set
            {
                if ((this.uniqueValuesSize != value))
                {
                    this.uniqueValuesSize = value;
                    this.uniqueValuesSizeSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UniqueValuesSizeSpecified
        {
            get
            {
                return this.uniqueValuesSizeSpecified;
            }
            set
            {
                if ((this.uniqueValuesSizeSpecified != value))
                {
                    this.uniqueValuesSizeSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1, ElementName="Values")]
        [System.Xml.Serialization.XmlArrayItemAttribute("Value", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.Collections.Generic.List<object> Values
        {
            get
            {
                return this.values;
            }
            set
            {
                if ((this.values != value))
                {
                    this.values = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2, ElementName="Counts")]
        [System.Xml.Serialization.XmlArrayItemAttribute("Int", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public System.Collections.Generic.List<int> Counts
        {
            get
            {
                return this.counts;
            }
            set
            {
                if ((this.counts != value))
                {
                    this.counts = value;
                }
            }
        }
    }
    
    /// <summary>
    /// .
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="LegendGroup")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class LegendGroup
    {
        
        /// <remarks/>
        private bool visible;
        
        /// <remarks/>
        private bool editable;
        
        /// <remarks/>
        private string heading;
        
        /// <remarks/>
        private System.Collections.Generic.List<LegendClass> legendClasses;
        
        public LegendGroup()
        {
        }
        
        public LegendGroup(bool visible, bool editable, string heading, System.Collections.Generic.List<LegendClass> legendClasses)
        {
            this.visible = visible;
            this.editable = editable;
            this.heading = heading;
            this.legendClasses = legendClasses;
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0, ElementName="Visible")]
        public bool Visible
        {
            get
            {
                return this.visible;
            }
            set
            {
                if ((this.visible != value))
                {
                    this.visible = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1, ElementName="Editable")]
        public bool Editable
        {
            get
            {
                return this.editable;
            }
            set
            {
                if ((this.editable != value))
                {
                    this.editable = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2, ElementName="Heading")]
        public string Heading
        {
            get
            {
                return this.heading;
            }
            set
            {
                if ((this.heading != value))
                {
                    this.heading = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=3, ElementName="LegendClasses")]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public System.Collections.Generic.List<LegendClass> LegendClasses
        {
            get
            {
                return this.legendClasses;
            }
            set
            {
                if ((this.legendClasses != value))
                {
                    this.legendClasses = value;
                }
            }
        }
    }
    
    /// <summary>
    /// .
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="LegendClass")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class LegendClass
    {
        
        /// <remarks/>
        private Symbol symbol;
        
        /// <remarks/>
        private string label;
        
        /// <remarks/>
        private string description;
        
        /// <remarks/>
        private LegendClassFormat legendClassFormat;
        
        public LegendClass()
        {
        }
        
        public LegendClass(Symbol symbol, string label, string description, LegendClassFormat legendClassFormat)
        {
            this.symbol = symbol;
            this.label = label;
            this.description = description;
            this.legendClassFormat = legendClassFormat;
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0, ElementName="Symbol")]
        public Symbol Symbol
        {
            get
            {
                return this.symbol;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("Symbol");
                }
                if ((this.symbol != value))
                {
                    this.symbol = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1, ElementName="Label")]
        public string Label
        {
            get
            {
                return this.label;
            }
            set
            {
                if ((this.label != value))
                {
                    this.label = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2, ElementName="Description")]
        public string Description
        {
            get
            {
                return this.description;
            }
            set
            {
                if ((this.description != value))
                {
                    this.description = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=3, ElementName="LegendClassFormat")]
        public LegendClassFormat LegendClassFormat
        {
            get
            {
                return this.legendClassFormat;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("LegendClassFormat");
                }
                if ((this.legendClassFormat != value))
                {
                    this.legendClassFormat = value;
                }
            }
        }
    }
    
    /// <summary>
    /// .
    /// </summary>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(XMLBinarySymbol))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(MarkerSymbol))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CartographicMarkerSymbol))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(PictureMarkerSymbol))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CharacterMarkerSymbol))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SimpleMarkerSymbol))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(LineSymbol))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SimpleLineSymbol))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(FillSymbol))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(XMLBinaryFillSymbol))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(PictureFillSymbol))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SimpleFillSymbol))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TextSymbol))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SimpleTextSymbol))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="Symbol")]
    public abstract partial class Symbol
    {
        
        public Symbol()
        {
        }
    }
    
    /// <summary>
    /// .
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="XMLBinarySymbol")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class XMLBinarySymbol : Symbol
    {
        
        /// <remarks/>
        private XMLPersistedObject data;
        
        public XMLBinarySymbol()
        {
        }
        
        public XMLBinarySymbol(XMLPersistedObject data)
        {
            this.data = data;
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0, ElementName="Data")]
        public XMLPersistedObject Data
        {
            get
            {
                return this.data;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("Data");
                }
                if ((this.data != value))
                {
                    this.data = value;
                }
            }
        }
    }
    
    /// <summary>
    /// .
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="XMLPersistedObject")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class XMLPersistedObject
    {
        
        /// <remarks/>
        private byte[] bytes;
        
        public XMLPersistedObject()
        {
        }
        
        public XMLPersistedObject(byte[] bytes)
        {
            this.bytes = bytes;
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary", Order=0, ElementName="Bytes")]
        public byte[] Bytes
        {
            get
            {
                return this.bytes;
            }
            set
            {
                if ((this.bytes != value))
                {
                    this.bytes = value;
                }
            }
        }
    }
    
    /// <summary>
    /// 
    ///        Marker Symbol Properties.
    ///      .
    /// </summary>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CartographicMarkerSymbol))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(PictureMarkerSymbol))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CharacterMarkerSymbol))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SimpleMarkerSymbol))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="MarkerSymbol")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public abstract partial class MarkerSymbol : Symbol
    {
        
        /// <remarks/>
        private double angle;
        
        /// <remarks/>
        private Color color;
        
        /// <remarks/>
        private double size;
        
        /// <remarks/>
        private double xOffset;
        
        /// <remarks/>
        private double yOffset;
        
        public MarkerSymbol()
        {
        }
        
        public MarkerSymbol(double angle, Color color, double size, double xOffset, double yOffset)
        {
            this.angle = angle;
            this.color = color;
            this.size = size;
            this.xOffset = xOffset;
            this.yOffset = yOffset;
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0, ElementName="Angle")]
        public double Angle
        {
            get
            {
                return this.angle;
            }
            set
            {
                if ((this.angle != value))
                {
                    this.angle = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1, ElementName="Color")]
        public Color Color
        {
            get
            {
                return this.color;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("Color");
                }
                if ((this.color != value))
                {
                    this.color = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2, ElementName="Size")]
        public double Size
        {
            get
            {
                return this.size;
            }
            set
            {
                if ((this.size != value))
                {
                    this.size = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=3, ElementName="XOffset")]
        public double XOffset
        {
            get
            {
                return this.xOffset;
            }
            set
            {
                if ((this.xOffset != value))
                {
                    this.xOffset = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=4, ElementName="YOffset")]
        public double YOffset
        {
            get
            {
                return this.yOffset;
            }
            set
            {
                if ((this.yOffset != value))
                {
                    this.yOffset = value;
                }
            }
        }
    }
    
    /// <summary>
    /// 
    ///        Cartographic marker symbol properties.
    ///      .
    /// </summary>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(PictureMarkerSymbol))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CharacterMarkerSymbol))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="CartographicMarkerSymbol")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public abstract partial class CartographicMarkerSymbol : MarkerSymbol
    {
        
        /// <remarks/>
        private double xScale;
        
        /// <remarks/>
        private double yScale;
        
        public CartographicMarkerSymbol()
        {
            this.XScale = 1;
            this.YScale = 1;
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0, ElementName="XScale")]
        public double XScale
        {
            get
            {
                return this.xScale;
            }
            set
            {
                if ((this.xScale != value))
                {
                    this.xScale = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1, ElementName="YScale")]
        public double YScale
        {
            get
            {
                return this.yScale;
            }
            set
            {
                if ((this.yScale != value))
                {
                    this.yScale = value;
                }
            }
        }
    }
    
    /// <summary>
    /// .
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="PictureMarkerSymbol")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class PictureMarkerSymbol : CartographicMarkerSymbol
    {
        
        /// <remarks/>
        private Color bgColor;
        
        /// <remarks/>
        private Color bitmapTransColor;
        
        /// <remarks/>
        private byte[] picture;
        
        /// <remarks/>
        private string pictureUri;
        
        /// <remarks/>
        private double width;
        
        /// <remarks/>
        private bool widthSpecified;
        
        /// <remarks/>
        private Color fgColor;
        
        /// <remarks/>
        private bool swap1BitColor;
        
        /// <remarks/>
        private bool swap1BitColorSpecified;
        
        public PictureMarkerSymbol()
        {
        }
        
        public PictureMarkerSymbol(Color bgColor, Color bitmapTransColor, byte[] picture, string pictureUri, double width, bool widthSpecified, Color fgColor, bool swap1BitColor, bool swap1BitColorSpecified)
        {
            this.bgColor = bgColor;
            this.bitmapTransColor = bitmapTransColor;
            this.picture = picture;
            this.pictureUri = pictureUri;
            this.width = width;
            this.widthSpecified = widthSpecified;
            this.fgColor = fgColor;
            this.swap1BitColor = swap1BitColor;
            this.swap1BitColorSpecified = swap1BitColorSpecified;
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0, ElementName="BgColor")]
        public Color BgColor
        {
            get
            {
                return this.bgColor;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("BgColor");
                }
                if ((this.bgColor != value))
                {
                    this.bgColor = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1, ElementName="BitmapTransColor")]
        public Color BitmapTransColor
        {
            get
            {
                return this.bitmapTransColor;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("BitmapTransColor");
                }
                if ((this.bitmapTransColor != value))
                {
                    this.bitmapTransColor = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary", Order=2, ElementName="Picture")]
        public byte[] Picture
        {
            get
            {
                return this.picture;
            }
            set
            {
                if ((this.picture != value))
                {
                    this.picture = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=3, ElementName="PictureUri")]
        public string PictureUri
        {
            get
            {
                return this.pictureUri;
            }
            set
            {
                if ((this.pictureUri != value))
                {
                    this.pictureUri = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=4, ElementName="Width")]
        public double Width
        {
            get
            {
                return this.width;
            }
            set
            {
                if ((this.width != value))
                {
                    this.width = value;
                    this.widthSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WidthSpecified
        {
            get
            {
                return this.widthSpecified;
            }
            set
            {
                if ((this.widthSpecified != value))
                {
                    this.widthSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=5, ElementName="FgColor")]
        public Color FgColor
        {
            get
            {
                return this.fgColor;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("FgColor");
                }
                if ((this.fgColor != value))
                {
                    this.fgColor = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=6, ElementName="Swap1BitColor")]
        public bool Swap1BitColor
        {
            get
            {
                return this.swap1BitColor;
            }
            set
            {
                if ((this.swap1BitColor != value))
                {
                    this.swap1BitColor = value;
                    this.swap1BitColorSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Swap1BitColorSpecified
        {
            get
            {
                return this.swap1BitColorSpecified;
            }
            set
            {
                if ((this.swap1BitColorSpecified != value))
                {
                    this.swap1BitColorSpecified = value;
                }
            }
        }
    }
    
    /// <summary>
    /// .
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="CharacterMarkerSymbol")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class CharacterMarkerSymbol : CartographicMarkerSymbol
    {
        
        /// <remarks/>
        private int characterIndex;
        
        /// <remarks/>
        private string fontName;
        
        /// <remarks/>
        private bool fontItalic;
        
        /// <remarks/>
        private bool fontItalicSpecified;
        
        /// <remarks/>
        private bool fontUnderline;
        
        /// <remarks/>
        private bool fontUnderlineSpecified;
        
        /// <remarks/>
        private bool fontStrikethrough;
        
        /// <remarks/>
        private bool fontStrikethroughSpecified;
        
        /// <remarks/>
        private int fontWeight;
        
        /// <remarks/>
        private bool fontWeightSpecified;
        
        /// <remarks/>
        private int fontCharset;
        
        /// <remarks/>
        private bool fontCharsetSpecified;
        
        /// <remarks/>
        private int fontSizeHi;
        
        /// <remarks/>
        private bool fontSizeHiSpecified;
        
        /// <remarks/>
        private int fontSizeLo;
        
        /// <remarks/>
        private bool fontSizeLoSpecified;
        
        public CharacterMarkerSymbol()
        {
        }
        
        public CharacterMarkerSymbol(
                    int characterIndex, 
                    string fontName, 
                    bool fontItalic, 
                    bool fontItalicSpecified, 
                    bool fontUnderline, 
                    bool fontUnderlineSpecified, 
                    bool fontStrikethrough, 
                    bool fontStrikethroughSpecified, 
                    int fontWeight, 
                    bool fontWeightSpecified, 
                    int fontCharset, 
                    bool fontCharsetSpecified, 
                    int fontSizeHi, 
                    bool fontSizeHiSpecified, 
                    int fontSizeLo, 
                    bool fontSizeLoSpecified)
        {
            this.characterIndex = characterIndex;
            this.fontName = fontName;
            this.fontItalic = fontItalic;
            this.fontItalicSpecified = fontItalicSpecified;
            this.fontUnderline = fontUnderline;
            this.fontUnderlineSpecified = fontUnderlineSpecified;
            this.fontStrikethrough = fontStrikethrough;
            this.fontStrikethroughSpecified = fontStrikethroughSpecified;
            this.fontWeight = fontWeight;
            this.fontWeightSpecified = fontWeightSpecified;
            this.fontCharset = fontCharset;
            this.fontCharsetSpecified = fontCharsetSpecified;
            this.fontSizeHi = fontSizeHi;
            this.fontSizeHiSpecified = fontSizeHiSpecified;
            this.fontSizeLo = fontSizeLo;
            this.fontSizeLoSpecified = fontSizeLoSpecified;
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0, ElementName="CharacterIndex")]
        public int CharacterIndex
        {
            get
            {
                return this.characterIndex;
            }
            set
            {
                if ((this.characterIndex != value))
                {
                    this.characterIndex = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1, ElementName="FontName")]
        public string FontName
        {
            get
            {
                return this.fontName;
            }
            set
            {
                if ((this.fontName != value))
                {
                    this.fontName = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2, ElementName="FontItalic")]
        public bool FontItalic
        {
            get
            {
                return this.fontItalic;
            }
            set
            {
                if ((this.fontItalic != value))
                {
                    this.fontItalic = value;
                    this.fontItalicSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FontItalicSpecified
        {
            get
            {
                return this.fontItalicSpecified;
            }
            set
            {
                if ((this.fontItalicSpecified != value))
                {
                    this.fontItalicSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=3, ElementName="FontUnderline")]
        public bool FontUnderline
        {
            get
            {
                return this.fontUnderline;
            }
            set
            {
                if ((this.fontUnderline != value))
                {
                    this.fontUnderline = value;
                    this.fontUnderlineSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FontUnderlineSpecified
        {
            get
            {
                return this.fontUnderlineSpecified;
            }
            set
            {
                if ((this.fontUnderlineSpecified != value))
                {
                    this.fontUnderlineSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=4, ElementName="FontStrikethrough")]
        public bool FontStrikethrough
        {
            get
            {
                return this.fontStrikethrough;
            }
            set
            {
                if ((this.fontStrikethrough != value))
                {
                    this.fontStrikethrough = value;
                    this.fontStrikethroughSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FontStrikethroughSpecified
        {
            get
            {
                return this.fontStrikethroughSpecified;
            }
            set
            {
                if ((this.fontStrikethroughSpecified != value))
                {
                    this.fontStrikethroughSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=5, ElementName="FontWeight")]
        public int FontWeight
        {
            get
            {
                return this.fontWeight;
            }
            set
            {
                if ((this.fontWeight != value))
                {
                    this.fontWeight = value;
                    this.fontWeightSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FontWeightSpecified
        {
            get
            {
                return this.fontWeightSpecified;
            }
            set
            {
                if ((this.fontWeightSpecified != value))
                {
                    this.fontWeightSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=6, ElementName="FontCharset")]
        public int FontCharset
        {
            get
            {
                return this.fontCharset;
            }
            set
            {
                if ((this.fontCharset != value))
                {
                    this.fontCharset = value;
                    this.fontCharsetSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FontCharsetSpecified
        {
            get
            {
                return this.fontCharsetSpecified;
            }
            set
            {
                if ((this.fontCharsetSpecified != value))
                {
                    this.fontCharsetSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=7, ElementName="FontSizeHi")]
        public int FontSizeHi
        {
            get
            {
                return this.fontSizeHi;
            }
            set
            {
                if ((this.fontSizeHi != value))
                {
                    this.fontSizeHi = value;
                    this.fontSizeHiSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FontSizeHiSpecified
        {
            get
            {
                return this.fontSizeHiSpecified;
            }
            set
            {
                if ((this.fontSizeHiSpecified != value))
                {
                    this.fontSizeHiSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=8, ElementName="FontSizeLo")]
        public int FontSizeLo
        {
            get
            {
                return this.fontSizeLo;
            }
            set
            {
                if ((this.fontSizeLo != value))
                {
                    this.fontSizeLo = value;
                    this.fontSizeLoSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FontSizeLoSpecified
        {
            get
            {
                return this.fontSizeLoSpecified;
            }
            set
            {
                if ((this.fontSizeLoSpecified != value))
                {
                    this.fontSizeLoSpecified = value;
                }
            }
        }
    }
    
    /// <summary>
    /// .
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="SimpleMarkerSymbol")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class SimpleMarkerSymbol : MarkerSymbol
    {
        
        /// <remarks/>
        private bool outline;
        
        /// <remarks/>
        private double outlineSize;
        
        /// <remarks/>
        private Color outlineColor;
        
        /// <remarks/>
        private esriSimpleMarkerStyle style;
        
        public SimpleMarkerSymbol()
        {
        }
        
        public SimpleMarkerSymbol(bool outline, double outlineSize, Color outlineColor, esriSimpleMarkerStyle style)
        {
            this.outline = outline;
            this.outlineSize = outlineSize;
            this.outlineColor = outlineColor;
            this.style = style;
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0, ElementName="Outline")]
        public bool Outline
        {
            get
            {
                return this.outline;
            }
            set
            {
                if ((this.outline != value))
                {
                    this.outline = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1, ElementName="OutlineSize")]
        public double OutlineSize
        {
            get
            {
                return this.outlineSize;
            }
            set
            {
                if ((this.outlineSize != value))
                {
                    this.outlineSize = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2, ElementName="OutlineColor")]
        public Color OutlineColor
        {
            get
            {
                return this.outlineColor;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("OutlineColor");
                }
                if ((this.outlineColor != value))
                {
                    this.outlineColor = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=3, ElementName="Style")]
        public esriSimpleMarkerStyle Style
        {
            get
            {
                return this.style;
            }
            set
            {
                if ((this.style != value))
                {
                    this.style = value;
                }
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="esriSimpleMarkerStyle")]
    public enum esriSimpleMarkerStyle
    {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriSMSCircle")]
        esriSMSCircle,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriSMSSquare")]
        esriSMSSquare,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriSMSCross")]
        esriSMSCross,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriSMSX")]
        esriSMSX,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriSMSDiamond")]
        esriSMSDiamond,
    }
    
    /// <summary>
    /// 
    ///        Line Symbol properties.
    ///      .
    /// </summary>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SimpleLineSymbol))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="LineSymbol")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public abstract partial class LineSymbol : Symbol
    {
        
        /// <remarks/>
        private Color color;
        
        /// <remarks/>
        private double width;
        
        public LineSymbol()
        {
        }
        
        public LineSymbol(Color color, double width)
        {
            this.color = color;
            this.width = width;
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0, ElementName="Color")]
        public Color Color
        {
            get
            {
                return this.color;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("Color");
                }
                if ((this.color != value))
                {
                    this.color = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1, ElementName="Width")]
        public double Width
        {
            get
            {
                return this.width;
            }
            set
            {
                if ((this.width != value))
                {
                    this.width = value;
                }
            }
        }
    }
    
    /// <summary>
    /// .
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="SimpleLineSymbol")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class SimpleLineSymbol : LineSymbol
    {
        
        /// <remarks/>
        private esriSimpleLineStyle style;
        
        public SimpleLineSymbol()
        {
        }
        
        public SimpleLineSymbol(esriSimpleLineStyle style)
        {
            this.style = style;
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0, ElementName="Style")]
        public esriSimpleLineStyle Style
        {
            get
            {
                return this.style;
            }
            set
            {
                if ((this.style != value))
                {
                    this.style = value;
                }
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="esriSimpleLineStyle")]
    public enum esriSimpleLineStyle
    {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriSLSSolid")]
        esriSLSSolid,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriSLSDash")]
        esriSLSDash,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriSLSDot")]
        esriSLSDot,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriSLSDashDot")]
        esriSLSDashDot,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriSLSDashDotDot")]
        esriSLSDashDotDot,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriSLSNull")]
        esriSLSNull,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriSLSInsideFrame")]
        esriSLSInsideFrame,
    }
    
    /// <summary>
    /// 
    ///        Fill Sybmol Properties.
    ///      .
    /// </summary>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(XMLBinaryFillSymbol))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(PictureFillSymbol))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SimpleFillSymbol))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="FillSymbol")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public abstract partial class FillSymbol : Symbol
    {
        
        /// <remarks/>
        private Color color;
        
        /// <remarks/>
        private LineSymbol outline;
        
        public FillSymbol()
        {
        }
        
        public FillSymbol(Color color, LineSymbol outline)
        {
            this.color = color;
            this.outline = outline;
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0, ElementName="Color")]
        public Color Color
        {
            get
            {
                return this.color;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("Color");
                }
                if ((this.color != value))
                {
                    this.color = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1, ElementName="Outline")]
        public LineSymbol Outline
        {
            get
            {
                return this.outline;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("Outline");
                }
                if ((this.outline != value))
                {
                    this.outline = value;
                }
            }
        }
    }
    
    /// <summary>
    /// .
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="XMLBinaryFillSymbol")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class XMLBinaryFillSymbol : FillSymbol
    {
        
        /// <remarks/>
        private XMLPersistedObject data;
        
        public XMLBinaryFillSymbol()
        {
        }
        
        public XMLBinaryFillSymbol(XMLPersistedObject data)
        {
            this.data = data;
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0, ElementName="Data")]
        public XMLPersistedObject Data
        {
            get
            {
                return this.data;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("Data");
                }
                if ((this.data != value))
                {
                    this.data = value;
                }
            }
        }
    }
    
    /// <summary>
    /// .
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="PictureFillSymbol")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class PictureFillSymbol : FillSymbol
    {
        
        /// <remarks/>
        private byte[] picture;
        
        /// <remarks/>
        private string pictureUri;
        
        /// <remarks/>
        private double width;
        
        /// <remarks/>
        private bool widthSpecified;
        
        /// <remarks/>
        private double height;
        
        /// <remarks/>
        private bool heightSpecified;
        
        /// <remarks/>
        private Color bgColor;
        
        /// <remarks/>
        private Color fgColor;
        
        /// <remarks/>
        private Color bitmapTransColor;
        
        /// <remarks/>
        private double xSeparation;
        
        /// <remarks/>
        private bool xSeparationSpecified;
        
        /// <remarks/>
        private double ySeparation;
        
        /// <remarks/>
        private bool ySeparationSpecified;
        
        /// <remarks/>
        private bool swap1BitColor;
        
        /// <remarks/>
        private bool swap1BitColorSpecified;
        
        /// <remarks/>
        private double angle;
        
        /// <remarks/>
        private bool angleSpecified;
        
        /// <remarks/>
        private double xOffset;
        
        /// <remarks/>
        private bool xOffsetSpecified;
        
        /// <remarks/>
        private double yOffset;
        
        /// <remarks/>
        private bool yOffsetSpecified;
        
        /// <remarks/>
        private double xScale;
        
        /// <remarks/>
        private double yScale;
        
        public PictureFillSymbol()
        {
            this.XScale = 1;
            this.YScale = 1;
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary", Order=0, ElementName="Picture")]
        public byte[] Picture
        {
            get
            {
                return this.picture;
            }
            set
            {
                if ((this.picture != value))
                {
                    this.picture = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1, ElementName="PictureUri")]
        public string PictureUri
        {
            get
            {
                return this.pictureUri;
            }
            set
            {
                if ((this.pictureUri != value))
                {
                    this.pictureUri = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2, ElementName="Width")]
        public double Width
        {
            get
            {
                return this.width;
            }
            set
            {
                if ((this.width != value))
                {
                    this.width = value;
                    this.widthSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WidthSpecified
        {
            get
            {
                return this.widthSpecified;
            }
            set
            {
                if ((this.widthSpecified != value))
                {
                    this.widthSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=3, ElementName="Height")]
        public double Height
        {
            get
            {
                return this.height;
            }
            set
            {
                if ((this.height != value))
                {
                    this.height = value;
                    this.heightSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HeightSpecified
        {
            get
            {
                return this.heightSpecified;
            }
            set
            {
                if ((this.heightSpecified != value))
                {
                    this.heightSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=4, ElementName="BgColor")]
        public Color BgColor
        {
            get
            {
                return this.bgColor;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("BgColor");
                }
                if ((this.bgColor != value))
                {
                    this.bgColor = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=5, ElementName="FgColor")]
        public Color FgColor
        {
            get
            {
                return this.fgColor;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("FgColor");
                }
                if ((this.fgColor != value))
                {
                    this.fgColor = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=6, ElementName="BitmapTransColor")]
        public Color BitmapTransColor
        {
            get
            {
                return this.bitmapTransColor;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("BitmapTransColor");
                }
                if ((this.bitmapTransColor != value))
                {
                    this.bitmapTransColor = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=7, ElementName="XSeparation")]
        public double XSeparation
        {
            get
            {
                return this.xSeparation;
            }
            set
            {
                if ((this.xSeparation != value))
                {
                    this.xSeparation = value;
                    this.xSeparationSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool XSeparationSpecified
        {
            get
            {
                return this.xSeparationSpecified;
            }
            set
            {
                if ((this.xSeparationSpecified != value))
                {
                    this.xSeparationSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=8, ElementName="YSeparation")]
        public double YSeparation
        {
            get
            {
                return this.ySeparation;
            }
            set
            {
                if ((this.ySeparation != value))
                {
                    this.ySeparation = value;
                    this.ySeparationSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool YSeparationSpecified
        {
            get
            {
                return this.ySeparationSpecified;
            }
            set
            {
                if ((this.ySeparationSpecified != value))
                {
                    this.ySeparationSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=9, ElementName="Swap1BitColor")]
        public bool Swap1BitColor
        {
            get
            {
                return this.swap1BitColor;
            }
            set
            {
                if ((this.swap1BitColor != value))
                {
                    this.swap1BitColor = value;
                    this.swap1BitColorSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Swap1BitColorSpecified
        {
            get
            {
                return this.swap1BitColorSpecified;
            }
            set
            {
                if ((this.swap1BitColorSpecified != value))
                {
                    this.swap1BitColorSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=10, ElementName="Angle")]
        public double Angle
        {
            get
            {
                return this.angle;
            }
            set
            {
                if ((this.angle != value))
                {
                    this.angle = value;
                    this.angleSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AngleSpecified
        {
            get
            {
                return this.angleSpecified;
            }
            set
            {
                if ((this.angleSpecified != value))
                {
                    this.angleSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=11, ElementName="XOffset")]
        public double XOffset
        {
            get
            {
                return this.xOffset;
            }
            set
            {
                if ((this.xOffset != value))
                {
                    this.xOffset = value;
                    this.xOffsetSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool XOffsetSpecified
        {
            get
            {
                return this.xOffsetSpecified;
            }
            set
            {
                if ((this.xOffsetSpecified != value))
                {
                    this.xOffsetSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=12, ElementName="YOffset")]
        public double YOffset
        {
            get
            {
                return this.yOffset;
            }
            set
            {
                if ((this.yOffset != value))
                {
                    this.yOffset = value;
                    this.yOffsetSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool YOffsetSpecified
        {
            get
            {
                return this.yOffsetSpecified;
            }
            set
            {
                if ((this.yOffsetSpecified != value))
                {
                    this.yOffsetSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=13, ElementName="XScale")]
        [System.ComponentModel.DefaultValueAttribute(1)]
        public double XScale
        {
            get
            {
                return this.xScale;
            }
            set
            {
                if ((this.xScale != value))
                {
                    this.xScale = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=14, ElementName="YScale")]
        [System.ComponentModel.DefaultValueAttribute(1)]
        public double YScale
        {
            get
            {
                return this.yScale;
            }
            set
            {
                if ((this.yScale != value))
                {
                    this.yScale = value;
                }
            }
        }
    }
    
    /// <summary>
    /// .
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="SimpleFillSymbol")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class SimpleFillSymbol : FillSymbol
    {
        
        /// <remarks/>
        private esriSimpleFillStyle style;
        
        public SimpleFillSymbol()
        {
        }
        
        public SimpleFillSymbol(esriSimpleFillStyle style)
        {
            this.style = style;
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0, ElementName="Style")]
        public esriSimpleFillStyle Style
        {
            get
            {
                return this.style;
            }
            set
            {
                if ((this.style != value))
                {
                    this.style = value;
                }
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="esriSimpleFillStyle")]
    public enum esriSimpleFillStyle
    {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriSFSSolid")]
        esriSFSSolid,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriSFSNull")]
        esriSFSNull,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriSFSHorizontal")]
        esriSFSHorizontal,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriSFSVertical")]
        esriSFSVertical,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriSFSForwardDiagonal")]
        esriSFSForwardDiagonal,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriSFSBackwardDiagonal")]
        esriSFSBackwardDiagonal,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriSFSCross")]
        esriSFSCross,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriSFSDiagonalCross")]
        esriSFSDiagonalCross,
    }
    
    /// <summary>
    /// .
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="TextSymbol")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class TextSymbol : Symbol
    {
        
        /// <remarks/>
        private Color color;
        
        /// <remarks/>
        private int breakCharIndex;
        
        /// <remarks/>
        private esriTextVerticalAlignment verticalAlignment;
        
        /// <remarks/>
        private esriTextHorizontalAlignment horizontalAlignment;
        
        /// <remarks/>
        private bool clip;
        
        /// <remarks/>
        private bool rightToLeft;
        
        /// <remarks/>
        private double angle;
        
        /// <remarks/>
        private double xOffset;
        
        /// <remarks/>
        private double yOffset;
        
        /// <remarks/>
        private Color shadowColor;
        
        /// <remarks/>
        private double shadowXOffset;
        
        /// <remarks/>
        private double shadowYOffset;
        
        /// <remarks/>
        private esriTextPosition textPosition;
        
        /// <remarks/>
        private esriTextCase textCase;
        
        /// <remarks/>
        private double characterSpacing;
        
        /// <remarks/>
        private double characterWidth;
        
        /// <remarks/>
        private double wordSpacing;
        
        /// <remarks/>
        private bool kerning;
        
        /// <remarks/>
        private double leading;
        
        /// <remarks/>
        private esriTextDirection textDirection;
        
        /// <remarks/>
        private double flipAngle;
        
        /// <remarks/>
        private bool typeSetting;
        
        /// <remarks/>
        private string textPathClass;
        
        /// <remarks/>
        private Symbol fillSymbol;
        
        /// <remarks/>
        private string text;
        
        /// <remarks/>
        private double size;
        
        /// <remarks/>
        private esriMaskStyle maskStyle;
        
        /// <remarks/>
        private double maskSize;
        
        /// <remarks/>
        private Symbol maskSymbol;
        
        /// <remarks/>
        private string fontName;
        
        /// <remarks/>
        private bool fontItalic;
        
        /// <remarks/>
        private bool fontItalicSpecified;
        
        /// <remarks/>
        private bool fontUnderline;
        
        /// <remarks/>
        private bool fontUnderlineSpecified;
        
        /// <remarks/>
        private bool fontStrikethrough;
        
        /// <remarks/>
        private bool fontStrikethroughSpecified;
        
        /// <remarks/>
        private int fontWeight;
        
        /// <remarks/>
        private bool fontWeightSpecified;
        
        /// <remarks/>
        private int fontCharset;
        
        /// <remarks/>
        private bool fontCharsetSpecified;
        
        /// <remarks/>
        private int fontSizeHi;
        
        /// <remarks/>
        private bool fontSizeHiSpecified;
        
        /// <remarks/>
        private int fontSizeLo;
        
        /// <remarks/>
        private bool fontSizeLoSpecified;
        
        /// <remarks/>
        private string textParserClass;
        
        public TextSymbol()
        {
            this.CharacterWidth = 100;
            this.WordSpacing = 100;
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0, ElementName="Color")]
        public Color Color
        {
            get
            {
                return this.color;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("Color");
                }
                if ((this.color != value))
                {
                    this.color = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1, ElementName="BreakCharIndex")]
        public int BreakCharIndex
        {
            get
            {
                return this.breakCharIndex;
            }
            set
            {
                if ((this.breakCharIndex != value))
                {
                    this.breakCharIndex = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2, ElementName="VerticalAlignment")]
        public esriTextVerticalAlignment VerticalAlignment
        {
            get
            {
                return this.verticalAlignment;
            }
            set
            {
                if ((this.verticalAlignment != value))
                {
                    this.verticalAlignment = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=3, ElementName="HorizontalAlignment")]
        public esriTextHorizontalAlignment HorizontalAlignment
        {
            get
            {
                return this.horizontalAlignment;
            }
            set
            {
                if ((this.horizontalAlignment != value))
                {
                    this.horizontalAlignment = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=4, ElementName="Clip")]
        public bool Clip
        {
            get
            {
                return this.clip;
            }
            set
            {
                if ((this.clip != value))
                {
                    this.clip = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=5, ElementName="RightToLeft")]
        public bool RightToLeft
        {
            get
            {
                return this.rightToLeft;
            }
            set
            {
                if ((this.rightToLeft != value))
                {
                    this.rightToLeft = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=6, ElementName="Angle")]
        public double Angle
        {
            get
            {
                return this.angle;
            }
            set
            {
                if ((this.angle != value))
                {
                    this.angle = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=7, ElementName="XOffset")]
        public double XOffset
        {
            get
            {
                return this.xOffset;
            }
            set
            {
                if ((this.xOffset != value))
                {
                    this.xOffset = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=8, ElementName="YOffset")]
        public double YOffset
        {
            get
            {
                return this.yOffset;
            }
            set
            {
                if ((this.yOffset != value))
                {
                    this.yOffset = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=9, ElementName="ShadowColor")]
        public Color ShadowColor
        {
            get
            {
                return this.shadowColor;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("ShadowColor");
                }
                if ((this.shadowColor != value))
                {
                    this.shadowColor = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=10, ElementName="ShadowXOffset")]
        public double ShadowXOffset
        {
            get
            {
                return this.shadowXOffset;
            }
            set
            {
                if ((this.shadowXOffset != value))
                {
                    this.shadowXOffset = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=11, ElementName="ShadowYOffset")]
        public double ShadowYOffset
        {
            get
            {
                return this.shadowYOffset;
            }
            set
            {
                if ((this.shadowYOffset != value))
                {
                    this.shadowYOffset = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=12, ElementName="TextPosition")]
        public esriTextPosition TextPosition
        {
            get
            {
                return this.textPosition;
            }
            set
            {
                if ((this.textPosition != value))
                {
                    this.textPosition = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=13, ElementName="TextCase")]
        public esriTextCase TextCase
        {
            get
            {
                return this.textCase;
            }
            set
            {
                if ((this.textCase != value))
                {
                    this.textCase = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=14, ElementName="CharacterSpacing")]
        public double CharacterSpacing
        {
            get
            {
                return this.characterSpacing;
            }
            set
            {
                if ((this.characterSpacing != value))
                {
                    this.characterSpacing = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=15, ElementName="CharacterWidth")]
        public double CharacterWidth
        {
            get
            {
                return this.characterWidth;
            }
            set
            {
                if ((this.characterWidth != value))
                {
                    this.characterWidth = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=16, ElementName="WordSpacing")]
        public double WordSpacing
        {
            get
            {
                return this.wordSpacing;
            }
            set
            {
                if ((this.wordSpacing != value))
                {
                    this.wordSpacing = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=17, ElementName="Kerning")]
        public bool Kerning
        {
            get
            {
                return this.kerning;
            }
            set
            {
                if ((this.kerning != value))
                {
                    this.kerning = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=18, ElementName="Leading")]
        public double Leading
        {
            get
            {
                return this.leading;
            }
            set
            {
                if ((this.leading != value))
                {
                    this.leading = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=19, ElementName="TextDirection")]
        public esriTextDirection TextDirection
        {
            get
            {
                return this.textDirection;
            }
            set
            {
                if ((this.textDirection != value))
                {
                    this.textDirection = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=20, ElementName="FlipAngle")]
        public double FlipAngle
        {
            get
            {
                return this.flipAngle;
            }
            set
            {
                if ((this.flipAngle != value))
                {
                    this.flipAngle = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=21, ElementName="TypeSetting")]
        public bool TypeSetting
        {
            get
            {
                return this.typeSetting;
            }
            set
            {
                if ((this.typeSetting != value))
                {
                    this.typeSetting = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=22, ElementName="TextPathClass")]
        public string TextPathClass
        {
            get
            {
                return this.textPathClass;
            }
            set
            {
                if ((this.textPathClass != value))
                {
                    this.textPathClass = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=23, ElementName="FillSymbol")]
        public Symbol FillSymbol
        {
            get
            {
                return this.fillSymbol;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("FillSymbol");
                }
                if ((this.fillSymbol != value))
                {
                    this.fillSymbol = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=24, ElementName="Text")]
        public string Text
        {
            get
            {
                return this.text;
            }
            set
            {
                if ((this.text != value))
                {
                    this.text = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=25, ElementName="Size")]
        public double Size
        {
            get
            {
                return this.size;
            }
            set
            {
                if ((this.size != value))
                {
                    this.size = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=26, ElementName="MaskStyle")]
        public esriMaskStyle MaskStyle
        {
            get
            {
                return this.maskStyle;
            }
            set
            {
                if ((this.maskStyle != value))
                {
                    this.maskStyle = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=27, ElementName="MaskSize")]
        public double MaskSize
        {
            get
            {
                return this.maskSize;
            }
            set
            {
                if ((this.maskSize != value))
                {
                    this.maskSize = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=28, ElementName="MaskSymbol")]
        public Symbol MaskSymbol
        {
            get
            {
                return this.maskSymbol;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("MaskSymbol");
                }
                if ((this.maskSymbol != value))
                {
                    this.maskSymbol = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=29, ElementName="FontName")]
        public string FontName
        {
            get
            {
                return this.fontName;
            }
            set
            {
                if ((this.fontName != value))
                {
                    this.fontName = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=30, ElementName="FontItalic")]
        public bool FontItalic
        {
            get
            {
                return this.fontItalic;
            }
            set
            {
                if ((this.fontItalic != value))
                {
                    this.fontItalic = value;
                    this.fontItalicSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FontItalicSpecified
        {
            get
            {
                return this.fontItalicSpecified;
            }
            set
            {
                if ((this.fontItalicSpecified != value))
                {
                    this.fontItalicSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=31, ElementName="FontUnderline")]
        public bool FontUnderline
        {
            get
            {
                return this.fontUnderline;
            }
            set
            {
                if ((this.fontUnderline != value))
                {
                    this.fontUnderline = value;
                    this.fontUnderlineSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FontUnderlineSpecified
        {
            get
            {
                return this.fontUnderlineSpecified;
            }
            set
            {
                if ((this.fontUnderlineSpecified != value))
                {
                    this.fontUnderlineSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=32, ElementName="FontStrikethrough")]
        public bool FontStrikethrough
        {
            get
            {
                return this.fontStrikethrough;
            }
            set
            {
                if ((this.fontStrikethrough != value))
                {
                    this.fontStrikethrough = value;
                    this.fontStrikethroughSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FontStrikethroughSpecified
        {
            get
            {
                return this.fontStrikethroughSpecified;
            }
            set
            {
                if ((this.fontStrikethroughSpecified != value))
                {
                    this.fontStrikethroughSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=33, ElementName="FontWeight")]
        public int FontWeight
        {
            get
            {
                return this.fontWeight;
            }
            set
            {
                if ((this.fontWeight != value))
                {
                    this.fontWeight = value;
                    this.fontWeightSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FontWeightSpecified
        {
            get
            {
                return this.fontWeightSpecified;
            }
            set
            {
                if ((this.fontWeightSpecified != value))
                {
                    this.fontWeightSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=34, ElementName="FontCharset")]
        public int FontCharset
        {
            get
            {
                return this.fontCharset;
            }
            set
            {
                if ((this.fontCharset != value))
                {
                    this.fontCharset = value;
                    this.fontCharsetSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FontCharsetSpecified
        {
            get
            {
                return this.fontCharsetSpecified;
            }
            set
            {
                if ((this.fontCharsetSpecified != value))
                {
                    this.fontCharsetSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=35, ElementName="FontSizeHi")]
        public int FontSizeHi
        {
            get
            {
                return this.fontSizeHi;
            }
            set
            {
                if ((this.fontSizeHi != value))
                {
                    this.fontSizeHi = value;
                    this.fontSizeHiSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FontSizeHiSpecified
        {
            get
            {
                return this.fontSizeHiSpecified;
            }
            set
            {
                if ((this.fontSizeHiSpecified != value))
                {
                    this.fontSizeHiSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=36, ElementName="FontSizeLo")]
        public int FontSizeLo
        {
            get
            {
                return this.fontSizeLo;
            }
            set
            {
                if ((this.fontSizeLo != value))
                {
                    this.fontSizeLo = value;
                    this.fontSizeLoSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FontSizeLoSpecified
        {
            get
            {
                return this.fontSizeLoSpecified;
            }
            set
            {
                if ((this.fontSizeLoSpecified != value))
                {
                    this.fontSizeLoSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=37, ElementName="TextParserClass")]
        public string TextParserClass
        {
            get
            {
                return this.textParserClass;
            }
            set
            {
                if ((this.textParserClass != value))
                {
                    this.textParserClass = value;
                }
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="esriTextVerticalAlignment")]
    public enum esriTextVerticalAlignment
    {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriTVATop")]
        esriTVATop,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriTVACenter")]
        esriTVACenter,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriTVABaseline")]
        esriTVABaseline,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriTVABottom")]
        esriTVABottom,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="esriTextHorizontalAlignment")]
    public enum esriTextHorizontalAlignment
    {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriTHALeft")]
        esriTHALeft,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriTHACenter")]
        esriTHACenter,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriTHARight")]
        esriTHARight,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriTHAFull")]
        esriTHAFull,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="esriTextPosition")]
    public enum esriTextPosition
    {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriTPNormal")]
        esriTPNormal,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriTPSuperscript")]
        esriTPSuperscript,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriTPSubscript")]
        esriTPSubscript,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="esriTextCase")]
    public enum esriTextCase
    {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriTCNormal")]
        esriTCNormal,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriTCLowercase")]
        esriTCLowercase,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriTCAllCaps")]
        esriTCAllCaps,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriTCSmallCaps")]
        esriTCSmallCaps,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="esriTextDirection")]
    public enum esriTextDirection
    {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriTDHorizontal")]
        esriTDHorizontal,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriTDAngle")]
        esriTDAngle,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriTDVertical")]
        esriTDVertical,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="esriMaskStyle")]
    public enum esriMaskStyle
    {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriMSNone")]
        esriMSNone,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriMSHalo")]
        esriMSHalo,
    }
    
    /// <summary>
    /// .
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="SimpleTextSymbol")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class SimpleTextSymbol : Symbol
    {
        
        /// <remarks/>
        private Color color;
        
        /// <remarks/>
        private Color backgroundColor;
        
        /// <remarks/>
        private Color outlineColor;
        
        /// <remarks/>
        private esriSimpleTextVerticalAlignment verticalAlignment;
        
        /// <remarks/>
        private bool verticalAlignmentSpecified;
        
        /// <remarks/>
        private esriSimpleTextHorizontalAlignment horizontalAlignment;
        
        /// <remarks/>
        private bool horizontalAlignmentSpecified;
        
        /// <remarks/>
        private bool rightToLeft;
        
        /// <remarks/>
        private double angle;
        
        /// <remarks/>
        private double xOffset;
        
        /// <remarks/>
        private double yOffset;
        
        /// <remarks/>
        private double size;
        
        /// <remarks/>
        private bool sizeSpecified;
        
        /// <remarks/>
        private string fontFamilyName;
        
        /// <remarks/>
        private esriFontStyle fontStyle;
        
        /// <remarks/>
        private bool fontStyleSpecified;
        
        /// <remarks/>
        private esriFontWeight fontWeight;
        
        /// <remarks/>
        private bool fontWeightSpecified;
        
        /// <remarks/>
        private esriFontDecoration fontDecoration;
        
        /// <remarks/>
        private bool fontDecorationSpecified;
        
        public SimpleTextSymbol()
        {
            this.RightToLeft = false;
            this.Angle = 0;
            this.XOffset = 0;
            this.YOffset = 0;
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0, ElementName="Color")]
        public Color Color
        {
            get
            {
                return this.color;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("Color");
                }
                if ((this.color != value))
                {
                    this.color = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1, ElementName="BackgroundColor")]
        public Color BackgroundColor
        {
            get
            {
                return this.backgroundColor;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("BackgroundColor");
                }
                if ((this.backgroundColor != value))
                {
                    this.backgroundColor = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2, ElementName="OutlineColor")]
        public Color OutlineColor
        {
            get
            {
                return this.outlineColor;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("OutlineColor");
                }
                if ((this.outlineColor != value))
                {
                    this.outlineColor = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=3, ElementName="VerticalAlignment")]
        public esriSimpleTextVerticalAlignment VerticalAlignment
        {
            get
            {
                return this.verticalAlignment;
            }
            set
            {
                if ((this.verticalAlignment != value))
                {
                    this.verticalAlignment = value;
                    this.verticalAlignmentSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool VerticalAlignmentSpecified
        {
            get
            {
                return this.verticalAlignmentSpecified;
            }
            set
            {
                if ((this.verticalAlignmentSpecified != value))
                {
                    this.verticalAlignmentSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=4, ElementName="HorizontalAlignment")]
        public esriSimpleTextHorizontalAlignment HorizontalAlignment
        {
            get
            {
                return this.horizontalAlignment;
            }
            set
            {
                if ((this.horizontalAlignment != value))
                {
                    this.horizontalAlignment = value;
                    this.horizontalAlignmentSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HorizontalAlignmentSpecified
        {
            get
            {
                return this.horizontalAlignmentSpecified;
            }
            set
            {
                if ((this.horizontalAlignmentSpecified != value))
                {
                    this.horizontalAlignmentSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=5, ElementName="RightToLeft")]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool RightToLeft
        {
            get
            {
                return this.rightToLeft;
            }
            set
            {
                if ((this.rightToLeft != value))
                {
                    this.rightToLeft = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=6, ElementName="Angle")]
        [System.ComponentModel.DefaultValueAttribute(0)]
        public double Angle
        {
            get
            {
                return this.angle;
            }
            set
            {
                if ((this.angle != value))
                {
                    this.angle = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=7, ElementName="XOffset")]
        [System.ComponentModel.DefaultValueAttribute(0)]
        public double XOffset
        {
            get
            {
                return this.xOffset;
            }
            set
            {
                if ((this.xOffset != value))
                {
                    this.xOffset = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=8, ElementName="YOffset")]
        [System.ComponentModel.DefaultValueAttribute(0)]
        public double YOffset
        {
            get
            {
                return this.yOffset;
            }
            set
            {
                if ((this.yOffset != value))
                {
                    this.yOffset = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=9, ElementName="Size")]
        public double Size
        {
            get
            {
                return this.size;
            }
            set
            {
                if ((this.size != value))
                {
                    this.size = value;
                    this.sizeSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SizeSpecified
        {
            get
            {
                return this.sizeSpecified;
            }
            set
            {
                if ((this.sizeSpecified != value))
                {
                    this.sizeSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=10, ElementName="FontFamilyName")]
        public string FontFamilyName
        {
            get
            {
                return this.fontFamilyName;
            }
            set
            {
                if ((this.fontFamilyName != value))
                {
                    this.fontFamilyName = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=11, ElementName="FontStyle")]
        public esriFontStyle FontStyle
        {
            get
            {
                return this.fontStyle;
            }
            set
            {
                if ((this.fontStyle != value))
                {
                    this.fontStyle = value;
                    this.fontStyleSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FontStyleSpecified
        {
            get
            {
                return this.fontStyleSpecified;
            }
            set
            {
                if ((this.fontStyleSpecified != value))
                {
                    this.fontStyleSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=12, ElementName="FontWeight")]
        public esriFontWeight FontWeight
        {
            get
            {
                return this.fontWeight;
            }
            set
            {
                if ((this.fontWeight != value))
                {
                    this.fontWeight = value;
                    this.fontWeightSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FontWeightSpecified
        {
            get
            {
                return this.fontWeightSpecified;
            }
            set
            {
                if ((this.fontWeightSpecified != value))
                {
                    this.fontWeightSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=13, ElementName="FontDecoration")]
        public esriFontDecoration FontDecoration
        {
            get
            {
                return this.fontDecoration;
            }
            set
            {
                if ((this.fontDecoration != value))
                {
                    this.fontDecoration = value;
                    this.fontDecorationSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FontDecorationSpecified
        {
            get
            {
                return this.fontDecorationSpecified;
            }
            set
            {
                if ((this.fontDecorationSpecified != value))
                {
                    this.fontDecorationSpecified = value;
                }
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="esriSimpleTextVerticalAlignment")]
    public enum esriSimpleTextVerticalAlignment
    {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="top")]
        top,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="middle")]
        middle,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="baseline")]
        baseline,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="bottom")]
        bottom,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="esriSimpleTextHorizontalAlignment")]
    public enum esriSimpleTextHorizontalAlignment
    {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="left")]
        left,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="center")]
        center,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="right")]
        right,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="justified")]
        justified,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="esriFontStyle")]
    public enum esriFontStyle
    {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="normal")]
        normal,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="italic")]
        italic,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="oblique")]
        oblique,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="esriFontWeight")]
    public enum esriFontWeight
    {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="normal")]
        normal,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="bold")]
        bold,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="bolder")]
        bolder,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="lighter")]
        lighter,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="esriFontDecoration")]
    public enum esriFontDecoration
    {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="none")]
        none,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="underline")]
        underline,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("line-through")]
        linethrough,
    }
    
    /// <summary>
    /// .
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="LegendClassFormat")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class LegendClassFormat
    {
        
        /// <remarks/>
        private Symbol labelSymbol;
        
        /// <remarks/>
        private Symbol descriptionSymbol;
        
        /// <remarks/>
        private LinePatch linePatch;
        
        /// <remarks/>
        private AreaPatch areaPatch;
        
        /// <remarks/>
        private double patchWidth;
        
        /// <remarks/>
        private double patchHeight;
        
        public LegendClassFormat()
        {
        }
        
        public LegendClassFormat(Symbol labelSymbol, Symbol descriptionSymbol, LinePatch linePatch, AreaPatch areaPatch, double patchWidth, double patchHeight)
        {
            this.labelSymbol = labelSymbol;
            this.descriptionSymbol = descriptionSymbol;
            this.linePatch = linePatch;
            this.areaPatch = areaPatch;
            this.patchWidth = patchWidth;
            this.patchHeight = patchHeight;
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0, ElementName="LabelSymbol")]
        public Symbol LabelSymbol
        {
            get
            {
                return this.labelSymbol;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("LabelSymbol");
                }
                if ((this.labelSymbol != value))
                {
                    this.labelSymbol = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1, ElementName="DescriptionSymbol")]
        public Symbol DescriptionSymbol
        {
            get
            {
                return this.descriptionSymbol;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("DescriptionSymbol");
                }
                if ((this.descriptionSymbol != value))
                {
                    this.descriptionSymbol = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2, ElementName="LinePatch")]
        public LinePatch LinePatch
        {
            get
            {
                return this.linePatch;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("LinePatch");
                }
                if ((this.linePatch != value))
                {
                    this.linePatch = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=3, ElementName="AreaPatch")]
        public AreaPatch AreaPatch
        {
            get
            {
                return this.areaPatch;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("AreaPatch");
                }
                if ((this.areaPatch != value))
                {
                    this.areaPatch = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=4, ElementName="PatchWidth")]
        public double PatchWidth
        {
            get
            {
                return this.patchWidth;
            }
            set
            {
                if ((this.patchWidth != value))
                {
                    this.patchWidth = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=5, ElementName="PatchHeight")]
        public double PatchHeight
        {
            get
            {
                return this.patchHeight;
            }
            set
            {
                if ((this.patchHeight != value))
                {
                    this.patchHeight = value;
                }
            }
        }
    }
    
    /// <summary>
    /// .
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="LinePatch")]
    public partial class LinePatch : Patch
    {
        
        public LinePatch()
        {
        }
    }
    
    /// <summary>
    /// legend patch.
    /// </summary>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(LinePatch))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AreaPatch))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="Patch")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class Patch
    {
        
        /// <remarks/>
        private string name;
        
        /// <remarks/>
        private bool preserveAspectRatio;
        
        /// <remarks/>
        private bool preserveAspectRatioSpecified;
        
        /// <remarks/>
        private Geometry geometry;
        
        public Patch()
        {
        }
        
        public Patch(string name, bool preserveAspectRatio, bool preserveAspectRatioSpecified, Geometry geometry)
        {
            this.name = name;
            this.preserveAspectRatio = preserveAspectRatio;
            this.preserveAspectRatioSpecified = preserveAspectRatioSpecified;
            this.geometry = geometry;
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0, ElementName="Name")]
        public string Name
        {
            get
            {
                return this.name;
            }
            set
            {
                if ((this.name != value))
                {
                    this.name = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1, ElementName="PreserveAspectRatio")]
        public bool PreserveAspectRatio
        {
            get
            {
                return this.preserveAspectRatio;
            }
            set
            {
                if ((this.preserveAspectRatio != value))
                {
                    this.preserveAspectRatio = value;
                    this.preserveAspectRatioSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PreserveAspectRatioSpecified
        {
            get
            {
                return this.preserveAspectRatioSpecified;
            }
            set
            {
                if ((this.preserveAspectRatioSpecified != value))
                {
                    this.preserveAspectRatioSpecified = value;
                }
            }
        }
        
        /// <summary>
        /// Patch geometry sized to fit the specified bounds.
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2, ElementName="Geometry")]
        public Geometry Geometry
        {
            get
            {
                return this.geometry;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("Geometry");
                }
                if ((this.geometry != value))
                {
                    this.geometry = value;
                }
            }
        }
    }
    
    /// <summary>
    /// .
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="AreaPatch")]
    public partial class AreaPatch : Patch
    {
        
        public AreaPatch()
        {
        }
    }
    
    /// <summary>
    /// .
    /// </summary>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RasterClassifyRenderer))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RasterStretchRenderer))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RasterRGBRenderer))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RasterUniqueValueRenderer))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="RasterRenderer")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public abstract partial class RasterRenderer
    {
        
        /// <remarks/>
        private bool indexed;
        
        /// <remarks/>
        private bool indexedSpecified;
        
        /// <remarks/>
        private int brightness;
        
        /// <remarks/>
        private bool brightnessSpecified;
        
        /// <remarks/>
        private int contrast;
        
        /// <remarks/>
        private bool contrastSpecified;
        
        /// <remarks/>
        private string resamplingType;
        
        /// <remarks/>
        private Color noDataColor;
        
        /// <remarks/>
        private System.Collections.Generic.List<double> noDataValue;
        
        /// <remarks/>
        private int alphaBandIndex;
        
        /// <remarks/>
        private bool alphaBandIndexSpecified;
        
        /// <remarks/>
        private bool useAlphaBand;
        
        /// <remarks/>
        private bool useAlphaBandSpecified;
        
        public RasterRenderer()
        {
        }
        
        public RasterRenderer(bool indexed, bool indexedSpecified, int brightness, bool brightnessSpecified, int contrast, bool contrastSpecified, string resamplingType, Color noDataColor, System.Collections.Generic.List<double> noDataValue, int alphaBandIndex, bool alphaBandIndexSpecified, bool useAlphaBand, bool useAlphaBandSpecified)
        {
            this.indexed = indexed;
            this.indexedSpecified = indexedSpecified;
            this.brightness = brightness;
            this.brightnessSpecified = brightnessSpecified;
            this.contrast = contrast;
            this.contrastSpecified = contrastSpecified;
            this.resamplingType = resamplingType;
            this.noDataColor = noDataColor;
            this.noDataValue = noDataValue;
            this.alphaBandIndex = alphaBandIndex;
            this.alphaBandIndexSpecified = alphaBandIndexSpecified;
            this.useAlphaBand = useAlphaBand;
            this.useAlphaBandSpecified = useAlphaBandSpecified;
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0, ElementName="Indexed")]
        public bool Indexed
        {
            get
            {
                return this.indexed;
            }
            set
            {
                if ((this.indexed != value))
                {
                    this.indexed = value;
                    this.indexedSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IndexedSpecified
        {
            get
            {
                return this.indexedSpecified;
            }
            set
            {
                if ((this.indexedSpecified != value))
                {
                    this.indexedSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1, ElementName="Brightness")]
        public int Brightness
        {
            get
            {
                return this.brightness;
            }
            set
            {
                if ((this.brightness != value))
                {
                    this.brightness = value;
                    this.brightnessSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BrightnessSpecified
        {
            get
            {
                return this.brightnessSpecified;
            }
            set
            {
                if ((this.brightnessSpecified != value))
                {
                    this.brightnessSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2, ElementName="Contrast")]
        public int Contrast
        {
            get
            {
                return this.contrast;
            }
            set
            {
                if ((this.contrast != value))
                {
                    this.contrast = value;
                    this.contrastSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ContrastSpecified
        {
            get
            {
                return this.contrastSpecified;
            }
            set
            {
                if ((this.contrastSpecified != value))
                {
                    this.contrastSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=3, ElementName="ResamplingType")]
        public string ResamplingType
        {
            get
            {
                return this.resamplingType;
            }
            set
            {
                if ((this.resamplingType != value))
                {
                    this.resamplingType = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=4, ElementName="NoDataColor")]
        public Color NoDataColor
        {
            get
            {
                return this.noDataColor;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("NoDataColor");
                }
                if ((this.noDataColor != value))
                {
                    this.noDataColor = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=5, ElementName="NoDataValue")]
        [System.Xml.Serialization.XmlArrayItemAttribute("Double", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public System.Collections.Generic.List<double> NoDataValue
        {
            get
            {
                return this.noDataValue;
            }
            set
            {
                if ((this.noDataValue != value))
                {
                    this.noDataValue = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=6, ElementName="AlphaBandIndex")]
        public int AlphaBandIndex
        {
            get
            {
                return this.alphaBandIndex;
            }
            set
            {
                if ((this.alphaBandIndex != value))
                {
                    this.alphaBandIndex = value;
                    this.alphaBandIndexSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AlphaBandIndexSpecified
        {
            get
            {
                return this.alphaBandIndexSpecified;
            }
            set
            {
                if ((this.alphaBandIndexSpecified != value))
                {
                    this.alphaBandIndexSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=7, ElementName="UseAlphaBand")]
        public bool UseAlphaBand
        {
            get
            {
                return this.useAlphaBand;
            }
            set
            {
                if ((this.useAlphaBand != value))
                {
                    this.useAlphaBand = value;
                    this.useAlphaBandSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UseAlphaBandSpecified
        {
            get
            {
                return this.useAlphaBandSpecified;
            }
            set
            {
                if ((this.useAlphaBandSpecified != value))
                {
                    this.useAlphaBandSpecified = value;
                }
            }
        }
    }
    
    /// <summary>
    /// .
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="RasterClassifyRenderer")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class RasterClassifyRenderer : RasterRenderer
    {
        
        /// <remarks/>
        private string classField;
        
        /// <remarks/>
        private string normField;
        
        /// <remarks/>
        private bool classificationComponent;
        
        /// <remarks/>
        private bool classificationComponentSpecified;
        
        /// <remarks/>
        private string guid;
        
        /// <remarks/>
        private string colorSchema;
        
        /// <remarks/>
        private int legendGroupsCount;
        
        /// <remarks/>
        private bool legendGroupsCountSpecified;
        
        /// <remarks/>
        private System.Collections.Generic.List<LegendGroup> legendGroups;
        
        /// <remarks/>
        private int breakSize;
        
        /// <remarks/>
        private bool breakSizeSpecified;
        
        /// <remarks/>
        private System.Collections.Generic.List<double> arrayOfBreak;
        
        /// <remarks/>
        private bool ascending;
        
        /// <remarks/>
        private bool ascendingSpecified;
        
        /// <remarks/>
        private NumericFormat numberFormat;
        
        /// <remarks/>
        private bool showClassGaps;
        
        /// <remarks/>
        private bool showClassGapsSpecified;
        
        /// <remarks/>
        private double deviationInterval;
        
        /// <remarks/>
        private bool deviationIntervalSpecified;
        
        /// <remarks/>
        private object exlusionValues;
        
        /// <remarks/>
        private object exclusionRanges;
        
        /// <remarks/>
        private bool exclusionShowClass;
        
        /// <remarks/>
        private bool exclusionShowClassSpecified;
        
        /// <remarks/>
        private LegendClass exclusionLegendClass;
        
        /// <remarks/>
        private RasterUniqueValues uniqueValues;
        
        /// <remarks/>
        private bool useHillShader;
        
        /// <remarks/>
        private bool useHillShaderSpecified;
        
        /// <remarks/>
        private double zScale;
        
        /// <remarks/>
        private bool zScaleSpecified;
        
        public RasterClassifyRenderer()
        {
        }
        
        public RasterClassifyRenderer(
                    string classField, 
                    string normField, 
                    bool classificationComponent, 
                    bool classificationComponentSpecified, 
                    string guid, 
                    string colorSchema, 
                    int legendGroupsCount, 
                    bool legendGroupsCountSpecified, 
                    System.Collections.Generic.List<LegendGroup> legendGroups, 
                    int breakSize, 
                    bool breakSizeSpecified, 
                    System.Collections.Generic.List<double> arrayOfBreak, 
                    bool ascending, 
                    bool ascendingSpecified, 
                    NumericFormat numberFormat, 
                    bool showClassGaps, 
                    bool showClassGapsSpecified, 
                    double deviationInterval, 
                    bool deviationIntervalSpecified, 
                    object exlusionValues, 
                    object exclusionRanges, 
                    bool exclusionShowClass, 
                    bool exclusionShowClassSpecified, 
                    LegendClass exclusionLegendClass, 
                    RasterUniqueValues uniqueValues, 
                    bool useHillShader, 
                    bool useHillShaderSpecified, 
                    double zScale, 
                    bool zScaleSpecified)
        {
            this.classField = classField;
            this.normField = normField;
            this.classificationComponent = classificationComponent;
            this.classificationComponentSpecified = classificationComponentSpecified;
            this.guid = guid;
            this.colorSchema = colorSchema;
            this.legendGroupsCount = legendGroupsCount;
            this.legendGroupsCountSpecified = legendGroupsCountSpecified;
            this.legendGroups = legendGroups;
            this.breakSize = breakSize;
            this.breakSizeSpecified = breakSizeSpecified;
            this.arrayOfBreak = arrayOfBreak;
            this.ascending = ascending;
            this.ascendingSpecified = ascendingSpecified;
            this.numberFormat = numberFormat;
            this.showClassGaps = showClassGaps;
            this.showClassGapsSpecified = showClassGapsSpecified;
            this.deviationInterval = deviationInterval;
            this.deviationIntervalSpecified = deviationIntervalSpecified;
            this.exlusionValues = exlusionValues;
            this.exclusionRanges = exclusionRanges;
            this.exclusionShowClass = exclusionShowClass;
            this.exclusionShowClassSpecified = exclusionShowClassSpecified;
            this.exclusionLegendClass = exclusionLegendClass;
            this.uniqueValues = uniqueValues;
            this.useHillShader = useHillShader;
            this.useHillShaderSpecified = useHillShaderSpecified;
            this.zScale = zScale;
            this.zScaleSpecified = zScaleSpecified;
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0, ElementName="ClassField")]
        public string ClassField
        {
            get
            {
                return this.classField;
            }
            set
            {
                if ((this.classField != value))
                {
                    this.classField = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1, ElementName="NormField")]
        public string NormField
        {
            get
            {
                return this.normField;
            }
            set
            {
                if ((this.normField != value))
                {
                    this.normField = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2, ElementName="ClassificationComponent")]
        public bool ClassificationComponent
        {
            get
            {
                return this.classificationComponent;
            }
            set
            {
                if ((this.classificationComponent != value))
                {
                    this.classificationComponent = value;
                    this.classificationComponentSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ClassificationComponentSpecified
        {
            get
            {
                return this.classificationComponentSpecified;
            }
            set
            {
                if ((this.classificationComponentSpecified != value))
                {
                    this.classificationComponentSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=3, ElementName="Guid")]
        public string Guid
        {
            get
            {
                return this.guid;
            }
            set
            {
                if ((this.guid != value))
                {
                    this.guid = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=4, ElementName="ColorSchema")]
        public string ColorSchema
        {
            get
            {
                return this.colorSchema;
            }
            set
            {
                if ((this.colorSchema != value))
                {
                    this.colorSchema = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=5, ElementName="LegendGroupsCount")]
        public int LegendGroupsCount
        {
            get
            {
                return this.legendGroupsCount;
            }
            set
            {
                if ((this.legendGroupsCount != value))
                {
                    this.legendGroupsCount = value;
                    this.legendGroupsCountSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LegendGroupsCountSpecified
        {
            get
            {
                return this.legendGroupsCountSpecified;
            }
            set
            {
                if ((this.legendGroupsCountSpecified != value))
                {
                    this.legendGroupsCountSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=6, ElementName="LegendGroups")]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public System.Collections.Generic.List<LegendGroup> LegendGroups
        {
            get
            {
                return this.legendGroups;
            }
            set
            {
                if ((this.legendGroups != value))
                {
                    this.legendGroups = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=7, ElementName="BreakSize")]
        public int BreakSize
        {
            get
            {
                return this.breakSize;
            }
            set
            {
                if ((this.breakSize != value))
                {
                    this.breakSize = value;
                    this.breakSizeSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BreakSizeSpecified
        {
            get
            {
                return this.breakSizeSpecified;
            }
            set
            {
                if ((this.breakSizeSpecified != value))
                {
                    this.breakSizeSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=8, ElementName="ArrayOfBreak")]
        [System.Xml.Serialization.XmlArrayItemAttribute("Double", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public System.Collections.Generic.List<double> ArrayOfBreak
        {
            get
            {
                return this.arrayOfBreak;
            }
            set
            {
                if ((this.arrayOfBreak != value))
                {
                    this.arrayOfBreak = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=9, ElementName="Ascending")]
        public bool Ascending
        {
            get
            {
                return this.ascending;
            }
            set
            {
                if ((this.ascending != value))
                {
                    this.ascending = value;
                    this.ascendingSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AscendingSpecified
        {
            get
            {
                return this.ascendingSpecified;
            }
            set
            {
                if ((this.ascendingSpecified != value))
                {
                    this.ascendingSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=10, ElementName="NumberFormat")]
        public NumericFormat NumberFormat
        {
            get
            {
                return this.numberFormat;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("NumberFormat");
                }
                if ((this.numberFormat != value))
                {
                    this.numberFormat = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=11, ElementName="ShowClassGaps")]
        public bool ShowClassGaps
        {
            get
            {
                return this.showClassGaps;
            }
            set
            {
                if ((this.showClassGaps != value))
                {
                    this.showClassGaps = value;
                    this.showClassGapsSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ShowClassGapsSpecified
        {
            get
            {
                return this.showClassGapsSpecified;
            }
            set
            {
                if ((this.showClassGapsSpecified != value))
                {
                    this.showClassGapsSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=12, ElementName="DeviationInterval")]
        public double DeviationInterval
        {
            get
            {
                return this.deviationInterval;
            }
            set
            {
                if ((this.deviationInterval != value))
                {
                    this.deviationInterval = value;
                    this.deviationIntervalSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DeviationIntervalSpecified
        {
            get
            {
                return this.deviationIntervalSpecified;
            }
            set
            {
                if ((this.deviationIntervalSpecified != value))
                {
                    this.deviationIntervalSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=13, ElementName="ExlusionValues")]
        public object ExlusionValues
        {
            get
            {
                return this.exlusionValues;
            }
            set
            {
                if ((this.exlusionValues != value))
                {
                    this.exlusionValues = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=14, ElementName="ExclusionRanges")]
        public object ExclusionRanges
        {
            get
            {
                return this.exclusionRanges;
            }
            set
            {
                if ((this.exclusionRanges != value))
                {
                    this.exclusionRanges = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=15, ElementName="ExclusionShowClass")]
        public bool ExclusionShowClass
        {
            get
            {
                return this.exclusionShowClass;
            }
            set
            {
                if ((this.exclusionShowClass != value))
                {
                    this.exclusionShowClass = value;
                    this.exclusionShowClassSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ExclusionShowClassSpecified
        {
            get
            {
                return this.exclusionShowClassSpecified;
            }
            set
            {
                if ((this.exclusionShowClassSpecified != value))
                {
                    this.exclusionShowClassSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=16, ElementName="ExclusionLegendClass")]
        public LegendClass ExclusionLegendClass
        {
            get
            {
                return this.exclusionLegendClass;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("ExclusionLegendClass");
                }
                if ((this.exclusionLegendClass != value))
                {
                    this.exclusionLegendClass = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=17, ElementName="UniqueValues")]
        public RasterUniqueValues UniqueValues
        {
            get
            {
                return this.uniqueValues;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("UniqueValues");
                }
                if ((this.uniqueValues != value))
                {
                    this.uniqueValues = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=18, ElementName="UseHillShader")]
        public bool UseHillShader
        {
            get
            {
                return this.useHillShader;
            }
            set
            {
                if ((this.useHillShader != value))
                {
                    this.useHillShader = value;
                    this.useHillShaderSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UseHillShaderSpecified
        {
            get
            {
                return this.useHillShaderSpecified;
            }
            set
            {
                if ((this.useHillShaderSpecified != value))
                {
                    this.useHillShaderSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=19, ElementName="ZScale")]
        public double ZScale
        {
            get
            {
                return this.zScale;
            }
            set
            {
                if ((this.zScale != value))
                {
                    this.zScale = value;
                    this.zScaleSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ZScaleSpecified
        {
            get
            {
                return this.zScaleSpecified;
            }
            set
            {
                if ((this.zScaleSpecified != value))
                {
                    this.zScaleSpecified = value;
                }
            }
        }
    }
    
    /// <summary>
    /// .
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="NumericFormat")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class NumericFormat
    {
        
        /// <remarks/>
        private esriRoundingOptionEnum roundingOption;
        
        /// <remarks/>
        private bool roundingOptionSpecified;
        
        /// <remarks/>
        private int roundingValue;
        
        /// <remarks/>
        private bool roundingValueSpecified;
        
        /// <remarks/>
        private esriNumericAlignmentEnum alignmentOption;
        
        /// <remarks/>
        private bool alignmentOptionSpecified;
        
        /// <remarks/>
        private int alignmentWidth;
        
        /// <remarks/>
        private bool alignmentWidthSpecified;
        
        /// <remarks/>
        private bool useSeparator;
        
        /// <remarks/>
        private bool useSeparatorSpecified;
        
        /// <remarks/>
        private bool zeroPad;
        
        /// <remarks/>
        private bool zeroPadSpecified;
        
        /// <remarks/>
        private bool showPlus;
        
        /// <remarks/>
        private bool showPlusSpecified;
        
        public NumericFormat()
        {
        }
        
        public NumericFormat(esriRoundingOptionEnum roundingOption, bool roundingOptionSpecified, int roundingValue, bool roundingValueSpecified, esriNumericAlignmentEnum alignmentOption, bool alignmentOptionSpecified, int alignmentWidth, bool alignmentWidthSpecified, bool useSeparator, bool useSeparatorSpecified, bool zeroPad, bool zeroPadSpecified, bool showPlus, bool showPlusSpecified)
        {
            this.roundingOption = roundingOption;
            this.roundingOptionSpecified = roundingOptionSpecified;
            this.roundingValue = roundingValue;
            this.roundingValueSpecified = roundingValueSpecified;
            this.alignmentOption = alignmentOption;
            this.alignmentOptionSpecified = alignmentOptionSpecified;
            this.alignmentWidth = alignmentWidth;
            this.alignmentWidthSpecified = alignmentWidthSpecified;
            this.useSeparator = useSeparator;
            this.useSeparatorSpecified = useSeparatorSpecified;
            this.zeroPad = zeroPad;
            this.zeroPadSpecified = zeroPadSpecified;
            this.showPlus = showPlus;
            this.showPlusSpecified = showPlusSpecified;
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0, ElementName="RoundingOption")]
        public esriRoundingOptionEnum RoundingOption
        {
            get
            {
                return this.roundingOption;
            }
            set
            {
                if ((this.roundingOption != value))
                {
                    this.roundingOption = value;
                    this.roundingOptionSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RoundingOptionSpecified
        {
            get
            {
                return this.roundingOptionSpecified;
            }
            set
            {
                if ((this.roundingOptionSpecified != value))
                {
                    this.roundingOptionSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1, ElementName="RoundingValue")]
        public int RoundingValue
        {
            get
            {
                return this.roundingValue;
            }
            set
            {
                if ((this.roundingValue != value))
                {
                    this.roundingValue = value;
                    this.roundingValueSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RoundingValueSpecified
        {
            get
            {
                return this.roundingValueSpecified;
            }
            set
            {
                if ((this.roundingValueSpecified != value))
                {
                    this.roundingValueSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2, ElementName="AlignmentOption")]
        public esriNumericAlignmentEnum AlignmentOption
        {
            get
            {
                return this.alignmentOption;
            }
            set
            {
                if ((this.alignmentOption != value))
                {
                    this.alignmentOption = value;
                    this.alignmentOptionSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AlignmentOptionSpecified
        {
            get
            {
                return this.alignmentOptionSpecified;
            }
            set
            {
                if ((this.alignmentOptionSpecified != value))
                {
                    this.alignmentOptionSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=3, ElementName="AlignmentWidth")]
        public int AlignmentWidth
        {
            get
            {
                return this.alignmentWidth;
            }
            set
            {
                if ((this.alignmentWidth != value))
                {
                    this.alignmentWidth = value;
                    this.alignmentWidthSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AlignmentWidthSpecified
        {
            get
            {
                return this.alignmentWidthSpecified;
            }
            set
            {
                if ((this.alignmentWidthSpecified != value))
                {
                    this.alignmentWidthSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=4, ElementName="UseSeparator")]
        public bool UseSeparator
        {
            get
            {
                return this.useSeparator;
            }
            set
            {
                if ((this.useSeparator != value))
                {
                    this.useSeparator = value;
                    this.useSeparatorSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UseSeparatorSpecified
        {
            get
            {
                return this.useSeparatorSpecified;
            }
            set
            {
                if ((this.useSeparatorSpecified != value))
                {
                    this.useSeparatorSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=5, ElementName="ZeroPad")]
        public bool ZeroPad
        {
            get
            {
                return this.zeroPad;
            }
            set
            {
                if ((this.zeroPad != value))
                {
                    this.zeroPad = value;
                    this.zeroPadSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ZeroPadSpecified
        {
            get
            {
                return this.zeroPadSpecified;
            }
            set
            {
                if ((this.zeroPadSpecified != value))
                {
                    this.zeroPadSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=6, ElementName="ShowPlus")]
        public bool ShowPlus
        {
            get
            {
                return this.showPlus;
            }
            set
            {
                if ((this.showPlus != value))
                {
                    this.showPlus = value;
                    this.showPlusSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ShowPlusSpecified
        {
            get
            {
                return this.showPlusSpecified;
            }
            set
            {
                if ((this.showPlusSpecified != value))
                {
                    this.showPlusSpecified = value;
                }
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="esriRoundingOptionEnum")]
    public enum esriRoundingOptionEnum
    {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriRoundNumberOfDecimals")]
        esriRoundNumberOfDecimals,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriRoundNumberOfSignificantDigits")]
        esriRoundNumberOfSignificantDigits,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="esriNumericAlignmentEnum")]
    public enum esriNumericAlignmentEnum
    {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriAlignRight")]
        esriAlignRight,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriAlignLeft")]
        esriAlignLeft,
    }
    
    /// <summary>
    /// .
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="RasterStretchRenderer")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class RasterStretchRenderer : RasterRenderer
    {
        
        /// <remarks/>
        private string colorSchema;
        
        /// <remarks/>
        private int layerIndex1;
        
        /// <remarks/>
        private bool layerIndex1Specified;
        
        /// <remarks/>
        private string stretchType;
        
        /// <remarks/>
        private double standardDeviations;
        
        /// <remarks/>
        private bool standardDeviationsSpecified;
        
        /// <remarks/>
        private bool isInvert;
        
        /// <remarks/>
        private bool isInvertSpecified;
        
        /// <remarks/>
        private double blackValue;
        
        /// <remarks/>
        private bool blackValueSpecified;
        
        /// <remarks/>
        private ColorRamp colorRamp;
        
        /// <remarks/>
        private Color bkColor;
        
        /// <remarks/>
        private LegendGroup legendGroup;
        
        /// <remarks/>
        private bool displayBkValue;
        
        /// <remarks/>
        private bool displayBkValueSpecified;
        
        /// <remarks/>
        private bool initCustomMinMax;
        
        /// <remarks/>
        private bool initCustomMinMaxSpecified;
        
        /// <remarks/>
        private bool useCustomMinMax;
        
        /// <remarks/>
        private bool useCustomMinMaxSpecified;
        
        /// <remarks/>
        private double customMin;
        
        /// <remarks/>
        private bool customMinSpecified;
        
        /// <remarks/>
        private double customMax;
        
        /// <remarks/>
        private bool customMaxSpecified;
        
        public RasterStretchRenderer()
        {
        }
        
        public RasterStretchRenderer(
                    string colorSchema, 
                    int layerIndex1, 
                    bool layerIndex1Specified, 
                    string stretchType, 
                    double standardDeviations, 
                    bool standardDeviationsSpecified, 
                    bool isInvert, 
                    bool isInvertSpecified, 
                    double blackValue, 
                    bool blackValueSpecified, 
                    ColorRamp colorRamp, 
                    Color bkColor, 
                    LegendGroup legendGroup, 
                    bool displayBkValue, 
                    bool displayBkValueSpecified, 
                    bool initCustomMinMax, 
                    bool initCustomMinMaxSpecified, 
                    bool useCustomMinMax, 
                    bool useCustomMinMaxSpecified, 
                    double customMin, 
                    bool customMinSpecified, 
                    double customMax, 
                    bool customMaxSpecified)
        {
            this.colorSchema = colorSchema;
            this.layerIndex1 = layerIndex1;
            this.layerIndex1Specified = layerIndex1Specified;
            this.stretchType = stretchType;
            this.standardDeviations = standardDeviations;
            this.standardDeviationsSpecified = standardDeviationsSpecified;
            this.isInvert = isInvert;
            this.isInvertSpecified = isInvertSpecified;
            this.blackValue = blackValue;
            this.blackValueSpecified = blackValueSpecified;
            this.colorRamp = colorRamp;
            this.bkColor = bkColor;
            this.legendGroup = legendGroup;
            this.displayBkValue = displayBkValue;
            this.displayBkValueSpecified = displayBkValueSpecified;
            this.initCustomMinMax = initCustomMinMax;
            this.initCustomMinMaxSpecified = initCustomMinMaxSpecified;
            this.useCustomMinMax = useCustomMinMax;
            this.useCustomMinMaxSpecified = useCustomMinMaxSpecified;
            this.customMin = customMin;
            this.customMinSpecified = customMinSpecified;
            this.customMax = customMax;
            this.customMaxSpecified = customMaxSpecified;
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0, ElementName="ColorSchema")]
        public string ColorSchema
        {
            get
            {
                return this.colorSchema;
            }
            set
            {
                if ((this.colorSchema != value))
                {
                    this.colorSchema = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1, ElementName="LayerIndex1")]
        public int LayerIndex1
        {
            get
            {
                return this.layerIndex1;
            }
            set
            {
                if ((this.layerIndex1 != value))
                {
                    this.layerIndex1 = value;
                    this.layerIndex1Specified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LayerIndex1Specified
        {
            get
            {
                return this.layerIndex1Specified;
            }
            set
            {
                if ((this.layerIndex1Specified != value))
                {
                    this.layerIndex1Specified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2, ElementName="StretchType")]
        public string StretchType
        {
            get
            {
                return this.stretchType;
            }
            set
            {
                if ((this.stretchType != value))
                {
                    this.stretchType = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=3, ElementName="StandardDeviations")]
        public double StandardDeviations
        {
            get
            {
                return this.standardDeviations;
            }
            set
            {
                if ((this.standardDeviations != value))
                {
                    this.standardDeviations = value;
                    this.standardDeviationsSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StandardDeviationsSpecified
        {
            get
            {
                return this.standardDeviationsSpecified;
            }
            set
            {
                if ((this.standardDeviationsSpecified != value))
                {
                    this.standardDeviationsSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=4, ElementName="IsInvert")]
        public bool IsInvert
        {
            get
            {
                return this.isInvert;
            }
            set
            {
                if ((this.isInvert != value))
                {
                    this.isInvert = value;
                    this.isInvertSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsInvertSpecified
        {
            get
            {
                return this.isInvertSpecified;
            }
            set
            {
                if ((this.isInvertSpecified != value))
                {
                    this.isInvertSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=5, ElementName="BlackValue")]
        public double BlackValue
        {
            get
            {
                return this.blackValue;
            }
            set
            {
                if ((this.blackValue != value))
                {
                    this.blackValue = value;
                    this.blackValueSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BlackValueSpecified
        {
            get
            {
                return this.blackValueSpecified;
            }
            set
            {
                if ((this.blackValueSpecified != value))
                {
                    this.blackValueSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=6, ElementName="ColorRamp")]
        public ColorRamp ColorRamp
        {
            get
            {
                return this.colorRamp;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("ColorRamp");
                }
                if ((this.colorRamp != value))
                {
                    this.colorRamp = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=7, ElementName="BkColor")]
        public Color BkColor
        {
            get
            {
                return this.bkColor;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("BkColor");
                }
                if ((this.bkColor != value))
                {
                    this.bkColor = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=8, ElementName="LegendGroup")]
        public LegendGroup LegendGroup
        {
            get
            {
                return this.legendGroup;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("LegendGroup");
                }
                if ((this.legendGroup != value))
                {
                    this.legendGroup = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=9, ElementName="DisplayBkValue")]
        public bool DisplayBkValue
        {
            get
            {
                return this.displayBkValue;
            }
            set
            {
                if ((this.displayBkValue != value))
                {
                    this.displayBkValue = value;
                    this.displayBkValueSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DisplayBkValueSpecified
        {
            get
            {
                return this.displayBkValueSpecified;
            }
            set
            {
                if ((this.displayBkValueSpecified != value))
                {
                    this.displayBkValueSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=10, ElementName="InitCustomMinMax")]
        public bool InitCustomMinMax
        {
            get
            {
                return this.initCustomMinMax;
            }
            set
            {
                if ((this.initCustomMinMax != value))
                {
                    this.initCustomMinMax = value;
                    this.initCustomMinMaxSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool InitCustomMinMaxSpecified
        {
            get
            {
                return this.initCustomMinMaxSpecified;
            }
            set
            {
                if ((this.initCustomMinMaxSpecified != value))
                {
                    this.initCustomMinMaxSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=11, ElementName="UseCustomMinMax")]
        public bool UseCustomMinMax
        {
            get
            {
                return this.useCustomMinMax;
            }
            set
            {
                if ((this.useCustomMinMax != value))
                {
                    this.useCustomMinMax = value;
                    this.useCustomMinMaxSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UseCustomMinMaxSpecified
        {
            get
            {
                return this.useCustomMinMaxSpecified;
            }
            set
            {
                if ((this.useCustomMinMaxSpecified != value))
                {
                    this.useCustomMinMaxSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=12, ElementName="CustomMin")]
        public double CustomMin
        {
            get
            {
                return this.customMin;
            }
            set
            {
                if ((this.customMin != value))
                {
                    this.customMin = value;
                    this.customMinSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CustomMinSpecified
        {
            get
            {
                return this.customMinSpecified;
            }
            set
            {
                if ((this.customMinSpecified != value))
                {
                    this.customMinSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=13, ElementName="CustomMax")]
        public double CustomMax
        {
            get
            {
                return this.customMax;
            }
            set
            {
                if ((this.customMax != value))
                {
                    this.customMax = value;
                    this.customMaxSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CustomMaxSpecified
        {
            get
            {
                return this.customMaxSpecified;
            }
            set
            {
                if ((this.customMaxSpecified != value))
                {
                    this.customMaxSpecified = value;
                }
            }
        }
    }
    
    /// <summary>
    /// .
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="RasterRGBRenderer")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class RasterRGBRenderer : RasterRenderer
    {
        
        /// <remarks/>
        private int layerIndex1;
        
        /// <remarks/>
        private bool layerIndex1Specified;
        
        /// <remarks/>
        private int layerIndex2;
        
        /// <remarks/>
        private bool layerIndex2Specified;
        
        /// <remarks/>
        private int layerIndex3;
        
        /// <remarks/>
        private bool layerIndex3Specified;
        
        /// <remarks/>
        private byte useRGBBand;
        
        /// <remarks/>
        private bool useRGBBandSpecified;
        
        /// <remarks/>
        private string stretchType;
        
        /// <remarks/>
        private double standardDeviations;
        
        /// <remarks/>
        private bool standardDeviationsSpecified;
        
        /// <remarks/>
        private bool isInvert;
        
        /// <remarks/>
        private bool isInvertSpecified;
        
        /// <remarks/>
        private bool displayBkValue;
        
        /// <remarks/>
        private bool displayBkValueSpecified;
        
        /// <remarks/>
        private System.Collections.Generic.List<double> blackValue;
        
        /// <remarks/>
        private bool isLegendExpand;
        
        /// <remarks/>
        private bool isLegendExpandSpecified;
        
        /// <remarks/>
        private Color bkColor;
        
        public RasterRGBRenderer()
        {
        }
        
        public RasterRGBRenderer(
                    int layerIndex1, 
                    bool layerIndex1Specified, 
                    int layerIndex2, 
                    bool layerIndex2Specified, 
                    int layerIndex3, 
                    bool layerIndex3Specified, 
                    byte useRGBBand, 
                    bool useRGBBandSpecified, 
                    string stretchType, 
                    double standardDeviations, 
                    bool standardDeviationsSpecified, 
                    bool isInvert, 
                    bool isInvertSpecified, 
                    bool displayBkValue, 
                    bool displayBkValueSpecified, 
                    System.Collections.Generic.List<double> blackValue, 
                    bool isLegendExpand, 
                    bool isLegendExpandSpecified, 
                    Color bkColor)
        {
            this.layerIndex1 = layerIndex1;
            this.layerIndex1Specified = layerIndex1Specified;
            this.layerIndex2 = layerIndex2;
            this.layerIndex2Specified = layerIndex2Specified;
            this.layerIndex3 = layerIndex3;
            this.layerIndex3Specified = layerIndex3Specified;
            this.useRGBBand = useRGBBand;
            this.useRGBBandSpecified = useRGBBandSpecified;
            this.stretchType = stretchType;
            this.standardDeviations = standardDeviations;
            this.standardDeviationsSpecified = standardDeviationsSpecified;
            this.isInvert = isInvert;
            this.isInvertSpecified = isInvertSpecified;
            this.displayBkValue = displayBkValue;
            this.displayBkValueSpecified = displayBkValueSpecified;
            this.blackValue = blackValue;
            this.isLegendExpand = isLegendExpand;
            this.isLegendExpandSpecified = isLegendExpandSpecified;
            this.bkColor = bkColor;
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0, ElementName="LayerIndex1")]
        public int LayerIndex1
        {
            get
            {
                return this.layerIndex1;
            }
            set
            {
                if ((this.layerIndex1 != value))
                {
                    this.layerIndex1 = value;
                    this.layerIndex1Specified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LayerIndex1Specified
        {
            get
            {
                return this.layerIndex1Specified;
            }
            set
            {
                if ((this.layerIndex1Specified != value))
                {
                    this.layerIndex1Specified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1, ElementName="LayerIndex2")]
        public int LayerIndex2
        {
            get
            {
                return this.layerIndex2;
            }
            set
            {
                if ((this.layerIndex2 != value))
                {
                    this.layerIndex2 = value;
                    this.layerIndex2Specified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LayerIndex2Specified
        {
            get
            {
                return this.layerIndex2Specified;
            }
            set
            {
                if ((this.layerIndex2Specified != value))
                {
                    this.layerIndex2Specified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2, ElementName="LayerIndex3")]
        public int LayerIndex3
        {
            get
            {
                return this.layerIndex3;
            }
            set
            {
                if ((this.layerIndex3 != value))
                {
                    this.layerIndex3 = value;
                    this.layerIndex3Specified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LayerIndex3Specified
        {
            get
            {
                return this.layerIndex3Specified;
            }
            set
            {
                if ((this.layerIndex3Specified != value))
                {
                    this.layerIndex3Specified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=3, ElementName="UseRGBBand")]
        public byte UseRGBBand
        {
            get
            {
                return this.useRGBBand;
            }
            set
            {
                if ((this.useRGBBand != value))
                {
                    this.useRGBBand = value;
                    this.useRGBBandSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UseRGBBandSpecified
        {
            get
            {
                return this.useRGBBandSpecified;
            }
            set
            {
                if ((this.useRGBBandSpecified != value))
                {
                    this.useRGBBandSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=4, ElementName="StretchType")]
        public string StretchType
        {
            get
            {
                return this.stretchType;
            }
            set
            {
                if ((this.stretchType != value))
                {
                    this.stretchType = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=5, ElementName="StandardDeviations")]
        public double StandardDeviations
        {
            get
            {
                return this.standardDeviations;
            }
            set
            {
                if ((this.standardDeviations != value))
                {
                    this.standardDeviations = value;
                    this.standardDeviationsSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StandardDeviationsSpecified
        {
            get
            {
                return this.standardDeviationsSpecified;
            }
            set
            {
                if ((this.standardDeviationsSpecified != value))
                {
                    this.standardDeviationsSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=6, ElementName="IsInvert")]
        public bool IsInvert
        {
            get
            {
                return this.isInvert;
            }
            set
            {
                if ((this.isInvert != value))
                {
                    this.isInvert = value;
                    this.isInvertSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsInvertSpecified
        {
            get
            {
                return this.isInvertSpecified;
            }
            set
            {
                if ((this.isInvertSpecified != value))
                {
                    this.isInvertSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=7, ElementName="DisplayBkValue")]
        public bool DisplayBkValue
        {
            get
            {
                return this.displayBkValue;
            }
            set
            {
                if ((this.displayBkValue != value))
                {
                    this.displayBkValue = value;
                    this.displayBkValueSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DisplayBkValueSpecified
        {
            get
            {
                return this.displayBkValueSpecified;
            }
            set
            {
                if ((this.displayBkValueSpecified != value))
                {
                    this.displayBkValueSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=8, ElementName="BlackValue")]
        [System.Xml.Serialization.XmlArrayItemAttribute("Double", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public System.Collections.Generic.List<double> BlackValue
        {
            get
            {
                return this.blackValue;
            }
            set
            {
                if ((this.blackValue != value))
                {
                    this.blackValue = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=9, ElementName="IsLegendExpand")]
        public bool IsLegendExpand
        {
            get
            {
                return this.isLegendExpand;
            }
            set
            {
                if ((this.isLegendExpand != value))
                {
                    this.isLegendExpand = value;
                    this.isLegendExpandSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsLegendExpandSpecified
        {
            get
            {
                return this.isLegendExpandSpecified;
            }
            set
            {
                if ((this.isLegendExpandSpecified != value))
                {
                    this.isLegendExpandSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=10, ElementName="BkColor")]
        public Color BkColor
        {
            get
            {
                return this.bkColor;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("BkColor");
                }
                if ((this.bkColor != value))
                {
                    this.bkColor = value;
                }
            }
        }
    }
    
    /// <summary>
    /// .
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="RasterUniqueValueRenderer")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class RasterUniqueValueRenderer : RasterRenderer
    {
        
        /// <remarks/>
        private string valueField;
        
        /// <remarks/>
        private string classField;
        
        /// <remarks/>
        private string colorSchema;
        
        /// <remarks/>
        private bool useDefaultSymbol;
        
        /// <remarks/>
        private bool useDefaultSymbolSpecified;
        
        /// <remarks/>
        private Symbol defaultSymbol;
        
        /// <remarks/>
        private string defaultLabel;
        
        /// <remarks/>
        private int legendGroupsCount;
        
        /// <remarks/>
        private bool legendGroupsCountSpecified;
        
        /// <remarks/>
        private System.Collections.Generic.List<LegendGroup> legendGroups;
        
        /// <remarks/>
        private int classValuesCount;
        
        /// <remarks/>
        private bool classValuesCountSpecified;
        
        /// <remarks/>
        private System.Collections.Generic.List<int> classesInLegend;
        
        /// <remarks/>
        private System.Collections.Generic.List<int> classesInLegendSize;
        
        /// <remarks/>
        private System.Collections.Generic.List<object> uniqueValueVariants;
        
        /// <remarks/>
        private bool global;
        
        /// <remarks/>
        private bool globalSpecified;
        
        /// <remarks/>
        private RasterUniqueValues uniqueValues;
        
        /// <remarks/>
        private ColorRamp colorRamp;
        
        public RasterUniqueValueRenderer()
        {
        }
        
        public RasterUniqueValueRenderer(
                    string valueField, 
                    string classField, 
                    string colorSchema, 
                    bool useDefaultSymbol, 
                    bool useDefaultSymbolSpecified, 
                    Symbol defaultSymbol, 
                    string defaultLabel, 
                    int legendGroupsCount, 
                    bool legendGroupsCountSpecified, 
                    System.Collections.Generic.List<LegendGroup> legendGroups, 
                    int classValuesCount, 
                    bool classValuesCountSpecified, 
                    System.Collections.Generic.List<int> classesInLegend, 
                    System.Collections.Generic.List<int> classesInLegendSize, 
                    System.Collections.Generic.List<object> uniqueValueVariants, 
                    bool global, 
                    bool globalSpecified, 
                    RasterUniqueValues uniqueValues, 
                    ColorRamp colorRamp)
        {
            this.valueField = valueField;
            this.classField = classField;
            this.colorSchema = colorSchema;
            this.useDefaultSymbol = useDefaultSymbol;
            this.useDefaultSymbolSpecified = useDefaultSymbolSpecified;
            this.defaultSymbol = defaultSymbol;
            this.defaultLabel = defaultLabel;
            this.legendGroupsCount = legendGroupsCount;
            this.legendGroupsCountSpecified = legendGroupsCountSpecified;
            this.legendGroups = legendGroups;
            this.classValuesCount = classValuesCount;
            this.classValuesCountSpecified = classValuesCountSpecified;
            this.classesInLegend = classesInLegend;
            this.classesInLegendSize = classesInLegendSize;
            this.uniqueValueVariants = uniqueValueVariants;
            this.global = global;
            this.globalSpecified = globalSpecified;
            this.uniqueValues = uniqueValues;
            this.colorRamp = colorRamp;
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0, ElementName="ValueField")]
        public string ValueField
        {
            get
            {
                return this.valueField;
            }
            set
            {
                if ((this.valueField != value))
                {
                    this.valueField = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1, ElementName="ClassField")]
        public string ClassField
        {
            get
            {
                return this.classField;
            }
            set
            {
                if ((this.classField != value))
                {
                    this.classField = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2, ElementName="ColorSchema")]
        public string ColorSchema
        {
            get
            {
                return this.colorSchema;
            }
            set
            {
                if ((this.colorSchema != value))
                {
                    this.colorSchema = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=3, ElementName="UseDefaultSymbol")]
        public bool UseDefaultSymbol
        {
            get
            {
                return this.useDefaultSymbol;
            }
            set
            {
                if ((this.useDefaultSymbol != value))
                {
                    this.useDefaultSymbol = value;
                    this.useDefaultSymbolSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UseDefaultSymbolSpecified
        {
            get
            {
                return this.useDefaultSymbolSpecified;
            }
            set
            {
                if ((this.useDefaultSymbolSpecified != value))
                {
                    this.useDefaultSymbolSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=4, ElementName="DefaultSymbol")]
        public Symbol DefaultSymbol
        {
            get
            {
                return this.defaultSymbol;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("DefaultSymbol");
                }
                if ((this.defaultSymbol != value))
                {
                    this.defaultSymbol = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=5, ElementName="DefaultLabel")]
        public string DefaultLabel
        {
            get
            {
                return this.defaultLabel;
            }
            set
            {
                if ((this.defaultLabel != value))
                {
                    this.defaultLabel = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=6, ElementName="LegendGroupsCount")]
        public int LegendGroupsCount
        {
            get
            {
                return this.legendGroupsCount;
            }
            set
            {
                if ((this.legendGroupsCount != value))
                {
                    this.legendGroupsCount = value;
                    this.legendGroupsCountSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LegendGroupsCountSpecified
        {
            get
            {
                return this.legendGroupsCountSpecified;
            }
            set
            {
                if ((this.legendGroupsCountSpecified != value))
                {
                    this.legendGroupsCountSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=7, ElementName="LegendGroups")]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public System.Collections.Generic.List<LegendGroup> LegendGroups
        {
            get
            {
                return this.legendGroups;
            }
            set
            {
                if ((this.legendGroups != value))
                {
                    this.legendGroups = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=8, ElementName="ClassValuesCount")]
        public int ClassValuesCount
        {
            get
            {
                return this.classValuesCount;
            }
            set
            {
                if ((this.classValuesCount != value))
                {
                    this.classValuesCount = value;
                    this.classValuesCountSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ClassValuesCountSpecified
        {
            get
            {
                return this.classValuesCountSpecified;
            }
            set
            {
                if ((this.classValuesCountSpecified != value))
                {
                    this.classValuesCountSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=9, ElementName="ClassesInLegend")]
        [System.Xml.Serialization.XmlArrayItemAttribute("Int", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public System.Collections.Generic.List<int> ClassesInLegend
        {
            get
            {
                return this.classesInLegend;
            }
            set
            {
                if ((this.classesInLegend != value))
                {
                    this.classesInLegend = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=10, ElementName="ClassesInLegendSize")]
        [System.Xml.Serialization.XmlArrayItemAttribute("Int", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public System.Collections.Generic.List<int> ClassesInLegendSize
        {
            get
            {
                return this.classesInLegendSize;
            }
            set
            {
                if ((this.classesInLegendSize != value))
                {
                    this.classesInLegendSize = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=11, ElementName="UniqueValueVariants")]
        [System.Xml.Serialization.XmlArrayItemAttribute("Value", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.Collections.Generic.List<object> UniqueValueVariants
        {
            get
            {
                return this.uniqueValueVariants;
            }
            set
            {
                if ((this.uniqueValueVariants != value))
                {
                    this.uniqueValueVariants = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=12, ElementName="Global")]
        public bool Global
        {
            get
            {
                return this.global;
            }
            set
            {
                if ((this.global != value))
                {
                    this.global = value;
                    this.globalSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GlobalSpecified
        {
            get
            {
                return this.globalSpecified;
            }
            set
            {
                if ((this.globalSpecified != value))
                {
                    this.globalSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=13, ElementName="UniqueValues")]
        public RasterUniqueValues UniqueValues
        {
            get
            {
                return this.uniqueValues;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("UniqueValues");
                }
                if ((this.uniqueValues != value))
                {
                    this.uniqueValues = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=14, ElementName="ColorRamp")]
        public ColorRamp ColorRamp
        {
            get
            {
                return this.colorRamp;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("ColorRamp");
                }
                if ((this.colorRamp != value))
                {
                    this.colorRamp = value;
                }
            }
        }
    }
    
    /// <summary>
    /// .
    /// </summary>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RasterLayerDrawingDescription))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(FeatureLayerDrawingDescription))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="LayerDrawingDescription")]
    public abstract partial class LayerDrawingDescription
    {
        
        public LayerDrawingDescription()
        {
        }
    }
    
    /// <summary>
    /// .
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="RasterLayerDrawingDescription")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class RasterLayerDrawingDescription : LayerDrawingDescription
    {
        
        /// <remarks/>
        private RasterRenderer rasterRenderer;
        
        /// <remarks/>
        private short transparency;
        
        /// <remarks/>
        private bool transparencySpecified;
        
        /// <remarks/>
        private short brightness;
        
        /// <remarks/>
        private bool brightnessSpecified;
        
        /// <remarks/>
        private short contrast;
        
        /// <remarks/>
        private bool contrastSpecified;
        
        public RasterLayerDrawingDescription()
        {
        }
        
        public RasterLayerDrawingDescription(RasterRenderer rasterRenderer, short transparency, bool transparencySpecified, short brightness, bool brightnessSpecified, short contrast, bool contrastSpecified)
        {
            this.rasterRenderer = rasterRenderer;
            this.transparency = transparency;
            this.transparencySpecified = transparencySpecified;
            this.brightness = brightness;
            this.brightnessSpecified = brightnessSpecified;
            this.contrast = contrast;
            this.contrastSpecified = contrastSpecified;
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0, ElementName="RasterRenderer")]
        public RasterRenderer RasterRenderer
        {
            get
            {
                return this.rasterRenderer;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("RasterRenderer");
                }
                if ((this.rasterRenderer != value))
                {
                    this.rasterRenderer = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1, ElementName="Transparency")]
        public short Transparency
        {
            get
            {
                return this.transparency;
            }
            set
            {
                if ((this.transparency != value))
                {
                    this.transparency = value;
                    this.transparencySpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TransparencySpecified
        {
            get
            {
                return this.transparencySpecified;
            }
            set
            {
                if ((this.transparencySpecified != value))
                {
                    this.transparencySpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2, ElementName="Brightness")]
        public short Brightness
        {
            get
            {
                return this.brightness;
            }
            set
            {
                if ((this.brightness != value))
                {
                    this.brightness = value;
                    this.brightnessSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BrightnessSpecified
        {
            get
            {
                return this.brightnessSpecified;
            }
            set
            {
                if ((this.brightnessSpecified != value))
                {
                    this.brightnessSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=3, ElementName="Contrast")]
        public short Contrast
        {
            get
            {
                return this.contrast;
            }
            set
            {
                if ((this.contrast != value))
                {
                    this.contrast = value;
                    this.contrastSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ContrastSpecified
        {
            get
            {
                return this.contrastSpecified;
            }
            set
            {
                if ((this.contrastSpecified != value))
                {
                    this.contrastSpecified = value;
                }
            }
        }
    }
    
    /// <summary>
    /// .
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="FeatureLayerDrawingDescription")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class FeatureLayerDrawingDescription : LayerDrawingDescription
    {
        
        /// <remarks/>
        private FeatureRenderer featureRenderer;
        
        /// <remarks/>
        private bool scaleSymbols;
        
        /// <remarks/>
        private bool scaleSymbolsSpecified;
        
        /// <remarks/>
        private short transparency;
        
        /// <remarks/>
        private bool transparencySpecified;
        
        /// <remarks/>
        private short brightness;
        
        /// <remarks/>
        private bool brightnessSpecified;
        
        /// <remarks/>
        private short contrast;
        
        /// <remarks/>
        private bool contrastSpecified;
        
        /// <remarks/>
        private LabelingDescription labelingDescription;
        
        /// <remarks/>
        private int sourceLayerID;
        
        /// <remarks/>
        private bool sourceLayerIDSpecified;
        
        public FeatureLayerDrawingDescription()
        {
        }
        
        public FeatureLayerDrawingDescription(FeatureRenderer featureRenderer, bool scaleSymbols, bool scaleSymbolsSpecified, short transparency, bool transparencySpecified, short brightness, bool brightnessSpecified, short contrast, bool contrastSpecified, LabelingDescription labelingDescription, int sourceLayerID, bool sourceLayerIDSpecified)
        {
            this.featureRenderer = featureRenderer;
            this.scaleSymbols = scaleSymbols;
            this.scaleSymbolsSpecified = scaleSymbolsSpecified;
            this.transparency = transparency;
            this.transparencySpecified = transparencySpecified;
            this.brightness = brightness;
            this.brightnessSpecified = brightnessSpecified;
            this.contrast = contrast;
            this.contrastSpecified = contrastSpecified;
            this.labelingDescription = labelingDescription;
            this.sourceLayerID = sourceLayerID;
            this.sourceLayerIDSpecified = sourceLayerIDSpecified;
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0, ElementName="FeatureRenderer")]
        public FeatureRenderer FeatureRenderer
        {
            get
            {
                return this.featureRenderer;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("FeatureRenderer");
                }
                if ((this.featureRenderer != value))
                {
                    this.featureRenderer = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1, ElementName="ScaleSymbols")]
        public bool ScaleSymbols
        {
            get
            {
                return this.scaleSymbols;
            }
            set
            {
                if ((this.scaleSymbols != value))
                {
                    this.scaleSymbols = value;
                    this.scaleSymbolsSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ScaleSymbolsSpecified
        {
            get
            {
                return this.scaleSymbolsSpecified;
            }
            set
            {
                if ((this.scaleSymbolsSpecified != value))
                {
                    this.scaleSymbolsSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2, ElementName="Transparency")]
        public short Transparency
        {
            get
            {
                return this.transparency;
            }
            set
            {
                if ((this.transparency != value))
                {
                    this.transparency = value;
                    this.transparencySpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TransparencySpecified
        {
            get
            {
                return this.transparencySpecified;
            }
            set
            {
                if ((this.transparencySpecified != value))
                {
                    this.transparencySpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=3, ElementName="Brightness")]
        public short Brightness
        {
            get
            {
                return this.brightness;
            }
            set
            {
                if ((this.brightness != value))
                {
                    this.brightness = value;
                    this.brightnessSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BrightnessSpecified
        {
            get
            {
                return this.brightnessSpecified;
            }
            set
            {
                if ((this.brightnessSpecified != value))
                {
                    this.brightnessSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=4, ElementName="Contrast")]
        public short Contrast
        {
            get
            {
                return this.contrast;
            }
            set
            {
                if ((this.contrast != value))
                {
                    this.contrast = value;
                    this.contrastSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ContrastSpecified
        {
            get
            {
                return this.contrastSpecified;
            }
            set
            {
                if ((this.contrastSpecified != value))
                {
                    this.contrastSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=5, ElementName="LabelingDescription")]
        public LabelingDescription LabelingDescription
        {
            get
            {
                return this.labelingDescription;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("LabelingDescription");
                }
                if ((this.labelingDescription != value))
                {
                    this.labelingDescription = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=6, ElementName="SourceLayerID")]
        public int SourceLayerID
        {
            get
            {
                return this.sourceLayerID;
            }
            set
            {
                if ((this.sourceLayerID != value))
                {
                    this.sourceLayerID = value;
                    this.sourceLayerIDSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SourceLayerIDSpecified
        {
            get
            {
                return this.sourceLayerIDSpecified;
            }
            set
            {
                if ((this.sourceLayerIDSpecified != value))
                {
                    this.sourceLayerIDSpecified = value;
                }
            }
        }
    }
    
    /// <summary>
    /// .
    /// </summary>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ClassBreaksRenderer))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UniqueValueRenderer))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SimpleRenderer))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="FeatureRenderer")]
    public abstract partial class FeatureRenderer
    {
        
        public FeatureRenderer()
        {
        }
    }
    
    /// <summary>
    /// .
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="ClassBreaksRenderer")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class ClassBreaksRenderer : FeatureRenderer
    {
        
        /// <remarks/>
        private string field;
        
        /// <remarks/>
        private double minimumValue;
        
        /// <remarks/>
        private System.Collections.Generic.List<ClassBreakInfo> classBreakInfos;
        
        /// <remarks/>
        private FillSymbol backgroundSymbol;
        
        /// <remarks/>
        private string normalizationField;
        
        /// <remarks/>
        private esriNormalizationType normalizationType;
        
        /// <remarks/>
        private bool normalizationTypeSpecified;
        
        /// <remarks/>
        private double normalizationTotal;
        
        /// <remarks/>
        private bool normalizationTotalSpecified;
        
        /// <remarks/>
        private string rotationField;
        
        /// <remarks/>
        private esriRotationType rotationType;
        
        /// <remarks/>
        private bool rotationTypeSpecified;
        
        public ClassBreaksRenderer()
        {
        }
        
        public ClassBreaksRenderer(string field, double minimumValue, System.Collections.Generic.List<ClassBreakInfo> classBreakInfos, FillSymbol backgroundSymbol, string normalizationField, esriNormalizationType normalizationType, bool normalizationTypeSpecified, double normalizationTotal, bool normalizationTotalSpecified, string rotationField, esriRotationType rotationType, bool rotationTypeSpecified)
        {
            this.field = field;
            this.minimumValue = minimumValue;
            this.classBreakInfos = classBreakInfos;
            this.backgroundSymbol = backgroundSymbol;
            this.normalizationField = normalizationField;
            this.normalizationType = normalizationType;
            this.normalizationTypeSpecified = normalizationTypeSpecified;
            this.normalizationTotal = normalizationTotal;
            this.normalizationTotalSpecified = normalizationTotalSpecified;
            this.rotationField = rotationField;
            this.rotationType = rotationType;
            this.rotationTypeSpecified = rotationTypeSpecified;
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0, ElementName="Field")]
        public string Field
        {
            get
            {
                return this.field;
            }
            set
            {
                if ((this.field != value))
                {
                    this.field = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1, ElementName="MinimumValue")]
        public double MinimumValue
        {
            get
            {
                return this.minimumValue;
            }
            set
            {
                if ((this.minimumValue != value))
                {
                    this.minimumValue = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2, ElementName="ClassBreakInfos")]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public System.Collections.Generic.List<ClassBreakInfo> ClassBreakInfos
        {
            get
            {
                return this.classBreakInfos;
            }
            set
            {
                if ((this.classBreakInfos != value))
                {
                    this.classBreakInfos = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=3, ElementName="BackgroundSymbol")]
        public FillSymbol BackgroundSymbol
        {
            get
            {
                return this.backgroundSymbol;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("BackgroundSymbol");
                }
                if ((this.backgroundSymbol != value))
                {
                    this.backgroundSymbol = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=4, ElementName="NormalizationField")]
        public string NormalizationField
        {
            get
            {
                return this.normalizationField;
            }
            set
            {
                if ((this.normalizationField != value))
                {
                    this.normalizationField = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=5, ElementName="NormalizationType")]
        public esriNormalizationType NormalizationType
        {
            get
            {
                return this.normalizationType;
            }
            set
            {
                if ((this.normalizationType != value))
                {
                    this.normalizationType = value;
                    this.normalizationTypeSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NormalizationTypeSpecified
        {
            get
            {
                return this.normalizationTypeSpecified;
            }
            set
            {
                if ((this.normalizationTypeSpecified != value))
                {
                    this.normalizationTypeSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=6, ElementName="NormalizationTotal")]
        public double NormalizationTotal
        {
            get
            {
                return this.normalizationTotal;
            }
            set
            {
                if ((this.normalizationTotal != value))
                {
                    this.normalizationTotal = value;
                    this.normalizationTotalSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NormalizationTotalSpecified
        {
            get
            {
                return this.normalizationTotalSpecified;
            }
            set
            {
                if ((this.normalizationTotalSpecified != value))
                {
                    this.normalizationTotalSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=7, ElementName="RotationField")]
        public string RotationField
        {
            get
            {
                return this.rotationField;
            }
            set
            {
                if ((this.rotationField != value))
                {
                    this.rotationField = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=8, ElementName="RotationType")]
        public esriRotationType RotationType
        {
            get
            {
                return this.rotationType;
            }
            set
            {
                if ((this.rotationType != value))
                {
                    this.rotationType = value;
                    this.rotationTypeSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RotationTypeSpecified
        {
            get
            {
                return this.rotationTypeSpecified;
            }
            set
            {
                if ((this.rotationTypeSpecified != value))
                {
                    this.rotationTypeSpecified = value;
                }
            }
        }
    }
    
    /// <summary>
    /// .
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="ClassBreakInfo")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class ClassBreakInfo
    {
        
        /// <remarks/>
        private double classMaximumValue;
        
        /// <remarks/>
        private string label;
        
        /// <remarks/>
        private string description;
        
        /// <remarks/>
        private Symbol symbol;
        
        public ClassBreakInfo()
        {
        }
        
        public ClassBreakInfo(double classMaximumValue, string label, string description, Symbol symbol)
        {
            this.classMaximumValue = classMaximumValue;
            this.label = label;
            this.description = description;
            this.symbol = symbol;
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0, ElementName="ClassMaximumValue")]
        public double ClassMaximumValue
        {
            get
            {
                return this.classMaximumValue;
            }
            set
            {
                if ((this.classMaximumValue != value))
                {
                    this.classMaximumValue = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1, ElementName="Label")]
        public string Label
        {
            get
            {
                return this.label;
            }
            set
            {
                if ((this.label != value))
                {
                    this.label = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2, ElementName="Description")]
        public string Description
        {
            get
            {
                return this.description;
            }
            set
            {
                if ((this.description != value))
                {
                    this.description = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=3, ElementName="Symbol")]
        public Symbol Symbol
        {
            get
            {
                return this.symbol;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("Symbol");
                }
                if ((this.symbol != value))
                {
                    this.symbol = value;
                }
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="esriNormalizationType")]
    public enum esriNormalizationType
    {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriNormalizeByField")]
        esriNormalizeByField,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriNormalizeByLog")]
        esriNormalizeByLog,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriNormalizeByPercentOfTotal")]
        esriNormalizeByPercentOfTotal,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriNormalizeByArea")]
        esriNormalizeByArea,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriNormalizeByNothing")]
        esriNormalizeByNothing,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="esriRotationType")]
    public enum esriRotationType
    {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriRotateSymbolGeographic")]
        esriRotateSymbolGeographic,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriRotateSymbolArithmetic")]
        esriRotateSymbolArithmetic,
    }
    
    /// <summary>
    /// .
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="UniqueValueRenderer")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class UniqueValueRenderer : FeatureRenderer
    {
        
        /// <remarks/>
        private string field1;
        
        /// <remarks/>
        private string field2;
        
        /// <remarks/>
        private string field3;
        
        /// <remarks/>
        private string fieldDelimiter;
        
        /// <remarks/>
        private Symbol defaultSymbol;
        
        /// <remarks/>
        private string defaultLabel;
        
        /// <remarks/>
        private System.Collections.Generic.List<UniqueValueInfo> uniqueValueInfos;
        
        /// <remarks/>
        private string rotationField;
        
        /// <remarks/>
        private esriRotationType rotationType;
        
        /// <remarks/>
        private bool rotationTypeSpecified;
        
        /// <remarks/>
        private string transparencyField;
        
        public UniqueValueRenderer()
        {
        }
        
        public UniqueValueRenderer(string field1, string field2, string field3, string fieldDelimiter, Symbol defaultSymbol, string defaultLabel, System.Collections.Generic.List<UniqueValueInfo> uniqueValueInfos, string rotationField, esriRotationType rotationType, bool rotationTypeSpecified, string transparencyField)
        {
            this.field1 = field1;
            this.field2 = field2;
            this.field3 = field3;
            this.fieldDelimiter = fieldDelimiter;
            this.defaultSymbol = defaultSymbol;
            this.defaultLabel = defaultLabel;
            this.uniqueValueInfos = uniqueValueInfos;
            this.rotationField = rotationField;
            this.rotationType = rotationType;
            this.rotationTypeSpecified = rotationTypeSpecified;
            this.transparencyField = transparencyField;
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0, ElementName="Field1")]
        public string Field1
        {
            get
            {
                return this.field1;
            }
            set
            {
                if ((this.field1 != value))
                {
                    this.field1 = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1, ElementName="Field2")]
        public string Field2
        {
            get
            {
                return this.field2;
            }
            set
            {
                if ((this.field2 != value))
                {
                    this.field2 = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2, ElementName="Field3")]
        public string Field3
        {
            get
            {
                return this.field3;
            }
            set
            {
                if ((this.field3 != value))
                {
                    this.field3 = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=3, ElementName="FieldDelimiter")]
        public string FieldDelimiter
        {
            get
            {
                return this.fieldDelimiter;
            }
            set
            {
                if ((this.fieldDelimiter != value))
                {
                    this.fieldDelimiter = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=4, ElementName="DefaultSymbol")]
        public Symbol DefaultSymbol
        {
            get
            {
                return this.defaultSymbol;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("DefaultSymbol");
                }
                if ((this.defaultSymbol != value))
                {
                    this.defaultSymbol = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=5, ElementName="DefaultLabel")]
        public string DefaultLabel
        {
            get
            {
                return this.defaultLabel;
            }
            set
            {
                if ((this.defaultLabel != value))
                {
                    this.defaultLabel = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=6, ElementName="UniqueValueInfos")]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public System.Collections.Generic.List<UniqueValueInfo> UniqueValueInfos
        {
            get
            {
                return this.uniqueValueInfos;
            }
            set
            {
                if ((this.uniqueValueInfos != value))
                {
                    this.uniqueValueInfos = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=7, ElementName="RotationField")]
        public string RotationField
        {
            get
            {
                return this.rotationField;
            }
            set
            {
                if ((this.rotationField != value))
                {
                    this.rotationField = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=8, ElementName="RotationType")]
        public esriRotationType RotationType
        {
            get
            {
                return this.rotationType;
            }
            set
            {
                if ((this.rotationType != value))
                {
                    this.rotationType = value;
                    this.rotationTypeSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RotationTypeSpecified
        {
            get
            {
                return this.rotationTypeSpecified;
            }
            set
            {
                if ((this.rotationTypeSpecified != value))
                {
                    this.rotationTypeSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=9, ElementName="TransparencyField")]
        public string TransparencyField
        {
            get
            {
                return this.transparencyField;
            }
            set
            {
                if ((this.transparencyField != value))
                {
                    this.transparencyField = value;
                }
            }
        }
    }
    
    /// <summary>
    /// .
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="UniqueValueInfo")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class UniqueValueInfo
    {
        
        /// <remarks/>
        private string value;
        
        /// <remarks/>
        private string label;
        
        /// <remarks/>
        private string description;
        
        /// <remarks/>
        private Symbol symbol;
        
        public UniqueValueInfo()
        {
        }
        
        public UniqueValueInfo(string value, string label, string description, Symbol symbol)
        {
            this.value = value;
            this.label = label;
            this.description = description;
            this.symbol = symbol;
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0, ElementName="Value")]
        public string Value
        {
            get
            {
                return this.value;
            }
            set
            {
                if ((this.value != value))
                {
                    this.value = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1, ElementName="Label")]
        public string Label
        {
            get
            {
                return this.label;
            }
            set
            {
                if ((this.label != value))
                {
                    this.label = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2, ElementName="Description")]
        public string Description
        {
            get
            {
                return this.description;
            }
            set
            {
                if ((this.description != value))
                {
                    this.description = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=3, ElementName="Symbol")]
        public Symbol Symbol
        {
            get
            {
                return this.symbol;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("Symbol");
                }
                if ((this.symbol != value))
                {
                    this.symbol = value;
                }
            }
        }
    }
    
    /// <summary>
    /// .
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="SimpleRenderer")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class SimpleRenderer : FeatureRenderer
    {
        
        /// <remarks/>
        private Symbol symbol;
        
        /// <remarks/>
        private string label;
        
        /// <remarks/>
        private string description;
        
        /// <remarks/>
        private string rotationField;
        
        /// <remarks/>
        private esriRotationType rotationType;
        
        /// <remarks/>
        private bool rotationTypeSpecified;
        
        /// <remarks/>
        private string transparencyField;
        
        public SimpleRenderer()
        {
        }
        
        public SimpleRenderer(Symbol symbol, string label, string description, string rotationField, esriRotationType rotationType, bool rotationTypeSpecified, string transparencyField)
        {
            this.symbol = symbol;
            this.label = label;
            this.description = description;
            this.rotationField = rotationField;
            this.rotationType = rotationType;
            this.rotationTypeSpecified = rotationTypeSpecified;
            this.transparencyField = transparencyField;
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0, ElementName="Symbol")]
        public Symbol Symbol
        {
            get
            {
                return this.symbol;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("Symbol");
                }
                if ((this.symbol != value))
                {
                    this.symbol = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1, ElementName="Label")]
        public string Label
        {
            get
            {
                return this.label;
            }
            set
            {
                if ((this.label != value))
                {
                    this.label = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2, ElementName="Description")]
        public string Description
        {
            get
            {
                return this.description;
            }
            set
            {
                if ((this.description != value))
                {
                    this.description = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=3, ElementName="RotationField")]
        public string RotationField
        {
            get
            {
                return this.rotationField;
            }
            set
            {
                if ((this.rotationField != value))
                {
                    this.rotationField = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=4, ElementName="RotationType")]
        public esriRotationType RotationType
        {
            get
            {
                return this.rotationType;
            }
            set
            {
                if ((this.rotationType != value))
                {
                    this.rotationType = value;
                    this.rotationTypeSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RotationTypeSpecified
        {
            get
            {
                return this.rotationTypeSpecified;
            }
            set
            {
                if ((this.rotationTypeSpecified != value))
                {
                    this.rotationTypeSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=5, ElementName="TransparencyField")]
        public string TransparencyField
        {
            get
            {
                return this.transparencyField;
            }
            set
            {
                if ((this.transparencyField != value))
                {
                    this.transparencyField = value;
                }
            }
        }
    }
    
    /// <summary>
    /// .
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="LabelingDescription")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class LabelingDescription
    {
        
        /// <remarks/>
        private System.Collections.Generic.List<LabelClassDescription> labelClassDescriptions;
        
        public LabelingDescription()
        {
        }
        
        public LabelingDescription(System.Collections.Generic.List<LabelClassDescription> labelClassDescriptions)
        {
            this.labelClassDescriptions = labelClassDescriptions;
        }
        
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0, ElementName="LabelClassDescriptions")]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public System.Collections.Generic.List<LabelClassDescription> LabelClassDescriptions
        {
            get
            {
                return this.labelClassDescriptions;
            }
            set
            {
                if ((this.labelClassDescriptions != value))
                {
                    this.labelClassDescriptions = value;
                }
            }
        }
    }
    
    /// <summary>
    /// .
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="LabelClassDescription")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class LabelClassDescription
    {
        
        /// <remarks/>
        private LabelPlacementDescription labelPlacementDescription;
        
        /// <remarks/>
        private string labelExpression;
        
        /// <remarks/>
        private SimpleTextSymbol symbol;
        
        /// <remarks/>
        private bool useCodedValue;
        
        /// <remarks/>
        private bool useCodedValueSpecified;
        
        /// <remarks/>
        private double maximumScale;
        
        /// <remarks/>
        private bool maximumScaleSpecified;
        
        /// <remarks/>
        private double minimumScale;
        
        /// <remarks/>
        private bool minimumScaleSpecified;
        
        public LabelClassDescription()
        {
        }
        
        public LabelClassDescription(LabelPlacementDescription labelPlacementDescription, string labelExpression, SimpleTextSymbol symbol, bool useCodedValue, bool useCodedValueSpecified, double maximumScale, bool maximumScaleSpecified, double minimumScale, bool minimumScaleSpecified)
        {
            this.labelPlacementDescription = labelPlacementDescription;
            this.labelExpression = labelExpression;
            this.symbol = symbol;
            this.useCodedValue = useCodedValue;
            this.useCodedValueSpecified = useCodedValueSpecified;
            this.maximumScale = maximumScale;
            this.maximumScaleSpecified = maximumScaleSpecified;
            this.minimumScale = minimumScale;
            this.minimumScaleSpecified = minimumScaleSpecified;
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0, ElementName="LabelPlacementDescription")]
        public LabelPlacementDescription LabelPlacementDescription
        {
            get
            {
                return this.labelPlacementDescription;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("LabelPlacementDescription");
                }
                if ((this.labelPlacementDescription != value))
                {
                    this.labelPlacementDescription = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1, ElementName="LabelExpression")]
        public string LabelExpression
        {
            get
            {
                return this.labelExpression;
            }
            set
            {
                if ((this.labelExpression != value))
                {
                    this.labelExpression = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2, ElementName="Symbol")]
        public SimpleTextSymbol Symbol
        {
            get
            {
                return this.symbol;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("Symbol");
                }
                if ((this.symbol != value))
                {
                    this.symbol = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=3, ElementName="UseCodedValue")]
        public bool UseCodedValue
        {
            get
            {
                return this.useCodedValue;
            }
            set
            {
                if ((this.useCodedValue != value))
                {
                    this.useCodedValue = value;
                    this.useCodedValueSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UseCodedValueSpecified
        {
            get
            {
                return this.useCodedValueSpecified;
            }
            set
            {
                if ((this.useCodedValueSpecified != value))
                {
                    this.useCodedValueSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=4, ElementName="MaximumScale")]
        public double MaximumScale
        {
            get
            {
                return this.maximumScale;
            }
            set
            {
                if ((this.maximumScale != value))
                {
                    this.maximumScale = value;
                    this.maximumScaleSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MaximumScaleSpecified
        {
            get
            {
                return this.maximumScaleSpecified;
            }
            set
            {
                if ((this.maximumScaleSpecified != value))
                {
                    this.maximumScaleSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=5, ElementName="MinimumScale")]
        public double MinimumScale
        {
            get
            {
                return this.minimumScale;
            }
            set
            {
                if ((this.minimumScale != value))
                {
                    this.minimumScale = value;
                    this.minimumScaleSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MinimumScaleSpecified
        {
            get
            {
                return this.minimumScaleSpecified;
            }
            set
            {
                if ((this.minimumScaleSpecified != value))
                {
                    this.minimumScaleSpecified = value;
                }
            }
        }
    }
    
    /// <summary>
    /// .
    /// </summary>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(PolygonLabelPlacementDescription))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(LineLabelPlacementDescription))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(PointLabelPlacementDescription))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="LabelPlacementDescription")]
    public abstract partial class LabelPlacementDescription
    {
        
        public LabelPlacementDescription()
        {
        }
    }
    
    /// <summary>
    /// .
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="PolygonLabelPlacementDescription")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class PolygonLabelPlacementDescription : LabelPlacementDescription
    {
        
        /// <remarks/>
        private esriServerPolygonLabelPlacementType type;
        
        public PolygonLabelPlacementDescription()
        {
        }
        
        public PolygonLabelPlacementDescription(esriServerPolygonLabelPlacementType type)
        {
            this.type = type;
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0, ElementName="Type")]
        public esriServerPolygonLabelPlacementType Type
        {
            get
            {
                return this.type;
            }
            set
            {
                if ((this.type != value))
                {
                    this.type = value;
                }
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="esriServerPolygonLabelPlacementType")]
    public enum esriServerPolygonLabelPlacementType
    {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriServerPolygonPlacementAlwaysHorizontal")]
        esriServerPolygonPlacementAlwaysHorizontal,
    }
    
    /// <summary>
    /// .
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="LineLabelPlacementDescription")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class LineLabelPlacementDescription : LabelPlacementDescription
    {
        
        /// <remarks/>
        private esriServerLineLabelPlacementType type;
        
        public LineLabelPlacementDescription()
        {
        }
        
        public LineLabelPlacementDescription(esriServerLineLabelPlacementType type)
        {
            this.type = type;
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0, ElementName="Type")]
        public esriServerLineLabelPlacementType Type
        {
            get
            {
                return this.type;
            }
            set
            {
                if ((this.type != value))
                {
                    this.type = value;
                }
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="esriServerLineLabelPlacementType")]
    public enum esriServerLineLabelPlacementType
    {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriServerLinePlacementAboveAfter")]
        esriServerLinePlacementAboveAfter,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriServerLinePlacementAboveAlong")]
        esriServerLinePlacementAboveAlong,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriServerLinePlacementAboveBefore")]
        esriServerLinePlacementAboveBefore,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriServerLinePlacementAboveStart")]
        esriServerLinePlacementAboveStart,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriServerLinePlacementAboveEnd")]
        esriServerLinePlacementAboveEnd,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriServerLinePlacementBelowAfter")]
        esriServerLinePlacementBelowAfter,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriServerLinePlacementBelowAlong")]
        esriServerLinePlacementBelowAlong,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriServerLinePlacementBelowBefore")]
        esriServerLinePlacementBelowBefore,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriServerLinePlacementBelowStart")]
        esriServerLinePlacementBelowStart,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriServerLinePlacementBelowEnd")]
        esriServerLinePlacementBelowEnd,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriServerLinePlacementCenterAfter")]
        esriServerLinePlacementCenterAfter,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriServerLinePlacementCenterAlong")]
        esriServerLinePlacementCenterAlong,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriServerLinePlacementCenterBefore")]
        esriServerLinePlacementCenterBefore,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriServerLinePlacementCenterStart")]
        esriServerLinePlacementCenterStart,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriServerLinePlacementCenterEnd")]
        esriServerLinePlacementCenterEnd,
    }
    
    /// <summary>
    /// .
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="PointLabelPlacementDescription")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class PointLabelPlacementDescription : LabelPlacementDescription
    {
        
        /// <remarks/>
        private esriServerPointLabelPlacementType type;
        
        public PointLabelPlacementDescription()
        {
        }
        
        public PointLabelPlacementDescription(esriServerPointLabelPlacementType type)
        {
            this.type = type;
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0, ElementName="Type")]
        public esriServerPointLabelPlacementType Type
        {
            get
            {
                return this.type;
            }
            set
            {
                if ((this.type != value))
                {
                    this.type = value;
                }
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="esriServerPointLabelPlacementType")]
    public enum esriServerPointLabelPlacementType
    {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriServerPointLabelPlacementAboveCenter")]
        esriServerPointLabelPlacementAboveCenter,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriServerPointLabelPlacementAboveLeft")]
        esriServerPointLabelPlacementAboveLeft,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriServerPointLabelPlacementAboveRight")]
        esriServerPointLabelPlacementAboveRight,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriServerPointLabelPlacementBelowCenter")]
        esriServerPointLabelPlacementBelowCenter,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriServerPointLabelPlacementBelowLeft")]
        esriServerPointLabelPlacementBelowLeft,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriServerPointLabelPlacementBelowRight")]
        esriServerPointLabelPlacementBelowRight,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriServerPointLabelPlacementCenterCenter")]
        esriServerPointLabelPlacementCenterCenter,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriServerPointLabelPlacementCenterLeft")]
        esriServerPointLabelPlacementCenterLeft,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriServerPointLabelPlacementCenterRight")]
        esriServerPointLabelPlacementCenterRight,
    }
    
    /// <summary>
    /// .
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="SQLSyntaxInfo")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class SQLSyntaxInfo
    {
        
        /// <remarks/>
        private PropertySet functionNames;
        
        /// <remarks/>
        private PropertySet specialCharacters;
        
        /// <remarks/>
        private System.Collections.Generic.List<string> supportedPredicates;
        
        /// <remarks/>
        private System.Collections.Generic.List<string> supportedClauses;
        
        /// <remarks/>
        private bool identifierCase;
        
        /// <remarks/>
        private bool delimitedIdentifierCase;
        
        /// <remarks/>
        private bool stringComparisonCase;
        
        /// <remarks/>
        private System.Collections.Generic.List<string> keywords;
        
        /// <remarks/>
        private string invalidCharacters;
        
        /// <remarks/>
        private string invalidStartingCharacters;
        
        public SQLSyntaxInfo()
        {
        }
        
        public SQLSyntaxInfo(PropertySet functionNames, PropertySet specialCharacters, System.Collections.Generic.List<string> supportedPredicates, System.Collections.Generic.List<string> supportedClauses, bool identifierCase, bool delimitedIdentifierCase, bool stringComparisonCase, System.Collections.Generic.List<string> keywords, string invalidCharacters, string invalidStartingCharacters)
        {
            this.functionNames = functionNames;
            this.specialCharacters = specialCharacters;
            this.supportedPredicates = supportedPredicates;
            this.supportedClauses = supportedClauses;
            this.identifierCase = identifierCase;
            this.delimitedIdentifierCase = delimitedIdentifierCase;
            this.stringComparisonCase = stringComparisonCase;
            this.keywords = keywords;
            this.invalidCharacters = invalidCharacters;
            this.invalidStartingCharacters = invalidStartingCharacters;
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0, ElementName="FunctionNames")]
        public PropertySet FunctionNames
        {
            get
            {
                return this.functionNames;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("FunctionNames");
                }
                if ((this.functionNames != value))
                {
                    this.functionNames = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1, ElementName="SpecialCharacters")]
        public PropertySet SpecialCharacters
        {
            get
            {
                return this.specialCharacters;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("SpecialCharacters");
                }
                if ((this.specialCharacters != value))
                {
                    this.specialCharacters = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2, ElementName="SupportedPredicates")]
        [System.Xml.Serialization.XmlArrayItemAttribute("String", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public System.Collections.Generic.List<string> SupportedPredicates
        {
            get
            {
                return this.supportedPredicates;
            }
            set
            {
                if ((this.supportedPredicates != value))
                {
                    this.supportedPredicates = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=3, ElementName="SupportedClauses")]
        [System.Xml.Serialization.XmlArrayItemAttribute("String", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public System.Collections.Generic.List<string> SupportedClauses
        {
            get
            {
                return this.supportedClauses;
            }
            set
            {
                if ((this.supportedClauses != value))
                {
                    this.supportedClauses = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=4, ElementName="IdentifierCase")]
        public bool IdentifierCase
        {
            get
            {
                return this.identifierCase;
            }
            set
            {
                if ((this.identifierCase != value))
                {
                    this.identifierCase = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=5, ElementName="DelimitedIdentifierCase")]
        public bool DelimitedIdentifierCase
        {
            get
            {
                return this.delimitedIdentifierCase;
            }
            set
            {
                if ((this.delimitedIdentifierCase != value))
                {
                    this.delimitedIdentifierCase = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=6, ElementName="StringComparisonCase")]
        public bool StringComparisonCase
        {
            get
            {
                return this.stringComparisonCase;
            }
            set
            {
                if ((this.stringComparisonCase != value))
                {
                    this.stringComparisonCase = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=7, ElementName="Keywords")]
        [System.Xml.Serialization.XmlArrayItemAttribute("String", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public System.Collections.Generic.List<string> Keywords
        {
            get
            {
                return this.keywords;
            }
            set
            {
                if ((this.keywords != value))
                {
                    this.keywords = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=8, ElementName="InvalidCharacters")]
        public string InvalidCharacters
        {
            get
            {
                return this.invalidCharacters;
            }
            set
            {
                if ((this.invalidCharacters != value))
                {
                    this.invalidCharacters = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=9, ElementName="InvalidStartingCharacters")]
        public string InvalidStartingCharacters
        {
            get
            {
                return this.invalidStartingCharacters;
            }
            set
            {
                if ((this.invalidStartingCharacters != value))
                {
                    this.invalidStartingCharacters = value;
                }
            }
        }
    }
    
    /// <summary>
    /// A map surround for displaying a scale bar.
    /// </summary>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SingleDivisionScaleBar))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AlternatingScaleBar))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="ScaleBar")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public abstract partial class ScaleBar
    {
        
        /// <remarks/>
        private double barHeight;
        
        /// <remarks/>
        private bool barHeightSpecified;
        
        /// <remarks/>
        private double division;
        
        /// <remarks/>
        private bool divisionSpecified;
        
        /// <remarks/>
        private short divisions;
        
        /// <remarks/>
        private bool divisionsSpecified;
        
        /// <remarks/>
        private short divisionsBeforeZero;
        
        /// <remarks/>
        private bool divisionsBeforeZeroSpecified;
        
        /// <remarks/>
        private short subdivisions;
        
        /// <remarks/>
        private bool subdivisionsSpecified;
        
        /// <remarks/>
        private esriUnits units;
        
        /// <remarks/>
        private bool unitsSpecified;
        
        /// <remarks/>
        private string unitLabel;
        
        /// <remarks/>
        private esriScaleBarPos unitLabelPosition;
        
        /// <remarks/>
        private bool unitLabelPositionSpecified;
        
        /// <remarks/>
        private double unitLabelGap;
        
        /// <remarks/>
        private bool unitLabelGapSpecified;
        
        /// <remarks/>
        private TextSymbol unitLabelSymbol;
        
        /// <remarks/>
        private esriScaleBarFrequency labelFrequency;
        
        /// <remarks/>
        private bool labelFrequencySpecified;
        
        /// <remarks/>
        private esriVertPosEnum labelPosition;
        
        /// <remarks/>
        private bool labelPositionSpecified;
        
        /// <remarks/>
        private double labelGap;
        
        /// <remarks/>
        private bool labelGapSpecified;
        
        /// <remarks/>
        private TextSymbol labelSymbol;
        
        /// <remarks/>
        private NumericFormat numberFormat;
        
        /// <remarks/>
        private esriScaleBarResizeHint resizeHint;
        
        /// <remarks/>
        private bool resizeHintSpecified;
        
        public ScaleBar()
        {
        }
        
        public ScaleBar(
                    double barHeight, 
                    bool barHeightSpecified, 
                    double division, 
                    bool divisionSpecified, 
                    short divisions, 
                    bool divisionsSpecified, 
                    short divisionsBeforeZero, 
                    bool divisionsBeforeZeroSpecified, 
                    short subdivisions, 
                    bool subdivisionsSpecified, 
                    esriUnits units, 
                    bool unitsSpecified, 
                    string unitLabel, 
                    esriScaleBarPos unitLabelPosition, 
                    bool unitLabelPositionSpecified, 
                    double unitLabelGap, 
                    bool unitLabelGapSpecified, 
                    TextSymbol unitLabelSymbol, 
                    esriScaleBarFrequency labelFrequency, 
                    bool labelFrequencySpecified, 
                    esriVertPosEnum labelPosition, 
                    bool labelPositionSpecified, 
                    double labelGap, 
                    bool labelGapSpecified, 
                    TextSymbol labelSymbol, 
                    NumericFormat numberFormat, 
                    esriScaleBarResizeHint resizeHint, 
                    bool resizeHintSpecified)
        {
            this.barHeight = barHeight;
            this.barHeightSpecified = barHeightSpecified;
            this.division = division;
            this.divisionSpecified = divisionSpecified;
            this.divisions = divisions;
            this.divisionsSpecified = divisionsSpecified;
            this.divisionsBeforeZero = divisionsBeforeZero;
            this.divisionsBeforeZeroSpecified = divisionsBeforeZeroSpecified;
            this.subdivisions = subdivisions;
            this.subdivisionsSpecified = subdivisionsSpecified;
            this.units = units;
            this.unitsSpecified = unitsSpecified;
            this.unitLabel = unitLabel;
            this.unitLabelPosition = unitLabelPosition;
            this.unitLabelPositionSpecified = unitLabelPositionSpecified;
            this.unitLabelGap = unitLabelGap;
            this.unitLabelGapSpecified = unitLabelGapSpecified;
            this.unitLabelSymbol = unitLabelSymbol;
            this.labelFrequency = labelFrequency;
            this.labelFrequencySpecified = labelFrequencySpecified;
            this.labelPosition = labelPosition;
            this.labelPositionSpecified = labelPositionSpecified;
            this.labelGap = labelGap;
            this.labelGapSpecified = labelGapSpecified;
            this.labelSymbol = labelSymbol;
            this.numberFormat = numberFormat;
            this.resizeHint = resizeHint;
            this.resizeHintSpecified = resizeHintSpecified;
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0, ElementName="BarHeight")]
        public double BarHeight
        {
            get
            {
                return this.barHeight;
            }
            set
            {
                if ((this.barHeight != value))
                {
                    this.barHeight = value;
                    this.barHeightSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BarHeightSpecified
        {
            get
            {
                return this.barHeightSpecified;
            }
            set
            {
                if ((this.barHeightSpecified != value))
                {
                    this.barHeightSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1, ElementName="Division")]
        public double Division
        {
            get
            {
                return this.division;
            }
            set
            {
                if ((this.division != value))
                {
                    this.division = value;
                    this.divisionSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DivisionSpecified
        {
            get
            {
                return this.divisionSpecified;
            }
            set
            {
                if ((this.divisionSpecified != value))
                {
                    this.divisionSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2, ElementName="Divisions")]
        public short Divisions
        {
            get
            {
                return this.divisions;
            }
            set
            {
                if ((this.divisions != value))
                {
                    this.divisions = value;
                    this.divisionsSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DivisionsSpecified
        {
            get
            {
                return this.divisionsSpecified;
            }
            set
            {
                if ((this.divisionsSpecified != value))
                {
                    this.divisionsSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=3, ElementName="DivisionsBeforeZero")]
        public short DivisionsBeforeZero
        {
            get
            {
                return this.divisionsBeforeZero;
            }
            set
            {
                if ((this.divisionsBeforeZero != value))
                {
                    this.divisionsBeforeZero = value;
                    this.divisionsBeforeZeroSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DivisionsBeforeZeroSpecified
        {
            get
            {
                return this.divisionsBeforeZeroSpecified;
            }
            set
            {
                if ((this.divisionsBeforeZeroSpecified != value))
                {
                    this.divisionsBeforeZeroSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=4, ElementName="Subdivisions")]
        public short Subdivisions
        {
            get
            {
                return this.subdivisions;
            }
            set
            {
                if ((this.subdivisions != value))
                {
                    this.subdivisions = value;
                    this.subdivisionsSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SubdivisionsSpecified
        {
            get
            {
                return this.subdivisionsSpecified;
            }
            set
            {
                if ((this.subdivisionsSpecified != value))
                {
                    this.subdivisionsSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=5, ElementName="Units")]
        public esriUnits Units
        {
            get
            {
                return this.units;
            }
            set
            {
                if ((this.units != value))
                {
                    this.units = value;
                    this.unitsSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UnitsSpecified
        {
            get
            {
                return this.unitsSpecified;
            }
            set
            {
                if ((this.unitsSpecified != value))
                {
                    this.unitsSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=6, ElementName="UnitLabel")]
        public string UnitLabel
        {
            get
            {
                return this.unitLabel;
            }
            set
            {
                if ((this.unitLabel != value))
                {
                    this.unitLabel = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=7, ElementName="UnitLabelPosition")]
        public esriScaleBarPos UnitLabelPosition
        {
            get
            {
                return this.unitLabelPosition;
            }
            set
            {
                if ((this.unitLabelPosition != value))
                {
                    this.unitLabelPosition = value;
                    this.unitLabelPositionSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UnitLabelPositionSpecified
        {
            get
            {
                return this.unitLabelPositionSpecified;
            }
            set
            {
                if ((this.unitLabelPositionSpecified != value))
                {
                    this.unitLabelPositionSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=8, ElementName="UnitLabelGap")]
        public double UnitLabelGap
        {
            get
            {
                return this.unitLabelGap;
            }
            set
            {
                if ((this.unitLabelGap != value))
                {
                    this.unitLabelGap = value;
                    this.unitLabelGapSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UnitLabelGapSpecified
        {
            get
            {
                return this.unitLabelGapSpecified;
            }
            set
            {
                if ((this.unitLabelGapSpecified != value))
                {
                    this.unitLabelGapSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=9, ElementName="UnitLabelSymbol")]
        public TextSymbol UnitLabelSymbol
        {
            get
            {
                return this.unitLabelSymbol;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("UnitLabelSymbol");
                }
                if ((this.unitLabelSymbol != value))
                {
                    this.unitLabelSymbol = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=10, ElementName="LabelFrequency")]
        public esriScaleBarFrequency LabelFrequency
        {
            get
            {
                return this.labelFrequency;
            }
            set
            {
                if ((this.labelFrequency != value))
                {
                    this.labelFrequency = value;
                    this.labelFrequencySpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LabelFrequencySpecified
        {
            get
            {
                return this.labelFrequencySpecified;
            }
            set
            {
                if ((this.labelFrequencySpecified != value))
                {
                    this.labelFrequencySpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=11, ElementName="LabelPosition")]
        public esriVertPosEnum LabelPosition
        {
            get
            {
                return this.labelPosition;
            }
            set
            {
                if ((this.labelPosition != value))
                {
                    this.labelPosition = value;
                    this.labelPositionSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LabelPositionSpecified
        {
            get
            {
                return this.labelPositionSpecified;
            }
            set
            {
                if ((this.labelPositionSpecified != value))
                {
                    this.labelPositionSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=12, ElementName="LabelGap")]
        public double LabelGap
        {
            get
            {
                return this.labelGap;
            }
            set
            {
                if ((this.labelGap != value))
                {
                    this.labelGap = value;
                    this.labelGapSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LabelGapSpecified
        {
            get
            {
                return this.labelGapSpecified;
            }
            set
            {
                if ((this.labelGapSpecified != value))
                {
                    this.labelGapSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=13, ElementName="LabelSymbol")]
        public TextSymbol LabelSymbol
        {
            get
            {
                return this.labelSymbol;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("LabelSymbol");
                }
                if ((this.labelSymbol != value))
                {
                    this.labelSymbol = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=14, ElementName="NumberFormat")]
        public NumericFormat NumberFormat
        {
            get
            {
                return this.numberFormat;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("NumberFormat");
                }
                if ((this.numberFormat != value))
                {
                    this.numberFormat = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=15, ElementName="ResizeHint")]
        public esriScaleBarResizeHint ResizeHint
        {
            get
            {
                return this.resizeHint;
            }
            set
            {
                if ((this.resizeHint != value))
                {
                    this.resizeHint = value;
                    this.resizeHintSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ResizeHintSpecified
        {
            get
            {
                return this.resizeHintSpecified;
            }
            set
            {
                if ((this.resizeHintSpecified != value))
                {
                    this.resizeHintSpecified = value;
                }
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="esriUnits")]
    public enum esriUnits
    {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriUnknownUnits")]
        esriUnknownUnits,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriInches")]
        esriInches,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriPoints")]
        esriPoints,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriFeet")]
        esriFeet,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriYards")]
        esriYards,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriMiles")]
        esriMiles,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriNauticalMiles")]
        esriNauticalMiles,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriMillimeters")]
        esriMillimeters,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriCentimeters")]
        esriCentimeters,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriMeters")]
        esriMeters,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriKilometers")]
        esriKilometers,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriDecimalDegrees")]
        esriDecimalDegrees,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriDecimeters")]
        esriDecimeters,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="esriScaleBarPos")]
    public enum esriScaleBarPos
    {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriScaleBarAbove")]
        esriScaleBarAbove,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriScaleBarBeforeLabels")]
        esriScaleBarBeforeLabels,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriScaleBarAfterLabels")]
        esriScaleBarAfterLabels,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriScaleBarBeforeBar")]
        esriScaleBarBeforeBar,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriScaleBarAfterBar")]
        esriScaleBarAfterBar,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriScaleBarBelow")]
        esriScaleBarBelow,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="esriScaleBarFrequency")]
    public enum esriScaleBarFrequency
    {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriScaleBarNone")]
        esriScaleBarNone,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriScaleBarOne")]
        esriScaleBarOne,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriScaleBarMajorDivisions")]
        esriScaleBarMajorDivisions,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriScaleBarDivisions")]
        esriScaleBarDivisions,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriScaleBarDivisionsAndFirstMidpoint")]
        esriScaleBarDivisionsAndFirstMidpoint,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriScaleBarDivisionsAndFirstSubdivisions")]
        esriScaleBarDivisionsAndFirstSubdivisions,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriScaleBarDivisionsAndSubdivisions")]
        esriScaleBarDivisionsAndSubdivisions,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="esriVertPosEnum")]
    public enum esriVertPosEnum
    {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriAbove")]
        esriAbove,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriTop")]
        esriTop,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriOn")]
        esriOn,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriBottom")]
        esriBottom,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriBelow")]
        esriBelow,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="esriScaleBarResizeHint")]
    public enum esriScaleBarResizeHint
    {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriScaleBarFixed")]
        esriScaleBarFixed,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriScaleBarAutoDivision")]
        esriScaleBarAutoDivision,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriScaleBarAutoDivisions")]
        esriScaleBarAutoDivisions,
    }
    
    /// <summary>
    /// .
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="SingleDivisionScaleBar")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class SingleDivisionScaleBar : ScaleBar
    {
        
        /// <remarks/>
        private FillSymbol fillSymbol;
        
        /// <remarks/>
        private LineSymbol divisionMarkSymbol;
        
        /// <remarks/>
        private LineSymbol subdivisionMarkSymbol;
        
        /// <remarks/>
        private double divisionMarkHeight;
        
        /// <remarks/>
        private bool divisionMarkHeightSpecified;
        
        /// <remarks/>
        private double subdivisionMarkHeight;
        
        /// <remarks/>
        private bool subdivisionMarkHeightSpecified;
        
        /// <remarks/>
        private esriVertPosEnum markPosition;
        
        /// <remarks/>
        private bool markPositionSpecified;
        
        /// <remarks/>
        private esriScaleBarFrequency markFrequency;
        
        /// <remarks/>
        private bool markFrequencySpecified;
        
        public SingleDivisionScaleBar()
        {
        }
        
        public SingleDivisionScaleBar(FillSymbol fillSymbol, LineSymbol divisionMarkSymbol, LineSymbol subdivisionMarkSymbol, double divisionMarkHeight, bool divisionMarkHeightSpecified, double subdivisionMarkHeight, bool subdivisionMarkHeightSpecified, esriVertPosEnum markPosition, bool markPositionSpecified, esriScaleBarFrequency markFrequency, bool markFrequencySpecified)
        {
            this.fillSymbol = fillSymbol;
            this.divisionMarkSymbol = divisionMarkSymbol;
            this.subdivisionMarkSymbol = subdivisionMarkSymbol;
            this.divisionMarkHeight = divisionMarkHeight;
            this.divisionMarkHeightSpecified = divisionMarkHeightSpecified;
            this.subdivisionMarkHeight = subdivisionMarkHeight;
            this.subdivisionMarkHeightSpecified = subdivisionMarkHeightSpecified;
            this.markPosition = markPosition;
            this.markPositionSpecified = markPositionSpecified;
            this.markFrequency = markFrequency;
            this.markFrequencySpecified = markFrequencySpecified;
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0, ElementName="FillSymbol")]
        public FillSymbol FillSymbol
        {
            get
            {
                return this.fillSymbol;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("FillSymbol");
                }
                if ((this.fillSymbol != value))
                {
                    this.fillSymbol = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1, ElementName="DivisionMarkSymbol")]
        public LineSymbol DivisionMarkSymbol
        {
            get
            {
                return this.divisionMarkSymbol;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("DivisionMarkSymbol");
                }
                if ((this.divisionMarkSymbol != value))
                {
                    this.divisionMarkSymbol = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2, ElementName="SubdivisionMarkSymbol")]
        public LineSymbol SubdivisionMarkSymbol
        {
            get
            {
                return this.subdivisionMarkSymbol;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("SubdivisionMarkSymbol");
                }
                if ((this.subdivisionMarkSymbol != value))
                {
                    this.subdivisionMarkSymbol = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=3, ElementName="DivisionMarkHeight")]
        public double DivisionMarkHeight
        {
            get
            {
                return this.divisionMarkHeight;
            }
            set
            {
                if ((this.divisionMarkHeight != value))
                {
                    this.divisionMarkHeight = value;
                    this.divisionMarkHeightSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DivisionMarkHeightSpecified
        {
            get
            {
                return this.divisionMarkHeightSpecified;
            }
            set
            {
                if ((this.divisionMarkHeightSpecified != value))
                {
                    this.divisionMarkHeightSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=4, ElementName="SubdivisionMarkHeight")]
        public double SubdivisionMarkHeight
        {
            get
            {
                return this.subdivisionMarkHeight;
            }
            set
            {
                if ((this.subdivisionMarkHeight != value))
                {
                    this.subdivisionMarkHeight = value;
                    this.subdivisionMarkHeightSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SubdivisionMarkHeightSpecified
        {
            get
            {
                return this.subdivisionMarkHeightSpecified;
            }
            set
            {
                if ((this.subdivisionMarkHeightSpecified != value))
                {
                    this.subdivisionMarkHeightSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=5, ElementName="MarkPosition")]
        public esriVertPosEnum MarkPosition
        {
            get
            {
                return this.markPosition;
            }
            set
            {
                if ((this.markPosition != value))
                {
                    this.markPosition = value;
                    this.markPositionSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MarkPositionSpecified
        {
            get
            {
                return this.markPositionSpecified;
            }
            set
            {
                if ((this.markPositionSpecified != value))
                {
                    this.markPositionSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=6, ElementName="MarkFrequency")]
        public esriScaleBarFrequency MarkFrequency
        {
            get
            {
                return this.markFrequency;
            }
            set
            {
                if ((this.markFrequency != value))
                {
                    this.markFrequency = value;
                    this.markFrequencySpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MarkFrequencySpecified
        {
            get
            {
                return this.markFrequencySpecified;
            }
            set
            {
                if ((this.markFrequencySpecified != value))
                {
                    this.markFrequencySpecified = value;
                }
            }
        }
    }
    
    /// <summary>
    /// .
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="AlternatingScaleBar")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class AlternatingScaleBar : ScaleBar
    {
        
        /// <remarks/>
        private FillSymbol fillSymbol1;
        
        /// <remarks/>
        private FillSymbol fillSymbol2;
        
        /// <remarks/>
        private LineSymbol divisionMarkSymbol;
        
        /// <remarks/>
        private LineSymbol subdivisionMarkSymbol;
        
        /// <remarks/>
        private double divisionMarkHeight;
        
        /// <remarks/>
        private bool divisionMarkHeightSpecified;
        
        /// <remarks/>
        private double subdivisionMarkHeight;
        
        /// <remarks/>
        private bool subdivisionMarkHeightSpecified;
        
        /// <remarks/>
        private esriVertPosEnum markPosition;
        
        /// <remarks/>
        private bool markPositionSpecified;
        
        /// <remarks/>
        private esriScaleBarFrequency markFrequency;
        
        /// <remarks/>
        private bool markFrequencySpecified;
        
        public AlternatingScaleBar()
        {
        }
        
        public AlternatingScaleBar(FillSymbol fillSymbol1, FillSymbol fillSymbol2, LineSymbol divisionMarkSymbol, LineSymbol subdivisionMarkSymbol, double divisionMarkHeight, bool divisionMarkHeightSpecified, double subdivisionMarkHeight, bool subdivisionMarkHeightSpecified, esriVertPosEnum markPosition, bool markPositionSpecified, esriScaleBarFrequency markFrequency, bool markFrequencySpecified)
        {
            this.fillSymbol1 = fillSymbol1;
            this.fillSymbol2 = fillSymbol2;
            this.divisionMarkSymbol = divisionMarkSymbol;
            this.subdivisionMarkSymbol = subdivisionMarkSymbol;
            this.divisionMarkHeight = divisionMarkHeight;
            this.divisionMarkHeightSpecified = divisionMarkHeightSpecified;
            this.subdivisionMarkHeight = subdivisionMarkHeight;
            this.subdivisionMarkHeightSpecified = subdivisionMarkHeightSpecified;
            this.markPosition = markPosition;
            this.markPositionSpecified = markPositionSpecified;
            this.markFrequency = markFrequency;
            this.markFrequencySpecified = markFrequencySpecified;
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0, ElementName="FillSymbol1")]
        public FillSymbol FillSymbol1
        {
            get
            {
                return this.fillSymbol1;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("FillSymbol1");
                }
                if ((this.fillSymbol1 != value))
                {
                    this.fillSymbol1 = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1, ElementName="FillSymbol2")]
        public FillSymbol FillSymbol2
        {
            get
            {
                return this.fillSymbol2;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("FillSymbol2");
                }
                if ((this.fillSymbol2 != value))
                {
                    this.fillSymbol2 = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2, ElementName="DivisionMarkSymbol")]
        public LineSymbol DivisionMarkSymbol
        {
            get
            {
                return this.divisionMarkSymbol;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("DivisionMarkSymbol");
                }
                if ((this.divisionMarkSymbol != value))
                {
                    this.divisionMarkSymbol = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=3, ElementName="SubdivisionMarkSymbol")]
        public LineSymbol SubdivisionMarkSymbol
        {
            get
            {
                return this.subdivisionMarkSymbol;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("SubdivisionMarkSymbol");
                }
                if ((this.subdivisionMarkSymbol != value))
                {
                    this.subdivisionMarkSymbol = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=4, ElementName="DivisionMarkHeight")]
        public double DivisionMarkHeight
        {
            get
            {
                return this.divisionMarkHeight;
            }
            set
            {
                if ((this.divisionMarkHeight != value))
                {
                    this.divisionMarkHeight = value;
                    this.divisionMarkHeightSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DivisionMarkHeightSpecified
        {
            get
            {
                return this.divisionMarkHeightSpecified;
            }
            set
            {
                if ((this.divisionMarkHeightSpecified != value))
                {
                    this.divisionMarkHeightSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=5, ElementName="SubdivisionMarkHeight")]
        public double SubdivisionMarkHeight
        {
            get
            {
                return this.subdivisionMarkHeight;
            }
            set
            {
                if ((this.subdivisionMarkHeight != value))
                {
                    this.subdivisionMarkHeight = value;
                    this.subdivisionMarkHeightSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SubdivisionMarkHeightSpecified
        {
            get
            {
                return this.subdivisionMarkHeightSpecified;
            }
            set
            {
                if ((this.subdivisionMarkHeightSpecified != value))
                {
                    this.subdivisionMarkHeightSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=6, ElementName="MarkPosition")]
        public esriVertPosEnum MarkPosition
        {
            get
            {
                return this.markPosition;
            }
            set
            {
                if ((this.markPosition != value))
                {
                    this.markPosition = value;
                    this.markPositionSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MarkPositionSpecified
        {
            get
            {
                return this.markPositionSpecified;
            }
            set
            {
                if ((this.markPositionSpecified != value))
                {
                    this.markPositionSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=7, ElementName="MarkFrequency")]
        public esriScaleBarFrequency MarkFrequency
        {
            get
            {
                return this.markFrequency;
            }
            set
            {
                if ((this.markFrequency != value))
                {
                    this.markFrequency = value;
                    this.markFrequencySpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MarkFrequencySpecified
        {
            get
            {
                return this.markFrequencySpecified;
            }
            set
            {
                if ((this.markFrequencySpecified != value))
                {
                    this.markFrequencySpecified = value;
                }
            }
        }
    }
    
    /// <summary>
    /// .
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="MapServerLegendPatch")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class MapServerLegendPatch
    {
        
        /// <remarks/>
        private double width;
        
        /// <remarks/>
        private double height;
        
        /// <remarks/>
        private double imageDPI;
        
        /// <remarks/>
        private LinePatch linePatch;
        
        /// <remarks/>
        private AreaPatch areaPatch;
        
        public MapServerLegendPatch()
        {
        }
        
        public MapServerLegendPatch(double width, double height, double imageDPI, LinePatch linePatch, AreaPatch areaPatch)
        {
            this.width = width;
            this.height = height;
            this.imageDPI = imageDPI;
            this.linePatch = linePatch;
            this.areaPatch = areaPatch;
        }
        
        /// <summary>
        /// The patch width (in points).
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0, ElementName="Width")]
        public double Width
        {
            get
            {
                return this.width;
            }
            set
            {
                if ((this.width != value))
                {
                    this.width = value;
                }
            }
        }
        
        /// <summary>
        /// The patch width (in points).
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1, ElementName="Height")]
        public double Height
        {
            get
            {
                return this.height;
            }
            set
            {
                if ((this.height != value))
                {
                    this.height = value;
                }
            }
        }
        
        /// <summary>
        /// The patch resolution (dots per inch).
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2, ElementName="ImageDPI")]
        public double ImageDPI
        {
            get
            {
                return this.imageDPI;
            }
            set
            {
                if ((this.imageDPI != value))
                {
                    this.imageDPI = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=3, ElementName="LinePatch")]
        public LinePatch LinePatch
        {
            get
            {
                return this.linePatch;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("LinePatch");
                }
                if ((this.linePatch != value))
                {
                    this.linePatch = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=4, ElementName="AreaPatch")]
        public AreaPatch AreaPatch
        {
            get
            {
                return this.areaPatch;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("AreaPatch");
                }
                if ((this.areaPatch != value))
                {
                    this.areaPatch = value;
                }
            }
        }
    }
    
    /// <summary>
    /// .
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="MapServerInfo")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class MapServerInfo
    {
        
        /// <remarks/>
        private string name;
        
        /// <remarks/>
        private string description;
        
        /// <remarks/>
        private Envelope fullExtent;
        
        /// <remarks/>
        private Envelope extent;
        
        /// <remarks/>
        private SpatialReference spatialReference;
        
        /// <remarks/>
        private System.Collections.Generic.List<MapLayerInfo> mapLayerInfos;
        
        /// <remarks/>
        private Color backgroundColor;
        
        /// <remarks/>
        private System.Collections.Generic.List<MapServerBookmark> bookmarks;
        
        /// <remarks/>
        private MapDescription defaultMapDescription;
        
        /// <remarks/>
        private esriUnits units;
        
        /// <remarks/>
        private esriImageReturnType supportedImageReturnTypes;
        
        /// <remarks/>
        private FillSymbol backgroundSymbol;
        
        /// <remarks/>
        private string copyrightText;
        
        /// <remarks/>
        private System.Collections.Generic.List<StandaloneTableInfo> standaloneTableInfos;
        
        /// <remarks/>
        private System.Collections.Generic.List<StandaloneTableDescription> standaloneTableDescriptions;
        
        /// <remarks/>
        private TimeExtent fullTimeExtent;
        
        /// <remarks/>
        private double defaultTimeStepInterval;
        
        /// <remarks/>
        private bool defaultTimeStepIntervalSpecified;
        
        /// <remarks/>
        private esriTimeUnits defaultTimeStepIntervalUnits;
        
        /// <remarks/>
        private bool defaultTimeStepIntervalUnitsSpecified;
        
        /// <remarks/>
        private double defaultTimeWindow;
        
        /// <remarks/>
        private bool defaultTimeWindowSpecified;
        
        public MapServerInfo()
        {
        }
        
        public MapServerInfo(
                    string name, 
                    string description, 
                    Envelope fullExtent, 
                    Envelope extent, 
                    SpatialReference spatialReference, 
                    System.Collections.Generic.List<MapLayerInfo> mapLayerInfos, 
                    Color backgroundColor, 
                    System.Collections.Generic.List<MapServerBookmark> bookmarks, 
                    MapDescription defaultMapDescription, 
                    esriUnits units, 
                    esriImageReturnType supportedImageReturnTypes, 
                    FillSymbol backgroundSymbol, 
                    string copyrightText, 
                    System.Collections.Generic.List<StandaloneTableInfo> standaloneTableInfos, 
                    System.Collections.Generic.List<StandaloneTableDescription> standaloneTableDescriptions, 
                    TimeExtent fullTimeExtent, 
                    double defaultTimeStepInterval, 
                    bool defaultTimeStepIntervalSpecified, 
                    esriTimeUnits defaultTimeStepIntervalUnits, 
                    bool defaultTimeStepIntervalUnitsSpecified, 
                    double defaultTimeWindow, 
                    bool defaultTimeWindowSpecified)
        {
            this.name = name;
            this.description = description;
            this.fullExtent = fullExtent;
            this.extent = extent;
            this.spatialReference = spatialReference;
            this.mapLayerInfos = mapLayerInfos;
            this.backgroundColor = backgroundColor;
            this.bookmarks = bookmarks;
            this.defaultMapDescription = defaultMapDescription;
            this.units = units;
            this.supportedImageReturnTypes = supportedImageReturnTypes;
            this.backgroundSymbol = backgroundSymbol;
            this.copyrightText = copyrightText;
            this.standaloneTableInfos = standaloneTableInfos;
            this.standaloneTableDescriptions = standaloneTableDescriptions;
            this.fullTimeExtent = fullTimeExtent;
            this.defaultTimeStepInterval = defaultTimeStepInterval;
            this.defaultTimeStepIntervalSpecified = defaultTimeStepIntervalSpecified;
            this.defaultTimeStepIntervalUnits = defaultTimeStepIntervalUnits;
            this.defaultTimeStepIntervalUnitsSpecified = defaultTimeStepIntervalUnitsSpecified;
            this.defaultTimeWindow = defaultTimeWindow;
            this.defaultTimeWindowSpecified = defaultTimeWindowSpecified;
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0, ElementName="Name")]
        public string Name
        {
            get
            {
                return this.name;
            }
            set
            {
                if ((this.name != value))
                {
                    this.name = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1, ElementName="Description")]
        public string Description
        {
            get
            {
                return this.description;
            }
            set
            {
                if ((this.description != value))
                {
                    this.description = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2, ElementName="FullExtent")]
        public Envelope FullExtent
        {
            get
            {
                return this.fullExtent;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("FullExtent");
                }
                if ((this.fullExtent != value))
                {
                    this.fullExtent = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=3, ElementName="Extent")]
        public Envelope Extent
        {
            get
            {
                return this.extent;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("Extent");
                }
                if ((this.extent != value))
                {
                    this.extent = value;
                }
            }
        }
        
        /// <summary>
        /// The spatial reference of the map (data frame).
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=4, ElementName="SpatialReference")]
        public SpatialReference SpatialReference
        {
            get
            {
                return this.spatialReference;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("SpatialReference");
                }
                if ((this.spatialReference != value))
                {
                    this.spatialReference = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=5, ElementName="MapLayerInfos")]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public System.Collections.Generic.List<MapLayerInfo> MapLayerInfos
        {
            get
            {
                return this.mapLayerInfos;
            }
            set
            {
                if ((this.mapLayerInfos != value))
                {
                    this.mapLayerInfos = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=6, ElementName="BackgroundColor")]
        public Color BackgroundColor
        {
            get
            {
                return this.backgroundColor;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("BackgroundColor");
                }
                if ((this.backgroundColor != value))
                {
                    this.backgroundColor = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=7, ElementName="Bookmarks")]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public System.Collections.Generic.List<MapServerBookmark> Bookmarks
        {
            get
            {
                return this.bookmarks;
            }
            set
            {
                if ((this.bookmarks != value))
                {
                    this.bookmarks = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=8, ElementName="DefaultMapDescription")]
        public MapDescription DefaultMapDescription
        {
            get
            {
                return this.defaultMapDescription;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("DefaultMapDescription");
                }
                if ((this.defaultMapDescription != value))
                {
                    this.defaultMapDescription = value;
                }
            }
        }
        
        /// <summary>
        /// The units for the map (data frame).
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=9, ElementName="Units")]
        public esriUnits Units
        {
            get
            {
                return this.units;
            }
            set
            {
                if ((this.units != value))
                {
                    this.units = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=10, ElementName="SupportedImageReturnTypes")]
        public esriImageReturnType SupportedImageReturnTypes
        {
            get
            {
                return this.supportedImageReturnTypes;
            }
            set
            {
                if ((this.supportedImageReturnTypes != value))
                {
                    this.supportedImageReturnTypes = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=11, ElementName="BackgroundSymbol")]
        public FillSymbol BackgroundSymbol
        {
            get
            {
                return this.backgroundSymbol;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("BackgroundSymbol");
                }
                if ((this.backgroundSymbol != value))
                {
                    this.backgroundSymbol = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=12, ElementName="CopyrightText")]
        public string CopyrightText
        {
            get
            {
                return this.copyrightText;
            }
            set
            {
                if ((this.copyrightText != value))
                {
                    this.copyrightText = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=13, ElementName="StandaloneTableInfos")]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public System.Collections.Generic.List<StandaloneTableInfo> StandaloneTableInfos
        {
            get
            {
                return this.standaloneTableInfos;
            }
            set
            {
                if ((this.standaloneTableInfos != value))
                {
                    this.standaloneTableInfos = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=14, ElementName="StandaloneTableDescriptions")]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public System.Collections.Generic.List<StandaloneTableDescription> StandaloneTableDescriptions
        {
            get
            {
                return this.standaloneTableDescriptions;
            }
            set
            {
                if ((this.standaloneTableDescriptions != value))
                {
                    this.standaloneTableDescriptions = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=15, ElementName="FullTimeExtent")]
        public TimeExtent FullTimeExtent
        {
            get
            {
                return this.fullTimeExtent;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("FullTimeExtent");
                }
                if ((this.fullTimeExtent != value))
                {
                    this.fullTimeExtent = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=16, ElementName="DefaultTimeStepInterval")]
        public double DefaultTimeStepInterval
        {
            get
            {
                return this.defaultTimeStepInterval;
            }
            set
            {
                if ((this.defaultTimeStepInterval != value))
                {
                    this.defaultTimeStepInterval = value;
                    this.defaultTimeStepIntervalSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DefaultTimeStepIntervalSpecified
        {
            get
            {
                return this.defaultTimeStepIntervalSpecified;
            }
            set
            {
                if ((this.defaultTimeStepIntervalSpecified != value))
                {
                    this.defaultTimeStepIntervalSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=17, ElementName="DefaultTimeStepIntervalUnits")]
        public esriTimeUnits DefaultTimeStepIntervalUnits
        {
            get
            {
                return this.defaultTimeStepIntervalUnits;
            }
            set
            {
                if ((this.defaultTimeStepIntervalUnits != value))
                {
                    this.defaultTimeStepIntervalUnits = value;
                    this.defaultTimeStepIntervalUnitsSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DefaultTimeStepIntervalUnitsSpecified
        {
            get
            {
                return this.defaultTimeStepIntervalUnitsSpecified;
            }
            set
            {
                if ((this.defaultTimeStepIntervalUnitsSpecified != value))
                {
                    this.defaultTimeStepIntervalUnitsSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=18, ElementName="DefaultTimeWindow")]
        public double DefaultTimeWindow
        {
            get
            {
                return this.defaultTimeWindow;
            }
            set
            {
                if ((this.defaultTimeWindow != value))
                {
                    this.defaultTimeWindow = value;
                    this.defaultTimeWindowSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DefaultTimeWindowSpecified
        {
            get
            {
                return this.defaultTimeWindowSpecified;
            }
            set
            {
                if ((this.defaultTimeWindowSpecified != value))
                {
                    this.defaultTimeWindowSpecified = value;
                }
            }
        }
    }
    
    /// <summary>
    /// .
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="MapLayerInfo")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class MapLayerInfo : MapTableInfo
    {
        
        /// <remarks/>
        private int layerID;
        
        /// <remarks/>
        private string name;
        
        /// <remarks/>
        private string description;
        
        /// <remarks/>
        private string layerType;
        
        /// <remarks/>
        private string sourceDescription;
        
        /// <remarks/>
        private bool hasLabels;
        
        /// <remarks/>
        private bool canSelect;
        
        /// <remarks/>
        private bool canScaleSymbols;
        
        /// <remarks/>
        private double minScale;
        
        /// <remarks/>
        private double maxScale;
        
        /// <remarks/>
        private Envelope extent;
        
        /// <remarks/>
        private bool hasHyperlinks;
        
        /// <remarks/>
        private bool hasAttributes;
        
        /// <remarks/>
        private bool canIdentify;
        
        /// <remarks/>
        private bool canFind;
        
        /// <remarks/>
        private bool isFeatureLayer;
        
        /// <remarks/>
        private Fields fields;
        
        /// <remarks/>
        private string displayField;
        
        /// <remarks/>
        private string iDField;
        
        /// <remarks/>
        private bool isComposite;
        
        /// <remarks/>
        private System.Collections.Generic.List<int> subLayerIDs;
        
        /// <remarks/>
        private int parentLayerID;
        
        /// <remarks/>
        private System.Collections.Generic.List<string> fieldAliases;
        
        /// <remarks/>
        private string copyrightText;
        
        /// <remarks/>
        private System.Collections.Generic.List<RelateInfo> relateInfos;
        
        /// <remarks/>
        private bool supportsTime;
        
        /// <remarks/>
        private bool supportsTimeSpecified;
        
        /// <remarks/>
        private string startTimeFieldName;
        
        /// <remarks/>
        private string endTimeFieldName;
        
        /// <remarks/>
        private string timeValueFormat;
        
        /// <remarks/>
        private string trackIDFieldName;
        
        /// <remarks/>
        private TimeReference timeReference;
        
        /// <remarks/>
        private TimeExtent fullTimeExtent;
        
        /// <remarks/>
        private double timeInterval;
        
        /// <remarks/>
        private esriTimeUnits timeIntervalUnits;
        
        /// <remarks/>
        private bool timeIntervalUnitsSpecified;
        
        /// <remarks/>
        private bool hasAttachments;
        
        /// <remarks/>
        private bool hasAttachmentsSpecified;
        
        /// <remarks/>
        private esriServerHTMLPopupType hTMLPopupType;
        
        /// <remarks/>
        private bool hTMLPopupTypeSpecified;
        
        /// <remarks/>
        private bool hasLayerDrawingDescription;
        
        /// <remarks/>
        private bool hasLayerDrawingDescriptionSpecified;
        
        /// <remarks/>
        private bool hasSubtype;
        
        /// <remarks/>
        private bool hasSubtypeSpecified;
        
        public MapLayerInfo()
        {
            this.TimeInterval = 0;
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0, ElementName="LayerID")]
        public int LayerID
        {
            get
            {
                return this.layerID;
            }
            set
            {
                if ((this.layerID != value))
                {
                    this.layerID = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1, ElementName="Name")]
        public string Name
        {
            get
            {
                return this.name;
            }
            set
            {
                if ((this.name != value))
                {
                    this.name = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2, ElementName="Description")]
        public string Description
        {
            get
            {
                return this.description;
            }
            set
            {
                if ((this.description != value))
                {
                    this.description = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=3, ElementName="LayerType")]
        public string LayerType
        {
            get
            {
                return this.layerType;
            }
            set
            {
                if ((this.layerType != value))
                {
                    this.layerType = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=4, ElementName="SourceDescription")]
        public string SourceDescription
        {
            get
            {
                return this.sourceDescription;
            }
            set
            {
                if ((this.sourceDescription != value))
                {
                    this.sourceDescription = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=5, ElementName="HasLabels")]
        public bool HasLabels
        {
            get
            {
                return this.hasLabels;
            }
            set
            {
                if ((this.hasLabels != value))
                {
                    this.hasLabels = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=6, ElementName="CanSelect")]
        public bool CanSelect
        {
            get
            {
                return this.canSelect;
            }
            set
            {
                if ((this.canSelect != value))
                {
                    this.canSelect = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=7, ElementName="CanScaleSymbols")]
        public bool CanScaleSymbols
        {
            get
            {
                return this.canScaleSymbols;
            }
            set
            {
                if ((this.canScaleSymbols != value))
                {
                    this.canScaleSymbols = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=8, ElementName="MinScale")]
        public double MinScale
        {
            get
            {
                return this.minScale;
            }
            set
            {
                if ((this.minScale != value))
                {
                    this.minScale = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=9, ElementName="MaxScale")]
        public double MaxScale
        {
            get
            {
                return this.maxScale;
            }
            set
            {
                if ((this.maxScale != value))
                {
                    this.maxScale = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=10, ElementName="Extent")]
        public Envelope Extent
        {
            get
            {
                return this.extent;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("Extent");
                }
                if ((this.extent != value))
                {
                    this.extent = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=11, ElementName="HasHyperlinks")]
        public bool HasHyperlinks
        {
            get
            {
                return this.hasHyperlinks;
            }
            set
            {
                if ((this.hasHyperlinks != value))
                {
                    this.hasHyperlinks = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=12, ElementName="HasAttributes")]
        public bool HasAttributes
        {
            get
            {
                return this.hasAttributes;
            }
            set
            {
                if ((this.hasAttributes != value))
                {
                    this.hasAttributes = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=13, ElementName="CanIdentify")]
        public bool CanIdentify
        {
            get
            {
                return this.canIdentify;
            }
            set
            {
                if ((this.canIdentify != value))
                {
                    this.canIdentify = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=14, ElementName="CanFind")]
        public bool CanFind
        {
            get
            {
                return this.canFind;
            }
            set
            {
                if ((this.canFind != value))
                {
                    this.canFind = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=15, ElementName="IsFeatureLayer")]
        public bool IsFeatureLayer
        {
            get
            {
                return this.isFeatureLayer;
            }
            set
            {
                if ((this.isFeatureLayer != value))
                {
                    this.isFeatureLayer = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=16, ElementName="Fields")]
        public Fields Fields
        {
            get
            {
                return this.fields;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("Fields");
                }
                if ((this.fields != value))
                {
                    this.fields = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=17, ElementName="DisplayField")]
        public string DisplayField
        {
            get
            {
                return this.displayField;
            }
            set
            {
                if ((this.displayField != value))
                {
                    this.displayField = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=18, ElementName="IDField")]
        public string IDField
        {
            get
            {
                return this.iDField;
            }
            set
            {
                if ((this.iDField != value))
                {
                    this.iDField = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=19, ElementName="IsComposite")]
        public bool IsComposite
        {
            get
            {
                return this.isComposite;
            }
            set
            {
                if ((this.isComposite != value))
                {
                    this.isComposite = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=20, ElementName="SubLayerIDs")]
        [System.Xml.Serialization.XmlArrayItemAttribute("Int", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public System.Collections.Generic.List<int> SubLayerIDs
        {
            get
            {
                return this.subLayerIDs;
            }
            set
            {
                if ((this.subLayerIDs != value))
                {
                    this.subLayerIDs = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=21, ElementName="ParentLayerID")]
        public int ParentLayerID
        {
            get
            {
                return this.parentLayerID;
            }
            set
            {
                if ((this.parentLayerID != value))
                {
                    this.parentLayerID = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=22, ElementName="FieldAliases")]
        [System.Xml.Serialization.XmlArrayItemAttribute("String", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public System.Collections.Generic.List<string> FieldAliases
        {
            get
            {
                return this.fieldAliases;
            }
            set
            {
                if ((this.fieldAliases != value))
                {
                    this.fieldAliases = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=23, ElementName="CopyrightText")]
        public string CopyrightText
        {
            get
            {
                return this.copyrightText;
            }
            set
            {
                if ((this.copyrightText != value))
                {
                    this.copyrightText = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=24, ElementName="RelateInfos")]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public System.Collections.Generic.List<RelateInfo> RelateInfos
        {
            get
            {
                return this.relateInfos;
            }
            set
            {
                if ((this.relateInfos != value))
                {
                    this.relateInfos = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=25, ElementName="SupportsTime")]
        public bool SupportsTime
        {
            get
            {
                return this.supportsTime;
            }
            set
            {
                if ((this.supportsTime != value))
                {
                    this.supportsTime = value;
                    this.supportsTimeSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SupportsTimeSpecified
        {
            get
            {
                return this.supportsTimeSpecified;
            }
            set
            {
                if ((this.supportsTimeSpecified != value))
                {
                    this.supportsTimeSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=26, ElementName="StartTimeFieldName")]
        public string StartTimeFieldName
        {
            get
            {
                return this.startTimeFieldName;
            }
            set
            {
                if ((this.startTimeFieldName != value))
                {
                    this.startTimeFieldName = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=27, ElementName="EndTimeFieldName")]
        public string EndTimeFieldName
        {
            get
            {
                return this.endTimeFieldName;
            }
            set
            {
                if ((this.endTimeFieldName != value))
                {
                    this.endTimeFieldName = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=28, ElementName="TimeValueFormat")]
        public string TimeValueFormat
        {
            get
            {
                return this.timeValueFormat;
            }
            set
            {
                if ((this.timeValueFormat != value))
                {
                    this.timeValueFormat = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=29, ElementName="TrackIDFieldName")]
        public string TrackIDFieldName
        {
            get
            {
                return this.trackIDFieldName;
            }
            set
            {
                if ((this.trackIDFieldName != value))
                {
                    this.trackIDFieldName = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=30, ElementName="TimeReference")]
        public TimeReference TimeReference
        {
            get
            {
                return this.timeReference;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("TimeReference");
                }
                if ((this.timeReference != value))
                {
                    this.timeReference = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=31, ElementName="FullTimeExtent")]
        public TimeExtent FullTimeExtent
        {
            get
            {
                return this.fullTimeExtent;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("FullTimeExtent");
                }
                if ((this.fullTimeExtent != value))
                {
                    this.fullTimeExtent = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=32, ElementName="TimeInterval")]
        [System.ComponentModel.DefaultValueAttribute(0)]
        public double TimeInterval
        {
            get
            {
                return this.timeInterval;
            }
            set
            {
                if ((this.timeInterval != value))
                {
                    this.timeInterval = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=33, ElementName="TimeIntervalUnits")]
        public esriTimeUnits TimeIntervalUnits
        {
            get
            {
                return this.timeIntervalUnits;
            }
            set
            {
                if ((this.timeIntervalUnits != value))
                {
                    this.timeIntervalUnits = value;
                    this.timeIntervalUnitsSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TimeIntervalUnitsSpecified
        {
            get
            {
                return this.timeIntervalUnitsSpecified;
            }
            set
            {
                if ((this.timeIntervalUnitsSpecified != value))
                {
                    this.timeIntervalUnitsSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=34, ElementName="HasAttachments")]
        public bool HasAttachments
        {
            get
            {
                return this.hasAttachments;
            }
            set
            {
                if ((this.hasAttachments != value))
                {
                    this.hasAttachments = value;
                    this.hasAttachmentsSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HasAttachmentsSpecified
        {
            get
            {
                return this.hasAttachmentsSpecified;
            }
            set
            {
                if ((this.hasAttachmentsSpecified != value))
                {
                    this.hasAttachmentsSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=35, ElementName="HTMLPopupType")]
        public esriServerHTMLPopupType HTMLPopupType
        {
            get
            {
                return this.hTMLPopupType;
            }
            set
            {
                if ((this.hTMLPopupType != value))
                {
                    this.hTMLPopupType = value;
                    this.hTMLPopupTypeSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HTMLPopupTypeSpecified
        {
            get
            {
                return this.hTMLPopupTypeSpecified;
            }
            set
            {
                if ((this.hTMLPopupTypeSpecified != value))
                {
                    this.hTMLPopupTypeSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=36, ElementName="HasLayerDrawingDescription")]
        public bool HasLayerDrawingDescription
        {
            get
            {
                return this.hasLayerDrawingDescription;
            }
            set
            {
                if ((this.hasLayerDrawingDescription != value))
                {
                    this.hasLayerDrawingDescription = value;
                    this.hasLayerDrawingDescriptionSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HasLayerDrawingDescriptionSpecified
        {
            get
            {
                return this.hasLayerDrawingDescriptionSpecified;
            }
            set
            {
                if ((this.hasLayerDrawingDescriptionSpecified != value))
                {
                    this.hasLayerDrawingDescriptionSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=37, ElementName="HasSubtype")]
        public bool HasSubtype
        {
            get
            {
                return this.hasSubtype;
            }
            set
            {
                if ((this.hasSubtype != value))
                {
                    this.hasSubtype = value;
                    this.hasSubtypeSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HasSubtypeSpecified
        {
            get
            {
                return this.hasSubtypeSpecified;
            }
            set
            {
                if ((this.hasSubtypeSpecified != value))
                {
                    this.hasSubtypeSpecified = value;
                }
            }
        }
    }
    
    /// <summary>
    /// .
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="RelateInfo")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class RelateInfo
    {
        
        /// <remarks/>
        private string name;
        
        /// <remarks/>
        private int relationshipID;
        
        /// <remarks/>
        private int relatedTableID;
        
        public RelateInfo()
        {
        }
        
        public RelateInfo(string name, int relationshipID, int relatedTableID)
        {
            this.name = name;
            this.relationshipID = relationshipID;
            this.relatedTableID = relatedTableID;
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0, ElementName="Name")]
        public string Name
        {
            get
            {
                return this.name;
            }
            set
            {
                if ((this.name != value))
                {
                    this.name = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1, ElementName="RelationshipID")]
        public int RelationshipID
        {
            get
            {
                return this.relationshipID;
            }
            set
            {
                if ((this.relationshipID != value))
                {
                    this.relationshipID = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2, ElementName="RelatedTableID")]
        public int RelatedTableID
        {
            get
            {
                return this.relatedTableID;
            }
            set
            {
                if ((this.relatedTableID != value))
                {
                    this.relatedTableID = value;
                }
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="esriTimeUnits")]
    public enum esriTimeUnits
    {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriTimeUnitsUnknown")]
        esriTimeUnitsUnknown,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriTimeUnitsMilliseconds")]
        esriTimeUnitsMilliseconds,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriTimeUnitsSeconds")]
        esriTimeUnitsSeconds,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriTimeUnitsMinutes")]
        esriTimeUnitsMinutes,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriTimeUnitsHours")]
        esriTimeUnitsHours,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriTimeUnitsDays")]
        esriTimeUnitsDays,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriTimeUnitsWeeks")]
        esriTimeUnitsWeeks,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriTimeUnitsMonths")]
        esriTimeUnitsMonths,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriTimeUnitsYears")]
        esriTimeUnitsYears,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriTimeUnitsDecades")]
        esriTimeUnitsDecades,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriTimeUnitsCenturies")]
        esriTimeUnitsCenturies,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="esriServerHTMLPopupType")]
    public enum esriServerHTMLPopupType
    {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriServerHTMLPopupTypeNone")]
        esriServerHTMLPopupTypeNone,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriServerHTMLPopupTypeAsURL")]
        esriServerHTMLPopupTypeAsURL,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriServerHTMLPopupTypeAsHTMLText")]
        esriServerHTMLPopupTypeAsHTMLText,
    }
    
    /// <summary>
    /// .
    /// </summary>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(StandaloneTableInfo))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(MapLayerInfo))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="MapTableInfo")]
    public abstract partial class MapTableInfo
    {
        
        public MapTableInfo()
        {
        }
    }
    
    /// <summary>
    /// .
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="StandaloneTableInfo")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class StandaloneTableInfo : MapTableInfo
    {
        
        /// <remarks/>
        private int iD;
        
        /// <remarks/>
        private string name;
        
        /// <remarks/>
        private Fields fields;
        
        /// <remarks/>
        private System.Collections.Generic.List<RelateInfo> relateInfos;
        
        /// <remarks/>
        private bool supportsTime;
        
        /// <remarks/>
        private bool supportsTimeSpecified;
        
        /// <remarks/>
        private string startTimeFieldName;
        
        /// <remarks/>
        private string endTimeFieldName;
        
        /// <remarks/>
        private string timeValueFormat;
        
        /// <remarks/>
        private string trackIDFieldName;
        
        /// <remarks/>
        private TimeReference timeReference;
        
        /// <remarks/>
        private TimeExtent fullTimeExtent;
        
        /// <remarks/>
        private double timeInterval;
        
        /// <remarks/>
        private esriTimeUnits timeIntervalUnits;
        
        /// <remarks/>
        private bool timeIntervalUnitsSpecified;
        
        /// <remarks/>
        private bool hasAttachments;
        
        /// <remarks/>
        private bool hasAttachmentsSpecified;
        
        /// <remarks/>
        private string displayField;
        
        /// <remarks/>
        private string description;
        
        /// <remarks/>
        private string iDField;
        
        /// <remarks/>
        private bool hasSubtype;
        
        /// <remarks/>
        private bool hasSubtypeSpecified;
        
        public StandaloneTableInfo()
        {
            this.TimeInterval = 0;
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0, ElementName="ID")]
        public int ID
        {
            get
            {
                return this.iD;
            }
            set
            {
                if ((this.iD != value))
                {
                    this.iD = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1, ElementName="Name")]
        public string Name
        {
            get
            {
                return this.name;
            }
            set
            {
                if ((this.name != value))
                {
                    this.name = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2, ElementName="Fields")]
        public Fields Fields
        {
            get
            {
                return this.fields;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("Fields");
                }
                if ((this.fields != value))
                {
                    this.fields = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=3, ElementName="RelateInfos")]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public System.Collections.Generic.List<RelateInfo> RelateInfos
        {
            get
            {
                return this.relateInfos;
            }
            set
            {
                if ((this.relateInfos != value))
                {
                    this.relateInfos = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=4, ElementName="SupportsTime")]
        public bool SupportsTime
        {
            get
            {
                return this.supportsTime;
            }
            set
            {
                if ((this.supportsTime != value))
                {
                    this.supportsTime = value;
                    this.supportsTimeSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SupportsTimeSpecified
        {
            get
            {
                return this.supportsTimeSpecified;
            }
            set
            {
                if ((this.supportsTimeSpecified != value))
                {
                    this.supportsTimeSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=5, ElementName="StartTimeFieldName")]
        public string StartTimeFieldName
        {
            get
            {
                return this.startTimeFieldName;
            }
            set
            {
                if ((this.startTimeFieldName != value))
                {
                    this.startTimeFieldName = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=6, ElementName="EndTimeFieldName")]
        public string EndTimeFieldName
        {
            get
            {
                return this.endTimeFieldName;
            }
            set
            {
                if ((this.endTimeFieldName != value))
                {
                    this.endTimeFieldName = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=7, ElementName="TimeValueFormat")]
        public string TimeValueFormat
        {
            get
            {
                return this.timeValueFormat;
            }
            set
            {
                if ((this.timeValueFormat != value))
                {
                    this.timeValueFormat = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=8, ElementName="TrackIDFieldName")]
        public string TrackIDFieldName
        {
            get
            {
                return this.trackIDFieldName;
            }
            set
            {
                if ((this.trackIDFieldName != value))
                {
                    this.trackIDFieldName = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=9, ElementName="TimeReference")]
        public TimeReference TimeReference
        {
            get
            {
                return this.timeReference;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("TimeReference");
                }
                if ((this.timeReference != value))
                {
                    this.timeReference = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=10, ElementName="FullTimeExtent")]
        public TimeExtent FullTimeExtent
        {
            get
            {
                return this.fullTimeExtent;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("FullTimeExtent");
                }
                if ((this.fullTimeExtent != value))
                {
                    this.fullTimeExtent = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=11, ElementName="TimeInterval")]
        [System.ComponentModel.DefaultValueAttribute(0)]
        public double TimeInterval
        {
            get
            {
                return this.timeInterval;
            }
            set
            {
                if ((this.timeInterval != value))
                {
                    this.timeInterval = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=12, ElementName="TimeIntervalUnits")]
        public esriTimeUnits TimeIntervalUnits
        {
            get
            {
                return this.timeIntervalUnits;
            }
            set
            {
                if ((this.timeIntervalUnits != value))
                {
                    this.timeIntervalUnits = value;
                    this.timeIntervalUnitsSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TimeIntervalUnitsSpecified
        {
            get
            {
                return this.timeIntervalUnitsSpecified;
            }
            set
            {
                if ((this.timeIntervalUnitsSpecified != value))
                {
                    this.timeIntervalUnitsSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=13, ElementName="HasAttachments")]
        public bool HasAttachments
        {
            get
            {
                return this.hasAttachments;
            }
            set
            {
                if ((this.hasAttachments != value))
                {
                    this.hasAttachments = value;
                    this.hasAttachmentsSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HasAttachmentsSpecified
        {
            get
            {
                return this.hasAttachmentsSpecified;
            }
            set
            {
                if ((this.hasAttachmentsSpecified != value))
                {
                    this.hasAttachmentsSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=14, ElementName="DisplayField")]
        public string DisplayField
        {
            get
            {
                return this.displayField;
            }
            set
            {
                if ((this.displayField != value))
                {
                    this.displayField = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=15, ElementName="Description")]
        public string Description
        {
            get
            {
                return this.description;
            }
            set
            {
                if ((this.description != value))
                {
                    this.description = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=16, ElementName="IDField")]
        public string IDField
        {
            get
            {
                return this.iDField;
            }
            set
            {
                if ((this.iDField != value))
                {
                    this.iDField = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=17, ElementName="HasSubtype")]
        public bool HasSubtype
        {
            get
            {
                return this.hasSubtype;
            }
            set
            {
                if ((this.hasSubtype != value))
                {
                    this.hasSubtype = value;
                    this.hasSubtypeSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HasSubtypeSpecified
        {
            get
            {
                return this.hasSubtypeSpecified;
            }
            set
            {
                if ((this.hasSubtypeSpecified != value))
                {
                    this.hasSubtypeSpecified = value;
                }
            }
        }
    }
    
    /// <summary>
    /// .
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="MapServerBookmark")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class MapServerBookmark : MapArea
    {
        
        /// <remarks/>
        private string name;
        
        public MapServerBookmark()
        {
        }
        
        public MapServerBookmark(string name)
        {
            this.name = name;
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0, ElementName="Name")]
        public string Name
        {
            get
            {
                return this.name;
            }
            set
            {
                if ((this.name != value))
                {
                    this.name = value;
                }
            }
        }
    }
    
    /// <summary>
    /// .
    /// </summary>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(MapServerBookmark))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(MapExtent))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(FeatureExtent))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CenterAndSize))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CenterAndScale))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="MapArea")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public abstract partial class MapArea
    {
        
        /// <remarks/>
        private Envelope extent;
        
        public MapArea()
        {
        }
        
        public MapArea(Envelope extent)
        {
            this.extent = extent;
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0, ElementName="Extent")]
        public Envelope Extent
        {
            get
            {
                return this.extent;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("Extent");
                }
                if ((this.extent != value))
                {
                    this.extent = value;
                }
            }
        }
    }
    
    /// <summary>
    /// .
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="MapExtent")]
    public partial class MapExtent : MapArea
    {
        
        public MapExtent()
        {
        }
    }
    
    /// <summary>
    /// .
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="FeatureExtent")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class FeatureExtent : MapArea
    {
        
        /// <remarks/>
        private double defaultScale;
        
        /// <remarks/>
        private double expandRatio;
        
        /// <remarks/>
        private System.Collections.Generic.List<int> featureIDs;
        
        /// <remarks/>
        private int layerID;
        
        /// <remarks/>
        private string mapName;
        
        public FeatureExtent()
        {
            this.ExpandRatio = 1;
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0, ElementName="DefaultScale")]
        public double DefaultScale
        {
            get
            {
                return this.defaultScale;
            }
            set
            {
                if ((this.defaultScale != value))
                {
                    this.defaultScale = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1, ElementName="ExpandRatio")]
        public double ExpandRatio
        {
            get
            {
                return this.expandRatio;
            }
            set
            {
                if ((this.expandRatio != value))
                {
                    this.expandRatio = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2, ElementName="FeatureIDs")]
        [System.Xml.Serialization.XmlArrayItemAttribute("Int", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public System.Collections.Generic.List<int> FeatureIDs
        {
            get
            {
                return this.featureIDs;
            }
            set
            {
                if ((this.featureIDs != value))
                {
                    this.featureIDs = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=3, ElementName="LayerID")]
        public int LayerID
        {
            get
            {
                return this.layerID;
            }
            set
            {
                if ((this.layerID != value))
                {
                    this.layerID = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=4, ElementName="MapName")]
        public string MapName
        {
            get
            {
                return this.mapName;
            }
            set
            {
                if ((this.mapName != value))
                {
                    this.mapName = value;
                }
            }
        }
    }
    
    /// <summary>
    /// .
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="CenterAndSize")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class CenterAndSize : MapArea
    {
        
        /// <remarks/>
        private Point center;
        
        /// <remarks/>
        private double height;
        
        /// <remarks/>
        private double width;
        
        /// <remarks/>
        private string units;
        
        public CenterAndSize()
        {
        }
        
        public CenterAndSize(Point center, double height, double width, string units)
        {
            this.center = center;
            this.height = height;
            this.width = width;
            this.units = units;
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0, ElementName="Center")]
        public Point Center
        {
            get
            {
                return this.center;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("Center");
                }
                if ((this.center != value))
                {
                    this.center = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1, ElementName="Height")]
        public double Height
        {
            get
            {
                return this.height;
            }
            set
            {
                if ((this.height != value))
                {
                    this.height = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2, ElementName="Width")]
        public double Width
        {
            get
            {
                return this.width;
            }
            set
            {
                if ((this.width != value))
                {
                    this.width = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=3, ElementName="Units")]
        public string Units
        {
            get
            {
                return this.units;
            }
            set
            {
                if ((this.units != value))
                {
                    this.units = value;
                }
            }
        }
    }
    
    /// <summary>
    /// .
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="CenterAndScale")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class CenterAndScale : MapArea
    {
        
        /// <remarks/>
        private Point center;
        
        /// <remarks/>
        private double scale;
        
        /// <remarks/>
        private double dPI;
        
        /// <remarks/>
        private bool dPISpecified;
        
        /// <remarks/>
        private int devBottom;
        
        /// <remarks/>
        private bool devBottomSpecified;
        
        /// <remarks/>
        private int devLeft;
        
        /// <remarks/>
        private bool devLeftSpecified;
        
        /// <remarks/>
        private int devTop;
        
        /// <remarks/>
        private bool devTopSpecified;
        
        /// <remarks/>
        private int devRight;
        
        /// <remarks/>
        private bool devRightSpecified;
        
        public CenterAndScale()
        {
        }
        
        public CenterAndScale(Point center, double scale, double dPI, bool dPISpecified, int devBottom, bool devBottomSpecified, int devLeft, bool devLeftSpecified, int devTop, bool devTopSpecified, int devRight, bool devRightSpecified)
        {
            this.center = center;
            this.scale = scale;
            this.dPI = dPI;
            this.dPISpecified = dPISpecified;
            this.devBottom = devBottom;
            this.devBottomSpecified = devBottomSpecified;
            this.devLeft = devLeft;
            this.devLeftSpecified = devLeftSpecified;
            this.devTop = devTop;
            this.devTopSpecified = devTopSpecified;
            this.devRight = devRight;
            this.devRightSpecified = devRightSpecified;
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0, ElementName="Center")]
        public Point Center
        {
            get
            {
                return this.center;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("Center");
                }
                if ((this.center != value))
                {
                    this.center = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1, ElementName="Scale")]
        public double Scale
        {
            get
            {
                return this.scale;
            }
            set
            {
                if ((this.scale != value))
                {
                    this.scale = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2, ElementName="DPI")]
        public double DPI
        {
            get
            {
                return this.dPI;
            }
            set
            {
                if ((this.dPI != value))
                {
                    this.dPI = value;
                    this.dPISpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DPISpecified
        {
            get
            {
                return this.dPISpecified;
            }
            set
            {
                if ((this.dPISpecified != value))
                {
                    this.dPISpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=3, ElementName="DevBottom")]
        public int DevBottom
        {
            get
            {
                return this.devBottom;
            }
            set
            {
                if ((this.devBottom != value))
                {
                    this.devBottom = value;
                    this.devBottomSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DevBottomSpecified
        {
            get
            {
                return this.devBottomSpecified;
            }
            set
            {
                if ((this.devBottomSpecified != value))
                {
                    this.devBottomSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=4, ElementName="DevLeft")]
        public int DevLeft
        {
            get
            {
                return this.devLeft;
            }
            set
            {
                if ((this.devLeft != value))
                {
                    this.devLeft = value;
                    this.devLeftSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DevLeftSpecified
        {
            get
            {
                return this.devLeftSpecified;
            }
            set
            {
                if ((this.devLeftSpecified != value))
                {
                    this.devLeftSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=5, ElementName="DevTop")]
        public int DevTop
        {
            get
            {
                return this.devTop;
            }
            set
            {
                if ((this.devTop != value))
                {
                    this.devTop = value;
                    this.devTopSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DevTopSpecified
        {
            get
            {
                return this.devTopSpecified;
            }
            set
            {
                if ((this.devTopSpecified != value))
                {
                    this.devTopSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=6, ElementName="DevRight")]
        public int DevRight
        {
            get
            {
                return this.devRight;
            }
            set
            {
                if ((this.devRight != value))
                {
                    this.devRight = value;
                    this.devRightSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DevRightSpecified
        {
            get
            {
                return this.devRightSpecified;
            }
            set
            {
                if ((this.devRightSpecified != value))
                {
                    this.devRightSpecified = value;
                }
            }
        }
    }
    
    /// <summary>
    /// .
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="MapDescription")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class MapDescription
    {
        
        /// <remarks/>
        private string name;
        
        /// <remarks/>
        private MapArea mapArea;
        
        /// <remarks/>
        private System.Collections.Generic.List<LayerDescription> layerDescriptions;
        
        /// <remarks/>
        private double rotation;
        
        /// <remarks/>
        private SpatialReference spatialReference;
        
        /// <remarks/>
        private Color transparentColor;
        
        /// <remarks/>
        private Color selectionColor;
        
        /// <remarks/>
        private FillSymbol backgroundSymbol;
        
        /// <remarks/>
        private System.Collections.Generic.List<GraphicElement> customGraphics;
        
        /// <remarks/>
        private GeoTransformation geoTransformation;
        
        /// <remarks/>
        private TimeReference timeReference;
        
        /// <remarks/>
        private TimeValue timeValue;
        
        public MapDescription()
        {
        }
        
        public MapDescription(string name, MapArea mapArea, System.Collections.Generic.List<LayerDescription> layerDescriptions, double rotation, SpatialReference spatialReference, Color transparentColor, Color selectionColor, FillSymbol backgroundSymbol, System.Collections.Generic.List<GraphicElement> customGraphics, GeoTransformation geoTransformation, TimeReference timeReference, TimeValue timeValue)
        {
            this.name = name;
            this.mapArea = mapArea;
            this.layerDescriptions = layerDescriptions;
            this.rotation = rotation;
            this.spatialReference = spatialReference;
            this.transparentColor = transparentColor;
            this.selectionColor = selectionColor;
            this.backgroundSymbol = backgroundSymbol;
            this.customGraphics = customGraphics;
            this.geoTransformation = geoTransformation;
            this.timeReference = timeReference;
            this.timeValue = timeValue;
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0, ElementName="Name")]
        public string Name
        {
            get
            {
                return this.name;
            }
            set
            {
                if ((this.name != value))
                {
                    this.name = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1, ElementName="MapArea")]
        public MapArea MapArea
        {
            get
            {
                return this.mapArea;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("MapArea");
                }
                if ((this.mapArea != value))
                {
                    this.mapArea = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2, ElementName="LayerDescriptions")]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public System.Collections.Generic.List<LayerDescription> LayerDescriptions
        {
            get
            {
                return this.layerDescriptions;
            }
            set
            {
                if ((this.layerDescriptions != value))
                {
                    this.layerDescriptions = value;
                }
            }
        }
        
        /// <summary>
        /// The angle/rotation of the map (data frame) in degrees, measured anti-clockwise.
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=3, ElementName="Rotation")]
        public double Rotation
        {
            get
            {
                return this.rotation;
            }
            set
            {
                if ((this.rotation != value))
                {
                    this.rotation = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=4, ElementName="SpatialReference")]
        public SpatialReference SpatialReference
        {
            get
            {
                return this.spatialReference;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("SpatialReference");
                }
                if ((this.spatialReference != value))
                {
                    this.spatialReference = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=5, ElementName="TransparentColor")]
        public Color TransparentColor
        {
            get
            {
                return this.transparentColor;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("TransparentColor");
                }
                if ((this.transparentColor != value))
                {
                    this.transparentColor = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=6, ElementName="SelectionColor")]
        public Color SelectionColor
        {
            get
            {
                return this.selectionColor;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("SelectionColor");
                }
                if ((this.selectionColor != value))
                {
                    this.selectionColor = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=7, ElementName="BackgroundSymbol")]
        public FillSymbol BackgroundSymbol
        {
            get
            {
                return this.backgroundSymbol;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("BackgroundSymbol");
                }
                if ((this.backgroundSymbol != value))
                {
                    this.backgroundSymbol = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=8, ElementName="CustomGraphics")]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public System.Collections.Generic.List<GraphicElement> CustomGraphics
        {
            get
            {
                return this.customGraphics;
            }
            set
            {
                if ((this.customGraphics != value))
                {
                    this.customGraphics = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=9, ElementName="GeoTransformation")]
        public GeoTransformation GeoTransformation
        {
            get
            {
                return this.geoTransformation;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("GeoTransformation");
                }
                if ((this.geoTransformation != value))
                {
                    this.geoTransformation = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=10, ElementName="TimeReference")]
        public TimeReference TimeReference
        {
            get
            {
                return this.timeReference;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("TimeReference");
                }
                if ((this.timeReference != value))
                {
                    this.timeReference = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=11, ElementName="TimeValue")]
        public TimeValue TimeValue
        {
            get
            {
                return this.timeValue;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("TimeValue");
                }
                if ((this.timeValue != value))
                {
                    this.timeValue = value;
                }
            }
        }
    }
    
    /// <summary>
    /// .
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="LayerDescription")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class LayerDescription : MapTableDescription
    {
        
        /// <remarks/>
        private int layerID;
        
        /// <remarks/>
        private bool visible;
        
        /// <remarks/>
        private bool showLabels;
        
        /// <remarks/>
        private bool scaleSymbols;
        
        /// <remarks/>
        private System.Collections.Generic.List<int> selectionFeatures;
        
        /// <remarks/>
        private Color selectionColor;
        
        /// <remarks/>
        private Symbol selectionSymbol;
        
        /// <remarks/>
        private bool setSelectionSymbol;
        
        /// <remarks/>
        private double selectionBufferDistance;
        
        /// <remarks/>
        private bool showSelectionBuffer;
        
        /// <remarks/>
        private string definitionExpression;
        
        /// <remarks/>
        private string sourceID;
        
        /// <remarks/>
        private FillSymbol selectionBufferSymbol;
        
        /// <remarks/>
        private LayerResultOptions layerResultOptions;
        
        /// <remarks/>
        private bool useTime;
        
        /// <remarks/>
        private bool useTimeSpecified;
        
        /// <remarks/>
        private bool timeDataCumulative;
        
        /// <remarks/>
        private bool timeDataCumulativeSpecified;
        
        /// <remarks/>
        private double timeOffset;
        
        /// <remarks/>
        private bool timeOffsetSpecified;
        
        /// <remarks/>
        private esriTimeUnits timeOffsetUnits;
        
        /// <remarks/>
        private bool timeOffsetUnitsSpecified;
        
        public LayerDescription()
        {
        }
        
        public LayerDescription(
                    int layerID, 
                    bool visible, 
                    bool showLabels, 
                    bool scaleSymbols, 
                    System.Collections.Generic.List<int> selectionFeatures, 
                    Color selectionColor, 
                    Symbol selectionSymbol, 
                    bool setSelectionSymbol, 
                    double selectionBufferDistance, 
                    bool showSelectionBuffer, 
                    string definitionExpression, 
                    string sourceID, 
                    FillSymbol selectionBufferSymbol, 
                    LayerResultOptions layerResultOptions, 
                    bool useTime, 
                    bool useTimeSpecified, 
                    bool timeDataCumulative, 
                    bool timeDataCumulativeSpecified, 
                    double timeOffset, 
                    bool timeOffsetSpecified, 
                    esriTimeUnits timeOffsetUnits, 
                    bool timeOffsetUnitsSpecified)
        {
            this.layerID = layerID;
            this.visible = visible;
            this.showLabels = showLabels;
            this.scaleSymbols = scaleSymbols;
            this.selectionFeatures = selectionFeatures;
            this.selectionColor = selectionColor;
            this.selectionSymbol = selectionSymbol;
            this.setSelectionSymbol = setSelectionSymbol;
            this.selectionBufferDistance = selectionBufferDistance;
            this.showSelectionBuffer = showSelectionBuffer;
            this.definitionExpression = definitionExpression;
            this.sourceID = sourceID;
            this.selectionBufferSymbol = selectionBufferSymbol;
            this.layerResultOptions = layerResultOptions;
            this.useTime = useTime;
            this.useTimeSpecified = useTimeSpecified;
            this.timeDataCumulative = timeDataCumulative;
            this.timeDataCumulativeSpecified = timeDataCumulativeSpecified;
            this.timeOffset = timeOffset;
            this.timeOffsetSpecified = timeOffsetSpecified;
            this.timeOffsetUnits = timeOffsetUnits;
            this.timeOffsetUnitsSpecified = timeOffsetUnitsSpecified;
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0, ElementName="LayerID")]
        public int LayerID
        {
            get
            {
                return this.layerID;
            }
            set
            {
                if ((this.layerID != value))
                {
                    this.layerID = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1, ElementName="Visible")]
        public bool Visible
        {
            get
            {
                return this.visible;
            }
            set
            {
                if ((this.visible != value))
                {
                    this.visible = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2, ElementName="ShowLabels")]
        public bool ShowLabels
        {
            get
            {
                return this.showLabels;
            }
            set
            {
                if ((this.showLabels != value))
                {
                    this.showLabels = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=3, ElementName="ScaleSymbols")]
        public bool ScaleSymbols
        {
            get
            {
                return this.scaleSymbols;
            }
            set
            {
                if ((this.scaleSymbols != value))
                {
                    this.scaleSymbols = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=4, ElementName="SelectionFeatures")]
        [System.Xml.Serialization.XmlArrayItemAttribute("Int", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public System.Collections.Generic.List<int> SelectionFeatures
        {
            get
            {
                return this.selectionFeatures;
            }
            set
            {
                if ((this.selectionFeatures != value))
                {
                    this.selectionFeatures = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=5, ElementName="SelectionColor")]
        public Color SelectionColor
        {
            get
            {
                return this.selectionColor;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("SelectionColor");
                }
                if ((this.selectionColor != value))
                {
                    this.selectionColor = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=6, ElementName="SelectionSymbol")]
        public Symbol SelectionSymbol
        {
            get
            {
                return this.selectionSymbol;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("SelectionSymbol");
                }
                if ((this.selectionSymbol != value))
                {
                    this.selectionSymbol = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=7, ElementName="SetSelectionSymbol")]
        public bool SetSelectionSymbol
        {
            get
            {
                return this.setSelectionSymbol;
            }
            set
            {
                if ((this.setSelectionSymbol != value))
                {
                    this.setSelectionSymbol = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=8, ElementName="SelectionBufferDistance")]
        public double SelectionBufferDistance
        {
            get
            {
                return this.selectionBufferDistance;
            }
            set
            {
                if ((this.selectionBufferDistance != value))
                {
                    this.selectionBufferDistance = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=9, ElementName="ShowSelectionBuffer")]
        public bool ShowSelectionBuffer
        {
            get
            {
                return this.showSelectionBuffer;
            }
            set
            {
                if ((this.showSelectionBuffer != value))
                {
                    this.showSelectionBuffer = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=10, ElementName="DefinitionExpression")]
        public string DefinitionExpression
        {
            get
            {
                return this.definitionExpression;
            }
            set
            {
                if ((this.definitionExpression != value))
                {
                    this.definitionExpression = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=11, ElementName="SourceID")]
        public string SourceID
        {
            get
            {
                return this.sourceID;
            }
            set
            {
                if ((this.sourceID != value))
                {
                    this.sourceID = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=12, ElementName="SelectionBufferSymbol")]
        public FillSymbol SelectionBufferSymbol
        {
            get
            {
                return this.selectionBufferSymbol;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("SelectionBufferSymbol");
                }
                if ((this.selectionBufferSymbol != value))
                {
                    this.selectionBufferSymbol = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=13, ElementName="LayerResultOptions")]
        public LayerResultOptions LayerResultOptions
        {
            get
            {
                return this.layerResultOptions;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("LayerResultOptions");
                }
                if ((this.layerResultOptions != value))
                {
                    this.layerResultOptions = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=14, ElementName="UseTime")]
        public bool UseTime
        {
            get
            {
                return this.useTime;
            }
            set
            {
                if ((this.useTime != value))
                {
                    this.useTime = value;
                    this.useTimeSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UseTimeSpecified
        {
            get
            {
                return this.useTimeSpecified;
            }
            set
            {
                if ((this.useTimeSpecified != value))
                {
                    this.useTimeSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=15, ElementName="TimeDataCumulative")]
        public bool TimeDataCumulative
        {
            get
            {
                return this.timeDataCumulative;
            }
            set
            {
                if ((this.timeDataCumulative != value))
                {
                    this.timeDataCumulative = value;
                    this.timeDataCumulativeSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TimeDataCumulativeSpecified
        {
            get
            {
                return this.timeDataCumulativeSpecified;
            }
            set
            {
                if ((this.timeDataCumulativeSpecified != value))
                {
                    this.timeDataCumulativeSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=16, ElementName="TimeOffset")]
        public double TimeOffset
        {
            get
            {
                return this.timeOffset;
            }
            set
            {
                if ((this.timeOffset != value))
                {
                    this.timeOffset = value;
                    this.timeOffsetSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TimeOffsetSpecified
        {
            get
            {
                return this.timeOffsetSpecified;
            }
            set
            {
                if ((this.timeOffsetSpecified != value))
                {
                    this.timeOffsetSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=17, ElementName="TimeOffsetUnits")]
        public esriTimeUnits TimeOffsetUnits
        {
            get
            {
                return this.timeOffsetUnits;
            }
            set
            {
                if ((this.timeOffsetUnits != value))
                {
                    this.timeOffsetUnits = value;
                    this.timeOffsetUnitsSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TimeOffsetUnitsSpecified
        {
            get
            {
                return this.timeOffsetUnitsSpecified;
            }
            set
            {
                if ((this.timeOffsetUnitsSpecified != value))
                {
                    this.timeOffsetUnitsSpecified = value;
                }
            }
        }
    }
    
    /// <summary>
    /// .
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="LayerResultOptions")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class LayerResultOptions
    {
        
        /// <remarks/>
        private bool includeGeometry;
        
        /// <remarks/>
        private GeometryResultOptions geometryResultOptions;
        
        /// <remarks/>
        private bool returnFieldNamesInResults;
        
        /// <remarks/>
        private bool formatValuesInResults;
        
        public LayerResultOptions()
        {
            this.IncludeGeometry = true;
            this.ReturnFieldNamesInResults = false;
            this.FormatValuesInResults = true;
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0, ElementName="IncludeGeometry")]
        [System.ComponentModel.DefaultValueAttribute(true)]
        public bool IncludeGeometry
        {
            get
            {
                return this.includeGeometry;
            }
            set
            {
                if ((this.includeGeometry != value))
                {
                    this.includeGeometry = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1, ElementName="GeometryResultOptions")]
        public GeometryResultOptions GeometryResultOptions
        {
            get
            {
                return this.geometryResultOptions;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("GeometryResultOptions");
                }
                if ((this.geometryResultOptions != value))
                {
                    this.geometryResultOptions = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2, ElementName="ReturnFieldNamesInResults")]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool ReturnFieldNamesInResults
        {
            get
            {
                return this.returnFieldNamesInResults;
            }
            set
            {
                if ((this.returnFieldNamesInResults != value))
                {
                    this.returnFieldNamesInResults = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=3, ElementName="FormatValuesInResults")]
        [System.ComponentModel.DefaultValueAttribute(true)]
        public bool FormatValuesInResults
        {
            get
            {
                return this.formatValuesInResults;
            }
            set
            {
                if ((this.formatValuesInResults != value))
                {
                    this.formatValuesInResults = value;
                }
            }
        }
    }
    
    /// <summary>
    /// .
    /// </summary>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(StandaloneTableDescription))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(LayerDescription))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="MapTableDescription")]
    public abstract partial class MapTableDescription
    {
        
        public MapTableDescription()
        {
        }
    }
    
    /// <summary>
    /// .
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="StandaloneTableDescription")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class StandaloneTableDescription : MapTableDescription
    {
        
        /// <remarks/>
        private int iD;
        
        /// <remarks/>
        private string definitionExpression;
        
        /// <remarks/>
        private string sourceID;
        
        /// <remarks/>
        private bool useTime;
        
        /// <remarks/>
        private bool useTimeSpecified;
        
        /// <remarks/>
        private bool timeDataCumulative;
        
        /// <remarks/>
        private bool timeDataCumulativeSpecified;
        
        /// <remarks/>
        private double timeOffset;
        
        /// <remarks/>
        private bool timeOffsetSpecified;
        
        /// <remarks/>
        private esriTimeUnits timeOffsetUnits;
        
        /// <remarks/>
        private bool timeOffsetUnitsSpecified;
        
        public StandaloneTableDescription()
        {
        }
        
        public StandaloneTableDescription(int iD, string definitionExpression, string sourceID, bool useTime, bool useTimeSpecified, bool timeDataCumulative, bool timeDataCumulativeSpecified, double timeOffset, bool timeOffsetSpecified, esriTimeUnits timeOffsetUnits, bool timeOffsetUnitsSpecified)
        {
            this.iD = iD;
            this.definitionExpression = definitionExpression;
            this.sourceID = sourceID;
            this.useTime = useTime;
            this.useTimeSpecified = useTimeSpecified;
            this.timeDataCumulative = timeDataCumulative;
            this.timeDataCumulativeSpecified = timeDataCumulativeSpecified;
            this.timeOffset = timeOffset;
            this.timeOffsetSpecified = timeOffsetSpecified;
            this.timeOffsetUnits = timeOffsetUnits;
            this.timeOffsetUnitsSpecified = timeOffsetUnitsSpecified;
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0, ElementName="ID")]
        public int ID
        {
            get
            {
                return this.iD;
            }
            set
            {
                if ((this.iD != value))
                {
                    this.iD = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1, ElementName="DefinitionExpression")]
        public string DefinitionExpression
        {
            get
            {
                return this.definitionExpression;
            }
            set
            {
                if ((this.definitionExpression != value))
                {
                    this.definitionExpression = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2, ElementName="SourceID")]
        public string SourceID
        {
            get
            {
                return this.sourceID;
            }
            set
            {
                if ((this.sourceID != value))
                {
                    this.sourceID = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=3, ElementName="UseTime")]
        public bool UseTime
        {
            get
            {
                return this.useTime;
            }
            set
            {
                if ((this.useTime != value))
                {
                    this.useTime = value;
                    this.useTimeSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UseTimeSpecified
        {
            get
            {
                return this.useTimeSpecified;
            }
            set
            {
                if ((this.useTimeSpecified != value))
                {
                    this.useTimeSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=4, ElementName="TimeDataCumulative")]
        public bool TimeDataCumulative
        {
            get
            {
                return this.timeDataCumulative;
            }
            set
            {
                if ((this.timeDataCumulative != value))
                {
                    this.timeDataCumulative = value;
                    this.timeDataCumulativeSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TimeDataCumulativeSpecified
        {
            get
            {
                return this.timeDataCumulativeSpecified;
            }
            set
            {
                if ((this.timeDataCumulativeSpecified != value))
                {
                    this.timeDataCumulativeSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=5, ElementName="TimeOffset")]
        public double TimeOffset
        {
            get
            {
                return this.timeOffset;
            }
            set
            {
                if ((this.timeOffset != value))
                {
                    this.timeOffset = value;
                    this.timeOffsetSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TimeOffsetSpecified
        {
            get
            {
                return this.timeOffsetSpecified;
            }
            set
            {
                if ((this.timeOffsetSpecified != value))
                {
                    this.timeOffsetSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=6, ElementName="TimeOffsetUnits")]
        public esriTimeUnits TimeOffsetUnits
        {
            get
            {
                return this.timeOffsetUnits;
            }
            set
            {
                if ((this.timeOffsetUnits != value))
                {
                    this.timeOffsetUnits = value;
                    this.timeOffsetUnitsSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TimeOffsetUnitsSpecified
        {
            get
            {
                return this.timeOffsetUnitsSpecified;
            }
            set
            {
                if ((this.timeOffsetUnitsSpecified != value))
                {
                    this.timeOffsetUnitsSpecified = value;
                }
            }
        }
    }
    
    /// <summary>
    /// Graphic Element Obejct.
    /// </summary>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TextElement))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RectangleElement))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(PolygonElement))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ParagraphTextElement))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(MarkerElement))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(EllipseElement))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CircleElement))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(LineElement))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="GraphicElement")]
    public abstract partial class GraphicElement : Element
    {
        
        public GraphicElement()
        {
        }
    }
    
    /// <summary>
    /// Element.
    /// </summary>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GroupElement))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GraphicElement))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TextElement))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RectangleElement))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(PolygonElement))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ParagraphTextElement))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(MarkerElement))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(EllipseElement))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CircleElement))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(LineElement))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="Element")]
    public abstract partial class Element
    {
        
        public Element()
        {
        }
    }
    
    /// <summary>
    /// .
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="GroupElement")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class GroupElement : Element
    {
        
        /// <remarks/>
        private string name;
        
        /// <remarks/>
        private string type;
        
        /// <remarks/>
        private bool autoTransform;
        
        /// <remarks/>
        private bool autoTransformSpecified;
        
        /// <remarks/>
        private double referenceScale;
        
        /// <remarks/>
        private bool referenceScaleSpecified;
        
        /// <remarks/>
        private System.Collections.Generic.List<GraphicElement> elements;
        
        /// <remarks/>
        private Geometry rectangle;
        
        /// <remarks/>
        private bool locked;
        
        /// <remarks/>
        private bool lockedSpecified;
        
        /// <remarks/>
        private bool fixedAspectRatio;
        
        /// <remarks/>
        private bool fixedAspectRatioSpecified;
        
        /// <remarks/>
        private Border border;
        
        /// <remarks/>
        private Background background;
        
        /// <remarks/>
        private bool draftMode;
        
        /// <remarks/>
        private bool draftModeSpecified;
        
        /// <remarks/>
        private Shadow shadow;
        
        public GroupElement()
        {
        }
        
        public GroupElement(
                    string name, 
                    string type, 
                    bool autoTransform, 
                    bool autoTransformSpecified, 
                    double referenceScale, 
                    bool referenceScaleSpecified, 
                    System.Collections.Generic.List<GraphicElement> elements, 
                    Geometry rectangle, 
                    bool locked, 
                    bool lockedSpecified, 
                    bool fixedAspectRatio, 
                    bool fixedAspectRatioSpecified, 
                    Border border, 
                    Background background, 
                    bool draftMode, 
                    bool draftModeSpecified, 
                    Shadow shadow)
        {
            this.name = name;
            this.type = type;
            this.autoTransform = autoTransform;
            this.autoTransformSpecified = autoTransformSpecified;
            this.referenceScale = referenceScale;
            this.referenceScaleSpecified = referenceScaleSpecified;
            this.elements = elements;
            this.rectangle = rectangle;
            this.locked = locked;
            this.lockedSpecified = lockedSpecified;
            this.fixedAspectRatio = fixedAspectRatio;
            this.fixedAspectRatioSpecified = fixedAspectRatioSpecified;
            this.border = border;
            this.background = background;
            this.draftMode = draftMode;
            this.draftModeSpecified = draftModeSpecified;
            this.shadow = shadow;
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0, ElementName="Name")]
        public string Name
        {
            get
            {
                return this.name;
            }
            set
            {
                if ((this.name != value))
                {
                    this.name = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1, ElementName="Type")]
        public string Type
        {
            get
            {
                return this.type;
            }
            set
            {
                if ((this.type != value))
                {
                    this.type = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2, ElementName="AutoTransform")]
        public bool AutoTransform
        {
            get
            {
                return this.autoTransform;
            }
            set
            {
                if ((this.autoTransform != value))
                {
                    this.autoTransform = value;
                    this.autoTransformSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AutoTransformSpecified
        {
            get
            {
                return this.autoTransformSpecified;
            }
            set
            {
                if ((this.autoTransformSpecified != value))
                {
                    this.autoTransformSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=3, ElementName="ReferenceScale")]
        public double ReferenceScale
        {
            get
            {
                return this.referenceScale;
            }
            set
            {
                if ((this.referenceScale != value))
                {
                    this.referenceScale = value;
                    this.referenceScaleSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ReferenceScaleSpecified
        {
            get
            {
                return this.referenceScaleSpecified;
            }
            set
            {
                if ((this.referenceScaleSpecified != value))
                {
                    this.referenceScaleSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=4, ElementName="Elements")]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public System.Collections.Generic.List<GraphicElement> Elements
        {
            get
            {
                return this.elements;
            }
            set
            {
                if ((this.elements != value))
                {
                    this.elements = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=5, ElementName="Rectangle")]
        public Geometry Rectangle
        {
            get
            {
                return this.rectangle;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("Rectangle");
                }
                if ((this.rectangle != value))
                {
                    this.rectangle = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=6, ElementName="Locked")]
        public bool Locked
        {
            get
            {
                return this.locked;
            }
            set
            {
                if ((this.locked != value))
                {
                    this.locked = value;
                    this.lockedSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LockedSpecified
        {
            get
            {
                return this.lockedSpecified;
            }
            set
            {
                if ((this.lockedSpecified != value))
                {
                    this.lockedSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=7, ElementName="FixedAspectRatio")]
        public bool FixedAspectRatio
        {
            get
            {
                return this.fixedAspectRatio;
            }
            set
            {
                if ((this.fixedAspectRatio != value))
                {
                    this.fixedAspectRatio = value;
                    this.fixedAspectRatioSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FixedAspectRatioSpecified
        {
            get
            {
                return this.fixedAspectRatioSpecified;
            }
            set
            {
                if ((this.fixedAspectRatioSpecified != value))
                {
                    this.fixedAspectRatioSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=8, ElementName="Border")]
        public Border Border
        {
            get
            {
                return this.border;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("Border");
                }
                if ((this.border != value))
                {
                    this.border = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=9, ElementName="Background")]
        public Background Background
        {
            get
            {
                return this.background;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("Background");
                }
                if ((this.background != value))
                {
                    this.background = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=10, ElementName="DraftMode")]
        public bool DraftMode
        {
            get
            {
                return this.draftMode;
            }
            set
            {
                if ((this.draftMode != value))
                {
                    this.draftMode = value;
                    this.draftModeSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DraftModeSpecified
        {
            get
            {
                return this.draftModeSpecified;
            }
            set
            {
                if ((this.draftModeSpecified != value))
                {
                    this.draftModeSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=11, ElementName="Shadow")]
        public Shadow Shadow
        {
            get
            {
                return this.shadow;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("Shadow");
                }
                if ((this.shadow != value))
                {
                    this.shadow = value;
                }
            }
        }
    }
    
    /// <summary>
    /// Frame border used by this element.
    /// </summary>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SymbolBorder))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="Border")]
    public abstract partial class Border
    {
        
        public Border()
        {
        }
    }
    
    /// <summary>
    /// .
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="SymbolBorder")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class SymbolBorder : Border
    {
        
        /// <remarks/>
        private double horizontalGap;
        
        /// <remarks/>
        private short cornerRounding;
        
        /// <remarks/>
        private double verticalGap;
        
        /// <remarks/>
        private LineSymbol symbol;
        
        public SymbolBorder()
        {
        }
        
        public SymbolBorder(double horizontalGap, short cornerRounding, double verticalGap, LineSymbol symbol)
        {
            this.horizontalGap = horizontalGap;
            this.cornerRounding = cornerRounding;
            this.verticalGap = verticalGap;
            this.symbol = symbol;
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0, ElementName="HorizontalGap")]
        public double HorizontalGap
        {
            get
            {
                return this.horizontalGap;
            }
            set
            {
                if ((this.horizontalGap != value))
                {
                    this.horizontalGap = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1, ElementName="CornerRounding")]
        public short CornerRounding
        {
            get
            {
                return this.cornerRounding;
            }
            set
            {
                if ((this.cornerRounding != value))
                {
                    this.cornerRounding = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2, ElementName="VerticalGap")]
        public double VerticalGap
        {
            get
            {
                return this.verticalGap;
            }
            set
            {
                if ((this.verticalGap != value))
                {
                    this.verticalGap = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=3, ElementName="Symbol")]
        public LineSymbol Symbol
        {
            get
            {
                return this.symbol;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("Symbol");
                }
                if ((this.symbol != value))
                {
                    this.symbol = value;
                }
            }
        }
    }
    
    /// <summary>
    /// Frame Background.
    /// </summary>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SymbolBackground))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="Background")]
    public abstract partial class Background
    {
        
        public Background()
        {
        }
    }
    
    /// <summary>
    /// .
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="SymbolBackground")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class SymbolBackground : Background
    {
        
        /// <remarks/>
        private double horizontalGap;
        
        /// <remarks/>
        private short cornerRounding;
        
        /// <remarks/>
        private double verticalGap;
        
        /// <remarks/>
        private FillSymbol symbol;
        
        public SymbolBackground()
        {
        }
        
        public SymbolBackground(double horizontalGap, short cornerRounding, double verticalGap, FillSymbol symbol)
        {
            this.horizontalGap = horizontalGap;
            this.cornerRounding = cornerRounding;
            this.verticalGap = verticalGap;
            this.symbol = symbol;
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0, ElementName="HorizontalGap")]
        public double HorizontalGap
        {
            get
            {
                return this.horizontalGap;
            }
            set
            {
                if ((this.horizontalGap != value))
                {
                    this.horizontalGap = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1, ElementName="CornerRounding")]
        public short CornerRounding
        {
            get
            {
                return this.cornerRounding;
            }
            set
            {
                if ((this.cornerRounding != value))
                {
                    this.cornerRounding = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2, ElementName="VerticalGap")]
        public double VerticalGap
        {
            get
            {
                return this.verticalGap;
            }
            set
            {
                if ((this.verticalGap != value))
                {
                    this.verticalGap = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=3, ElementName="Symbol")]
        public FillSymbol Symbol
        {
            get
            {
                return this.symbol;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("Symbol");
                }
                if ((this.symbol != value))
                {
                    this.symbol = value;
                }
            }
        }
    }
    
    /// <summary>
    /// Frame drop shadows.
    /// </summary>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SymbolShadow))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="Shadow")]
    public abstract partial class Shadow
    {
        
        public Shadow()
        {
        }
    }
    
    /// <summary>
    /// .
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="SymbolShadow")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class SymbolShadow : Shadow
    {
        
        /// <remarks/>
        private LineSymbol symbol;
        
        /// <remarks/>
        private short cornerRounding;
        
        /// <remarks/>
        private double horizontalOffset;
        
        /// <remarks/>
        private double verticalOffset;
        
        public SymbolShadow()
        {
        }
        
        public SymbolShadow(LineSymbol symbol, short cornerRounding, double horizontalOffset, double verticalOffset)
        {
            this.symbol = symbol;
            this.cornerRounding = cornerRounding;
            this.horizontalOffset = horizontalOffset;
            this.verticalOffset = verticalOffset;
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0, ElementName="Symbol")]
        public LineSymbol Symbol
        {
            get
            {
                return this.symbol;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("Symbol");
                }
                if ((this.symbol != value))
                {
                    this.symbol = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1, ElementName="CornerRounding")]
        public short CornerRounding
        {
            get
            {
                return this.cornerRounding;
            }
            set
            {
                if ((this.cornerRounding != value))
                {
                    this.cornerRounding = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2, ElementName="HorizontalOffset")]
        public double HorizontalOffset
        {
            get
            {
                return this.horizontalOffset;
            }
            set
            {
                if ((this.horizontalOffset != value))
                {
                    this.horizontalOffset = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=3, ElementName="VerticalOffset")]
        public double VerticalOffset
        {
            get
            {
                return this.verticalOffset;
            }
            set
            {
                if ((this.verticalOffset != value))
                {
                    this.verticalOffset = value;
                }
            }
        }
    }
    
    /// <summary>
    /// .
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="TextElement")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class TextElement : GraphicElement
    {
        
        /// <remarks/>
        private string name;
        
        /// <remarks/>
        private string type;
        
        /// <remarks/>
        private bool autoTransform;
        
        /// <remarks/>
        private bool autoTransformSpecified;
        
        /// <remarks/>
        private double referenceScale;
        
        /// <remarks/>
        private bool referenceScaleSpecified;
        
        /// <remarks/>
        private string text;
        
        /// <remarks/>
        private bool scale;
        
        /// <remarks/>
        private bool scaleSpecified;
        
        /// <remarks/>
        private Symbol symbol;
        
        /// <remarks/>
        private Geometry textGeometry;
        
        /// <remarks/>
        private bool locked;
        
        /// <remarks/>
        private bool lockedSpecified;
        
        public TextElement()
        {
        }
        
        public TextElement(string name, string type, bool autoTransform, bool autoTransformSpecified, double referenceScale, bool referenceScaleSpecified, string text, bool scale, bool scaleSpecified, Symbol symbol, Geometry textGeometry, bool locked, bool lockedSpecified)
        {
            this.name = name;
            this.type = type;
            this.autoTransform = autoTransform;
            this.autoTransformSpecified = autoTransformSpecified;
            this.referenceScale = referenceScale;
            this.referenceScaleSpecified = referenceScaleSpecified;
            this.text = text;
            this.scale = scale;
            this.scaleSpecified = scaleSpecified;
            this.symbol = symbol;
            this.textGeometry = textGeometry;
            this.locked = locked;
            this.lockedSpecified = lockedSpecified;
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0, ElementName="Name")]
        public string Name
        {
            get
            {
                return this.name;
            }
            set
            {
                if ((this.name != value))
                {
                    this.name = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1, ElementName="Type")]
        public string Type
        {
            get
            {
                return this.type;
            }
            set
            {
                if ((this.type != value))
                {
                    this.type = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2, ElementName="AutoTransform")]
        public bool AutoTransform
        {
            get
            {
                return this.autoTransform;
            }
            set
            {
                if ((this.autoTransform != value))
                {
                    this.autoTransform = value;
                    this.autoTransformSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AutoTransformSpecified
        {
            get
            {
                return this.autoTransformSpecified;
            }
            set
            {
                if ((this.autoTransformSpecified != value))
                {
                    this.autoTransformSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=3, ElementName="ReferenceScale")]
        public double ReferenceScale
        {
            get
            {
                return this.referenceScale;
            }
            set
            {
                if ((this.referenceScale != value))
                {
                    this.referenceScale = value;
                    this.referenceScaleSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ReferenceScaleSpecified
        {
            get
            {
                return this.referenceScaleSpecified;
            }
            set
            {
                if ((this.referenceScaleSpecified != value))
                {
                    this.referenceScaleSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=4, ElementName="Text")]
        public string Text
        {
            get
            {
                return this.text;
            }
            set
            {
                if ((this.text != value))
                {
                    this.text = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=5, ElementName="Scale")]
        public bool Scale
        {
            get
            {
                return this.scale;
            }
            set
            {
                if ((this.scale != value))
                {
                    this.scale = value;
                    this.scaleSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ScaleSpecified
        {
            get
            {
                return this.scaleSpecified;
            }
            set
            {
                if ((this.scaleSpecified != value))
                {
                    this.scaleSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=6, ElementName="Symbol")]
        public Symbol Symbol
        {
            get
            {
                return this.symbol;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("Symbol");
                }
                if ((this.symbol != value))
                {
                    this.symbol = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=7, ElementName="TextGeometry")]
        public Geometry TextGeometry
        {
            get
            {
                return this.textGeometry;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("TextGeometry");
                }
                if ((this.textGeometry != value))
                {
                    this.textGeometry = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=8, ElementName="Locked")]
        public bool Locked
        {
            get
            {
                return this.locked;
            }
            set
            {
                if ((this.locked != value))
                {
                    this.locked = value;
                    this.lockedSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LockedSpecified
        {
            get
            {
                return this.lockedSpecified;
            }
            set
            {
                if ((this.lockedSpecified != value))
                {
                    this.lockedSpecified = value;
                }
            }
        }
    }
    
    /// <summary>
    /// .
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="RectangleElement")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class RectangleElement : GraphicElement
    {
        
        /// <remarks/>
        private Geometry rectangle;
        
        /// <remarks/>
        private bool locked;
        
        /// <remarks/>
        private bool lockedSpecified;
        
        /// <remarks/>
        private bool fixedAspectRatio;
        
        /// <remarks/>
        private bool fixedAspectRatioSpecified;
        
        /// <remarks/>
        private string name;
        
        /// <remarks/>
        private string type;
        
        /// <remarks/>
        private bool autoTransform;
        
        /// <remarks/>
        private bool autoTransformSpecified;
        
        /// <remarks/>
        private double referenceScale;
        
        /// <remarks/>
        private bool referenceScaleSpecified;
        
        /// <remarks/>
        private Symbol symbol;
        
        public RectangleElement()
        {
        }
        
        public RectangleElement(Geometry rectangle, bool locked, bool lockedSpecified, bool fixedAspectRatio, bool fixedAspectRatioSpecified, string name, string type, bool autoTransform, bool autoTransformSpecified, double referenceScale, bool referenceScaleSpecified, Symbol symbol)
        {
            this.rectangle = rectangle;
            this.locked = locked;
            this.lockedSpecified = lockedSpecified;
            this.fixedAspectRatio = fixedAspectRatio;
            this.fixedAspectRatioSpecified = fixedAspectRatioSpecified;
            this.name = name;
            this.type = type;
            this.autoTransform = autoTransform;
            this.autoTransformSpecified = autoTransformSpecified;
            this.referenceScale = referenceScale;
            this.referenceScaleSpecified = referenceScaleSpecified;
            this.symbol = symbol;
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0, ElementName="Rectangle")]
        public Geometry Rectangle
        {
            get
            {
                return this.rectangle;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("Rectangle");
                }
                if ((this.rectangle != value))
                {
                    this.rectangle = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1, ElementName="Locked")]
        public bool Locked
        {
            get
            {
                return this.locked;
            }
            set
            {
                if ((this.locked != value))
                {
                    this.locked = value;
                    this.lockedSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LockedSpecified
        {
            get
            {
                return this.lockedSpecified;
            }
            set
            {
                if ((this.lockedSpecified != value))
                {
                    this.lockedSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2, ElementName="FixedAspectRatio")]
        public bool FixedAspectRatio
        {
            get
            {
                return this.fixedAspectRatio;
            }
            set
            {
                if ((this.fixedAspectRatio != value))
                {
                    this.fixedAspectRatio = value;
                    this.fixedAspectRatioSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FixedAspectRatioSpecified
        {
            get
            {
                return this.fixedAspectRatioSpecified;
            }
            set
            {
                if ((this.fixedAspectRatioSpecified != value))
                {
                    this.fixedAspectRatioSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=3, ElementName="Name")]
        public string Name
        {
            get
            {
                return this.name;
            }
            set
            {
                if ((this.name != value))
                {
                    this.name = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=4, ElementName="Type")]
        public string Type
        {
            get
            {
                return this.type;
            }
            set
            {
                if ((this.type != value))
                {
                    this.type = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=5, ElementName="AutoTransform")]
        public bool AutoTransform
        {
            get
            {
                return this.autoTransform;
            }
            set
            {
                if ((this.autoTransform != value))
                {
                    this.autoTransform = value;
                    this.autoTransformSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AutoTransformSpecified
        {
            get
            {
                return this.autoTransformSpecified;
            }
            set
            {
                if ((this.autoTransformSpecified != value))
                {
                    this.autoTransformSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=6, ElementName="ReferenceScale")]
        public double ReferenceScale
        {
            get
            {
                return this.referenceScale;
            }
            set
            {
                if ((this.referenceScale != value))
                {
                    this.referenceScale = value;
                    this.referenceScaleSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ReferenceScaleSpecified
        {
            get
            {
                return this.referenceScaleSpecified;
            }
            set
            {
                if ((this.referenceScaleSpecified != value))
                {
                    this.referenceScaleSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=7, ElementName="Symbol")]
        public Symbol Symbol
        {
            get
            {
                return this.symbol;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("Symbol");
                }
                if ((this.symbol != value))
                {
                    this.symbol = value;
                }
            }
        }
    }
    
    /// <summary>
    /// .
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="PolygonElement")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class PolygonElement : GraphicElement
    {
        
        /// <remarks/>
        private string name;
        
        /// <remarks/>
        private string type;
        
        /// <remarks/>
        private bool autoTransform;
        
        /// <remarks/>
        private bool autoTransformSpecified;
        
        /// <remarks/>
        private double referenceScale;
        
        /// <remarks/>
        private bool referenceScaleSpecified;
        
        /// <remarks/>
        private Symbol symbol;
        
        /// <remarks/>
        private Geometry polygon;
        
        /// <remarks/>
        private bool locked;
        
        /// <remarks/>
        private bool lockedSpecified;
        
        /// <remarks/>
        private bool fixedAspectRatio;
        
        /// <remarks/>
        private bool fixedAspectRatioSpecified;
        
        public PolygonElement()
        {
        }
        
        public PolygonElement(string name, string type, bool autoTransform, bool autoTransformSpecified, double referenceScale, bool referenceScaleSpecified, Symbol symbol, Geometry polygon, bool locked, bool lockedSpecified, bool fixedAspectRatio, bool fixedAspectRatioSpecified)
        {
            this.name = name;
            this.type = type;
            this.autoTransform = autoTransform;
            this.autoTransformSpecified = autoTransformSpecified;
            this.referenceScale = referenceScale;
            this.referenceScaleSpecified = referenceScaleSpecified;
            this.symbol = symbol;
            this.polygon = polygon;
            this.locked = locked;
            this.lockedSpecified = lockedSpecified;
            this.fixedAspectRatio = fixedAspectRatio;
            this.fixedAspectRatioSpecified = fixedAspectRatioSpecified;
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0, ElementName="Name")]
        public string Name
        {
            get
            {
                return this.name;
            }
            set
            {
                if ((this.name != value))
                {
                    this.name = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1, ElementName="Type")]
        public string Type
        {
            get
            {
                return this.type;
            }
            set
            {
                if ((this.type != value))
                {
                    this.type = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2, ElementName="AutoTransform")]
        public bool AutoTransform
        {
            get
            {
                return this.autoTransform;
            }
            set
            {
                if ((this.autoTransform != value))
                {
                    this.autoTransform = value;
                    this.autoTransformSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AutoTransformSpecified
        {
            get
            {
                return this.autoTransformSpecified;
            }
            set
            {
                if ((this.autoTransformSpecified != value))
                {
                    this.autoTransformSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=3, ElementName="ReferenceScale")]
        public double ReferenceScale
        {
            get
            {
                return this.referenceScale;
            }
            set
            {
                if ((this.referenceScale != value))
                {
                    this.referenceScale = value;
                    this.referenceScaleSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ReferenceScaleSpecified
        {
            get
            {
                return this.referenceScaleSpecified;
            }
            set
            {
                if ((this.referenceScaleSpecified != value))
                {
                    this.referenceScaleSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=4, ElementName="Symbol")]
        public Symbol Symbol
        {
            get
            {
                return this.symbol;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("Symbol");
                }
                if ((this.symbol != value))
                {
                    this.symbol = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=5, ElementName="Polygon")]
        public Geometry Polygon
        {
            get
            {
                return this.polygon;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("Polygon");
                }
                if ((this.polygon != value))
                {
                    this.polygon = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=6, ElementName="Locked")]
        public bool Locked
        {
            get
            {
                return this.locked;
            }
            set
            {
                if ((this.locked != value))
                {
                    this.locked = value;
                    this.lockedSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LockedSpecified
        {
            get
            {
                return this.lockedSpecified;
            }
            set
            {
                if ((this.lockedSpecified != value))
                {
                    this.lockedSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=7, ElementName="FixedAspectRatio")]
        public bool FixedAspectRatio
        {
            get
            {
                return this.fixedAspectRatio;
            }
            set
            {
                if ((this.fixedAspectRatio != value))
                {
                    this.fixedAspectRatio = value;
                    this.fixedAspectRatioSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FixedAspectRatioSpecified
        {
            get
            {
                return this.fixedAspectRatioSpecified;
            }
            set
            {
                if ((this.fixedAspectRatioSpecified != value))
                {
                    this.fixedAspectRatioSpecified = value;
                }
            }
        }
    }
    
    /// <summary>
    /// .
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="ParagraphTextElement")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class ParagraphTextElement : GraphicElement
    {
        
        /// <remarks/>
        private string name;
        
        /// <remarks/>
        private string type;
        
        /// <remarks/>
        private bool autoTransform;
        
        /// <remarks/>
        private bool autoTransformSpecified;
        
        /// <remarks/>
        private double referenceScale;
        
        /// <remarks/>
        private bool referenceScaleSpecified;
        
        /// <remarks/>
        private string text;
        
        /// <remarks/>
        private double scale;
        
        /// <remarks/>
        private bool scaleSpecified;
        
        /// <remarks/>
        private Symbol symbol;
        
        /// <remarks/>
        private Geometry textGeometry;
        
        /// <remarks/>
        private bool locked;
        
        /// <remarks/>
        private bool lockedSpecified;
        
        /// <remarks/>
        private Border frameBorder;
        
        /// <remarks/>
        private Background frameBackground;
        
        /// <remarks/>
        private Shadow frameShadow;
        
        /// <remarks/>
        private double columnGap;
        
        /// <remarks/>
        private bool columnGapSpecified;
        
        /// <remarks/>
        private int columnCount;
        
        /// <remarks/>
        private bool columnCountSpecified;
        
        /// <remarks/>
        private double margin;
        
        /// <remarks/>
        private bool marginSpecified;
        
        public ParagraphTextElement()
        {
        }
        
        public ParagraphTextElement(
                    string name, 
                    string type, 
                    bool autoTransform, 
                    bool autoTransformSpecified, 
                    double referenceScale, 
                    bool referenceScaleSpecified, 
                    string text, 
                    double scale, 
                    bool scaleSpecified, 
                    Symbol symbol, 
                    Geometry textGeometry, 
                    bool locked, 
                    bool lockedSpecified, 
                    Border frameBorder, 
                    Background frameBackground, 
                    Shadow frameShadow, 
                    double columnGap, 
                    bool columnGapSpecified, 
                    int columnCount, 
                    bool columnCountSpecified, 
                    double margin, 
                    bool marginSpecified)
        {
            this.name = name;
            this.type = type;
            this.autoTransform = autoTransform;
            this.autoTransformSpecified = autoTransformSpecified;
            this.referenceScale = referenceScale;
            this.referenceScaleSpecified = referenceScaleSpecified;
            this.text = text;
            this.scale = scale;
            this.scaleSpecified = scaleSpecified;
            this.symbol = symbol;
            this.textGeometry = textGeometry;
            this.locked = locked;
            this.lockedSpecified = lockedSpecified;
            this.frameBorder = frameBorder;
            this.frameBackground = frameBackground;
            this.frameShadow = frameShadow;
            this.columnGap = columnGap;
            this.columnGapSpecified = columnGapSpecified;
            this.columnCount = columnCount;
            this.columnCountSpecified = columnCountSpecified;
            this.margin = margin;
            this.marginSpecified = marginSpecified;
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0, ElementName="Name")]
        public string Name
        {
            get
            {
                return this.name;
            }
            set
            {
                if ((this.name != value))
                {
                    this.name = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1, ElementName="Type")]
        public string Type
        {
            get
            {
                return this.type;
            }
            set
            {
                if ((this.type != value))
                {
                    this.type = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2, ElementName="AutoTransform")]
        public bool AutoTransform
        {
            get
            {
                return this.autoTransform;
            }
            set
            {
                if ((this.autoTransform != value))
                {
                    this.autoTransform = value;
                    this.autoTransformSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AutoTransformSpecified
        {
            get
            {
                return this.autoTransformSpecified;
            }
            set
            {
                if ((this.autoTransformSpecified != value))
                {
                    this.autoTransformSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=3, ElementName="ReferenceScale")]
        public double ReferenceScale
        {
            get
            {
                return this.referenceScale;
            }
            set
            {
                if ((this.referenceScale != value))
                {
                    this.referenceScale = value;
                    this.referenceScaleSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ReferenceScaleSpecified
        {
            get
            {
                return this.referenceScaleSpecified;
            }
            set
            {
                if ((this.referenceScaleSpecified != value))
                {
                    this.referenceScaleSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=4, ElementName="Text")]
        public string Text
        {
            get
            {
                return this.text;
            }
            set
            {
                if ((this.text != value))
                {
                    this.text = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=5, ElementName="Scale")]
        public double Scale
        {
            get
            {
                return this.scale;
            }
            set
            {
                if ((this.scale != value))
                {
                    this.scale = value;
                    this.scaleSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ScaleSpecified
        {
            get
            {
                return this.scaleSpecified;
            }
            set
            {
                if ((this.scaleSpecified != value))
                {
                    this.scaleSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=6, ElementName="Symbol")]
        public Symbol Symbol
        {
            get
            {
                return this.symbol;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("Symbol");
                }
                if ((this.symbol != value))
                {
                    this.symbol = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=7, ElementName="TextGeometry")]
        public Geometry TextGeometry
        {
            get
            {
                return this.textGeometry;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("TextGeometry");
                }
                if ((this.textGeometry != value))
                {
                    this.textGeometry = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=8, ElementName="Locked")]
        public bool Locked
        {
            get
            {
                return this.locked;
            }
            set
            {
                if ((this.locked != value))
                {
                    this.locked = value;
                    this.lockedSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LockedSpecified
        {
            get
            {
                return this.lockedSpecified;
            }
            set
            {
                if ((this.lockedSpecified != value))
                {
                    this.lockedSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=9, ElementName="FrameBorder")]
        public Border FrameBorder
        {
            get
            {
                return this.frameBorder;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("FrameBorder");
                }
                if ((this.frameBorder != value))
                {
                    this.frameBorder = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=10, ElementName="FrameBackground")]
        public Background FrameBackground
        {
            get
            {
                return this.frameBackground;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("FrameBackground");
                }
                if ((this.frameBackground != value))
                {
                    this.frameBackground = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=11, ElementName="FrameShadow")]
        public Shadow FrameShadow
        {
            get
            {
                return this.frameShadow;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("FrameShadow");
                }
                if ((this.frameShadow != value))
                {
                    this.frameShadow = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=12, ElementName="ColumnGap")]
        public double ColumnGap
        {
            get
            {
                return this.columnGap;
            }
            set
            {
                if ((this.columnGap != value))
                {
                    this.columnGap = value;
                    this.columnGapSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ColumnGapSpecified
        {
            get
            {
                return this.columnGapSpecified;
            }
            set
            {
                if ((this.columnGapSpecified != value))
                {
                    this.columnGapSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=13, ElementName="ColumnCount")]
        public int ColumnCount
        {
            get
            {
                return this.columnCount;
            }
            set
            {
                if ((this.columnCount != value))
                {
                    this.columnCount = value;
                    this.columnCountSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ColumnCountSpecified
        {
            get
            {
                return this.columnCountSpecified;
            }
            set
            {
                if ((this.columnCountSpecified != value))
                {
                    this.columnCountSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=14, ElementName="Margin")]
        public double Margin
        {
            get
            {
                return this.margin;
            }
            set
            {
                if ((this.margin != value))
                {
                    this.margin = value;
                    this.marginSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MarginSpecified
        {
            get
            {
                return this.marginSpecified;
            }
            set
            {
                if ((this.marginSpecified != value))
                {
                    this.marginSpecified = value;
                }
            }
        }
    }
    
    /// <summary>
    /// .
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="MarkerElement")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class MarkerElement : GraphicElement
    {
        
        /// <remarks/>
        private string name;
        
        /// <remarks/>
        private string type;
        
        /// <remarks/>
        private bool autoTransform;
        
        /// <remarks/>
        private bool autoTransformSpecified;
        
        /// <remarks/>
        private double referenceScale;
        
        /// <remarks/>
        private bool referenceScaleSpecified;
        
        /// <remarks/>
        private Symbol symbol;
        
        /// <remarks/>
        private Point point;
        
        /// <remarks/>
        private bool locked;
        
        /// <remarks/>
        private bool lockedSpecified;
        
        public MarkerElement()
        {
        }
        
        public MarkerElement(string name, string type, bool autoTransform, bool autoTransformSpecified, double referenceScale, bool referenceScaleSpecified, Symbol symbol, Point point, bool locked, bool lockedSpecified)
        {
            this.name = name;
            this.type = type;
            this.autoTransform = autoTransform;
            this.autoTransformSpecified = autoTransformSpecified;
            this.referenceScale = referenceScale;
            this.referenceScaleSpecified = referenceScaleSpecified;
            this.symbol = symbol;
            this.point = point;
            this.locked = locked;
            this.lockedSpecified = lockedSpecified;
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0, ElementName="Name")]
        public string Name
        {
            get
            {
                return this.name;
            }
            set
            {
                if ((this.name != value))
                {
                    this.name = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1, ElementName="Type")]
        public string Type
        {
            get
            {
                return this.type;
            }
            set
            {
                if ((this.type != value))
                {
                    this.type = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2, ElementName="AutoTransform")]
        public bool AutoTransform
        {
            get
            {
                return this.autoTransform;
            }
            set
            {
                if ((this.autoTransform != value))
                {
                    this.autoTransform = value;
                    this.autoTransformSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AutoTransformSpecified
        {
            get
            {
                return this.autoTransformSpecified;
            }
            set
            {
                if ((this.autoTransformSpecified != value))
                {
                    this.autoTransformSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=3, ElementName="ReferenceScale")]
        public double ReferenceScale
        {
            get
            {
                return this.referenceScale;
            }
            set
            {
                if ((this.referenceScale != value))
                {
                    this.referenceScale = value;
                    this.referenceScaleSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ReferenceScaleSpecified
        {
            get
            {
                return this.referenceScaleSpecified;
            }
            set
            {
                if ((this.referenceScaleSpecified != value))
                {
                    this.referenceScaleSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=4, ElementName="Symbol")]
        public Symbol Symbol
        {
            get
            {
                return this.symbol;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("Symbol");
                }
                if ((this.symbol != value))
                {
                    this.symbol = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=5, ElementName="Point")]
        public Point Point
        {
            get
            {
                return this.point;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("Point");
                }
                if ((this.point != value))
                {
                    this.point = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=6, ElementName="Locked")]
        public bool Locked
        {
            get
            {
                return this.locked;
            }
            set
            {
                if ((this.locked != value))
                {
                    this.locked = value;
                    this.lockedSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LockedSpecified
        {
            get
            {
                return this.lockedSpecified;
            }
            set
            {
                if ((this.lockedSpecified != value))
                {
                    this.lockedSpecified = value;
                }
            }
        }
    }
    
    /// <summary>
    /// .
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="EllipseElement")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class EllipseElement : GraphicElement
    {
        
        /// <remarks/>
        private Geometry rectangle;
        
        /// <remarks/>
        private bool locked;
        
        /// <remarks/>
        private bool lockedSpecified;
        
        /// <remarks/>
        private bool fixedAspectRatio;
        
        /// <remarks/>
        private bool fixedAspectRatioSpecified;
        
        /// <remarks/>
        private string name;
        
        /// <remarks/>
        private string type;
        
        /// <remarks/>
        private bool autoTransform;
        
        /// <remarks/>
        private bool autoTransformSpecified;
        
        /// <remarks/>
        private double referenceScale;
        
        /// <remarks/>
        private bool referenceScaleSpecified;
        
        /// <remarks/>
        private Symbol symbol;
        
        public EllipseElement()
        {
        }
        
        public EllipseElement(Geometry rectangle, bool locked, bool lockedSpecified, bool fixedAspectRatio, bool fixedAspectRatioSpecified, string name, string type, bool autoTransform, bool autoTransformSpecified, double referenceScale, bool referenceScaleSpecified, Symbol symbol)
        {
            this.rectangle = rectangle;
            this.locked = locked;
            this.lockedSpecified = lockedSpecified;
            this.fixedAspectRatio = fixedAspectRatio;
            this.fixedAspectRatioSpecified = fixedAspectRatioSpecified;
            this.name = name;
            this.type = type;
            this.autoTransform = autoTransform;
            this.autoTransformSpecified = autoTransformSpecified;
            this.referenceScale = referenceScale;
            this.referenceScaleSpecified = referenceScaleSpecified;
            this.symbol = symbol;
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0, ElementName="Rectangle")]
        public Geometry Rectangle
        {
            get
            {
                return this.rectangle;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("Rectangle");
                }
                if ((this.rectangle != value))
                {
                    this.rectangle = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1, ElementName="Locked")]
        public bool Locked
        {
            get
            {
                return this.locked;
            }
            set
            {
                if ((this.locked != value))
                {
                    this.locked = value;
                    this.lockedSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LockedSpecified
        {
            get
            {
                return this.lockedSpecified;
            }
            set
            {
                if ((this.lockedSpecified != value))
                {
                    this.lockedSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2, ElementName="FixedAspectRatio")]
        public bool FixedAspectRatio
        {
            get
            {
                return this.fixedAspectRatio;
            }
            set
            {
                if ((this.fixedAspectRatio != value))
                {
                    this.fixedAspectRatio = value;
                    this.fixedAspectRatioSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FixedAspectRatioSpecified
        {
            get
            {
                return this.fixedAspectRatioSpecified;
            }
            set
            {
                if ((this.fixedAspectRatioSpecified != value))
                {
                    this.fixedAspectRatioSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=3, ElementName="Name")]
        public string Name
        {
            get
            {
                return this.name;
            }
            set
            {
                if ((this.name != value))
                {
                    this.name = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=4, ElementName="Type")]
        public string Type
        {
            get
            {
                return this.type;
            }
            set
            {
                if ((this.type != value))
                {
                    this.type = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=5, ElementName="AutoTransform")]
        public bool AutoTransform
        {
            get
            {
                return this.autoTransform;
            }
            set
            {
                if ((this.autoTransform != value))
                {
                    this.autoTransform = value;
                    this.autoTransformSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AutoTransformSpecified
        {
            get
            {
                return this.autoTransformSpecified;
            }
            set
            {
                if ((this.autoTransformSpecified != value))
                {
                    this.autoTransformSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=6, ElementName="ReferenceScale")]
        public double ReferenceScale
        {
            get
            {
                return this.referenceScale;
            }
            set
            {
                if ((this.referenceScale != value))
                {
                    this.referenceScale = value;
                    this.referenceScaleSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ReferenceScaleSpecified
        {
            get
            {
                return this.referenceScaleSpecified;
            }
            set
            {
                if ((this.referenceScaleSpecified != value))
                {
                    this.referenceScaleSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=7, ElementName="Symbol")]
        public Symbol Symbol
        {
            get
            {
                return this.symbol;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("Symbol");
                }
                if ((this.symbol != value))
                {
                    this.symbol = value;
                }
            }
        }
    }
    
    /// <summary>
    /// .
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="CircleElement")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class CircleElement : GraphicElement
    {
        
        /// <remarks/>
        private Geometry rectangle;
        
        /// <remarks/>
        private bool locked;
        
        /// <remarks/>
        private bool lockedSpecified;
        
        /// <remarks/>
        private bool fixedAspectRatio;
        
        /// <remarks/>
        private bool fixedAspectRatioSpecified;
        
        /// <remarks/>
        private string name;
        
        /// <remarks/>
        private string type;
        
        /// <remarks/>
        private bool autoTransform;
        
        /// <remarks/>
        private bool autoTransformSpecified;
        
        /// <remarks/>
        private double referenceScale;
        
        /// <remarks/>
        private bool referenceScaleSpecified;
        
        /// <remarks/>
        private Symbol symbol;
        
        public CircleElement()
        {
        }
        
        public CircleElement(Geometry rectangle, bool locked, bool lockedSpecified, bool fixedAspectRatio, bool fixedAspectRatioSpecified, string name, string type, bool autoTransform, bool autoTransformSpecified, double referenceScale, bool referenceScaleSpecified, Symbol symbol)
        {
            this.rectangle = rectangle;
            this.locked = locked;
            this.lockedSpecified = lockedSpecified;
            this.fixedAspectRatio = fixedAspectRatio;
            this.fixedAspectRatioSpecified = fixedAspectRatioSpecified;
            this.name = name;
            this.type = type;
            this.autoTransform = autoTransform;
            this.autoTransformSpecified = autoTransformSpecified;
            this.referenceScale = referenceScale;
            this.referenceScaleSpecified = referenceScaleSpecified;
            this.symbol = symbol;
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0, ElementName="Rectangle")]
        public Geometry Rectangle
        {
            get
            {
                return this.rectangle;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("Rectangle");
                }
                if ((this.rectangle != value))
                {
                    this.rectangle = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1, ElementName="Locked")]
        public bool Locked
        {
            get
            {
                return this.locked;
            }
            set
            {
                if ((this.locked != value))
                {
                    this.locked = value;
                    this.lockedSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LockedSpecified
        {
            get
            {
                return this.lockedSpecified;
            }
            set
            {
                if ((this.lockedSpecified != value))
                {
                    this.lockedSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2, ElementName="FixedAspectRatio")]
        public bool FixedAspectRatio
        {
            get
            {
                return this.fixedAspectRatio;
            }
            set
            {
                if ((this.fixedAspectRatio != value))
                {
                    this.fixedAspectRatio = value;
                    this.fixedAspectRatioSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FixedAspectRatioSpecified
        {
            get
            {
                return this.fixedAspectRatioSpecified;
            }
            set
            {
                if ((this.fixedAspectRatioSpecified != value))
                {
                    this.fixedAspectRatioSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=3, ElementName="Name")]
        public string Name
        {
            get
            {
                return this.name;
            }
            set
            {
                if ((this.name != value))
                {
                    this.name = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=4, ElementName="Type")]
        public string Type
        {
            get
            {
                return this.type;
            }
            set
            {
                if ((this.type != value))
                {
                    this.type = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=5, ElementName="AutoTransform")]
        public bool AutoTransform
        {
            get
            {
                return this.autoTransform;
            }
            set
            {
                if ((this.autoTransform != value))
                {
                    this.autoTransform = value;
                    this.autoTransformSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AutoTransformSpecified
        {
            get
            {
                return this.autoTransformSpecified;
            }
            set
            {
                if ((this.autoTransformSpecified != value))
                {
                    this.autoTransformSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=6, ElementName="ReferenceScale")]
        public double ReferenceScale
        {
            get
            {
                return this.referenceScale;
            }
            set
            {
                if ((this.referenceScale != value))
                {
                    this.referenceScale = value;
                    this.referenceScaleSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ReferenceScaleSpecified
        {
            get
            {
                return this.referenceScaleSpecified;
            }
            set
            {
                if ((this.referenceScaleSpecified != value))
                {
                    this.referenceScaleSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=7, ElementName="Symbol")]
        public Symbol Symbol
        {
            get
            {
                return this.symbol;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("Symbol");
                }
                if ((this.symbol != value))
                {
                    this.symbol = value;
                }
            }
        }
    }
    
    /// <summary>
    /// .
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="LineElement")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class LineElement : GraphicElement
    {
        
        /// <remarks/>
        private string name;
        
        /// <remarks/>
        private string type;
        
        /// <remarks/>
        private bool autoTransform;
        
        /// <remarks/>
        private bool autoTransformSpecified;
        
        /// <remarks/>
        private double referenceScale;
        
        /// <remarks/>
        private bool referenceScaleSpecified;
        
        /// <remarks/>
        private Symbol symbol;
        
        /// <remarks/>
        private Geometry line;
        
        /// <remarks/>
        private bool locked;
        
        /// <remarks/>
        private bool lockedSpecified;
        
        /// <remarks/>
        private bool fixedAspectRatio;
        
        /// <remarks/>
        private bool fixedAspectRatioSpecified;
        
        public LineElement()
        {
        }
        
        public LineElement(string name, string type, bool autoTransform, bool autoTransformSpecified, double referenceScale, bool referenceScaleSpecified, Symbol symbol, Geometry line, bool locked, bool lockedSpecified, bool fixedAspectRatio, bool fixedAspectRatioSpecified)
        {
            this.name = name;
            this.type = type;
            this.autoTransform = autoTransform;
            this.autoTransformSpecified = autoTransformSpecified;
            this.referenceScale = referenceScale;
            this.referenceScaleSpecified = referenceScaleSpecified;
            this.symbol = symbol;
            this.line = line;
            this.locked = locked;
            this.lockedSpecified = lockedSpecified;
            this.fixedAspectRatio = fixedAspectRatio;
            this.fixedAspectRatioSpecified = fixedAspectRatioSpecified;
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0, ElementName="Name")]
        public string Name
        {
            get
            {
                return this.name;
            }
            set
            {
                if ((this.name != value))
                {
                    this.name = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1, ElementName="Type")]
        public string Type
        {
            get
            {
                return this.type;
            }
            set
            {
                if ((this.type != value))
                {
                    this.type = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2, ElementName="AutoTransform")]
        public bool AutoTransform
        {
            get
            {
                return this.autoTransform;
            }
            set
            {
                if ((this.autoTransform != value))
                {
                    this.autoTransform = value;
                    this.autoTransformSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AutoTransformSpecified
        {
            get
            {
                return this.autoTransformSpecified;
            }
            set
            {
                if ((this.autoTransformSpecified != value))
                {
                    this.autoTransformSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=3, ElementName="ReferenceScale")]
        public double ReferenceScale
        {
            get
            {
                return this.referenceScale;
            }
            set
            {
                if ((this.referenceScale != value))
                {
                    this.referenceScale = value;
                    this.referenceScaleSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ReferenceScaleSpecified
        {
            get
            {
                return this.referenceScaleSpecified;
            }
            set
            {
                if ((this.referenceScaleSpecified != value))
                {
                    this.referenceScaleSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=4, ElementName="Symbol")]
        public Symbol Symbol
        {
            get
            {
                return this.symbol;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("Symbol");
                }
                if ((this.symbol != value))
                {
                    this.symbol = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=5, ElementName="Line")]
        public Geometry Line
        {
            get
            {
                return this.line;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("Line");
                }
                if ((this.line != value))
                {
                    this.line = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=6, ElementName="Locked")]
        public bool Locked
        {
            get
            {
                return this.locked;
            }
            set
            {
                if ((this.locked != value))
                {
                    this.locked = value;
                    this.lockedSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LockedSpecified
        {
            get
            {
                return this.lockedSpecified;
            }
            set
            {
                if ((this.lockedSpecified != value))
                {
                    this.lockedSpecified = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=7, ElementName="FixedAspectRatio")]
        public bool FixedAspectRatio
        {
            get
            {
                return this.fixedAspectRatio;
            }
            set
            {
                if ((this.fixedAspectRatio != value))
                {
                    this.fixedAspectRatio = value;
                    this.fixedAspectRatioSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FixedAspectRatioSpecified
        {
            get
            {
                return this.fixedAspectRatioSpecified;
            }
            set
            {
                if ((this.fixedAspectRatioSpecified != value))
                {
                    this.fixedAspectRatioSpecified = value;
                }
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="esriImageReturnType")]
    public enum esriImageReturnType
    {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriImageReturnURL")]
        esriImageReturnURL,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriImageReturnMimeData")]
        esriImageReturnMimeData,
    }
    
    /// <summary>
    /// .
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="MapImage")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class MapImage
    {
        
        /// <remarks/>
        private byte[] imageData;
        
        /// <remarks/>
        private string imageURL;
        
        /// <remarks/>
        private Envelope extent;
        
        /// <remarks/>
        private System.Collections.Generic.List<int> visibleLayerIDs;
        
        /// <remarks/>
        private double mapScale;
        
        /// <remarks/>
        private int imageHeight;
        
        /// <remarks/>
        private int imageWidth;
        
        /// <remarks/>
        private double imageDPI;
        
        /// <remarks/>
        private string imageType;
        
        public MapImage()
        {
        }
        
        public MapImage(byte[] imageData, string imageURL, Envelope extent, System.Collections.Generic.List<int> visibleLayerIDs, double mapScale, int imageHeight, int imageWidth, double imageDPI, string imageType)
        {
            this.imageData = imageData;
            this.imageURL = imageURL;
            this.extent = extent;
            this.visibleLayerIDs = visibleLayerIDs;
            this.mapScale = mapScale;
            this.imageHeight = imageHeight;
            this.imageWidth = imageWidth;
            this.imageDPI = imageDPI;
            this.imageType = imageType;
        }
        
        /// <summary>
        /// Binary data representing the generated image.
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary", Order=0, ElementName="ImageData")]
        public byte[] ImageData
        {
            get
            {
                return this.imageData;
            }
            set
            {
                if ((this.imageData != value))
                {
                    this.imageData = value;
                }
            }
        }
        
        /// <summary>
        /// The URL of the generated image.
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1, ElementName="ImageURL")]
        public string ImageURL
        {
            get
            {
                return this.imageURL;
            }
            set
            {
                if ((this.imageURL != value))
                {
                    this.imageURL = value;
                }
            }
        }
        
        /// <summary>
        /// The extent of the map frame on the page.
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2, ElementName="Extent")]
        public Envelope Extent
        {
            get
            {
                return this.extent;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("Extent");
                }
                if ((this.extent != value))
                {
                    this.extent = value;
                }
            }
        }
        
        /// <summary>
        /// Array of the visible layers drawn for the generated map scale.
        /// </summary>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=3, ElementName="VisibleLayerIDs")]
        [System.Xml.Serialization.XmlArrayItemAttribute("Int", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public System.Collections.Generic.List<int> VisibleLayerIDs
        {
            get
            {
                return this.visibleLayerIDs;
            }
            set
            {
                if ((this.visibleLayerIDs != value))
                {
                    this.visibleLayerIDs = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=4, ElementName="MapScale")]
        public double MapScale
        {
            get
            {
                return this.mapScale;
            }
            set
            {
                if ((this.mapScale != value))
                {
                    this.mapScale = value;
                }
            }
        }
        
        /// <summary>
        /// The height of the image in pixels.
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=5, ElementName="ImageHeight")]
        public int ImageHeight
        {
            get
            {
                return this.imageHeight;
            }
            set
            {
                if ((this.imageHeight != value))
                {
                    this.imageHeight = value;
                }
            }
        }
        
        /// <summary>
        /// The width of the image in pixels.
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=6, ElementName="ImageWidth")]
        public int ImageWidth
        {
            get
            {
                return this.imageWidth;
            }
            set
            {
                if ((this.imageWidth != value))
                {
                    this.imageWidth = value;
                }
            }
        }
        
        /// <summary>
        /// The device resolution of the image specified in the request (dots per inch).
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=7, ElementName="ImageDPI")]
        public double ImageDPI
        {
            get
            {
                return this.imageDPI;
            }
            set
            {
                if ((this.imageDPI != value))
                {
                    this.imageDPI = value;
                }
            }
        }
        
        /// <summary>
        /// The MIME type of the image data.
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=8, ElementName="ImageType")]
        public string ImageType
        {
            get
            {
                return this.imageType;
            }
            set
            {
                if ((this.imageType != value))
                {
                    this.imageType = value;
                }
            }
        }
    }
    
    /// <summary>
    /// .
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="ImageDisplay")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class ImageDisplay
    {
        
        /// <remarks/>
        private int imageHeight;
        
        /// <remarks/>
        private int imageWidth;
        
        /// <remarks/>
        private double imageDPI;
        
        /// <remarks/>
        private Color transparentColor;
        
        public ImageDisplay()
        {
        }
        
        public ImageDisplay(int imageHeight, int imageWidth, double imageDPI, Color transparentColor)
        {
            this.imageHeight = imageHeight;
            this.imageWidth = imageWidth;
            this.imageDPI = imageDPI;
            this.transparentColor = transparentColor;
        }
        
        /// <summary>
        /// The height of the image in pixels.
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0, ElementName="ImageHeight")]
        public int ImageHeight
        {
            get
            {
                return this.imageHeight;
            }
            set
            {
                if ((this.imageHeight != value))
                {
                    this.imageHeight = value;
                }
            }
        }
        
        /// <summary>
        /// The width of the image in pixels.
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1, ElementName="ImageWidth")]
        public int ImageWidth
        {
            get
            {
                return this.imageWidth;
            }
            set
            {
                if ((this.imageWidth != value))
                {
                    this.imageWidth = value;
                }
            }
        }
        
        /// <summary>
        /// The device resolution of the image (dots per inch).
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2, ElementName="ImageDPI")]
        public double ImageDPI
        {
            get
            {
                return this.imageDPI;
            }
            set
            {
                if ((this.imageDPI != value))
                {
                    this.imageDPI = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=3, ElementName="TransparentColor")]
        public Color TransparentColor
        {
            get
            {
                return this.transparentColor;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("TransparentColor");
                }
                if ((this.transparentColor != value))
                {
                    this.transparentColor = value;
                }
            }
        }
    }
    
    /// <summary>
    /// .
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="ImageType")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class ImageType
    {
        
        /// <remarks/>
        private esriImageFormat imageFormat;
        
        /// <remarks/>
        private esriImageReturnType imageReturnType;
        
        public ImageType()
        {
        }
        
        public ImageType(esriImageFormat imageFormat, esriImageReturnType imageReturnType)
        {
            this.imageFormat = imageFormat;
            this.imageReturnType = imageReturnType;
        }
        
        /// <summary>
        /// The image format.
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0, ElementName="ImageFormat")]
        public esriImageFormat ImageFormat
        {
            get
            {
                return this.imageFormat;
            }
            set
            {
                if ((this.imageFormat != value))
                {
                    this.imageFormat = value;
                }
            }
        }
        
        /// <summary>
        /// The return type.
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1, ElementName="ImageReturnType")]
        public esriImageReturnType ImageReturnType
        {
            get
            {
                return this.imageReturnType;
            }
            set
            {
                if ((this.imageReturnType != value))
                {
                    this.imageReturnType = value;
                }
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="esriImageFormat")]
    public enum esriImageFormat
    {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriImageNone")]
        esriImageNone,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriImageBMP")]
        esriImageBMP,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriImageJPG")]
        esriImageJPG,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriImageDIB")]
        esriImageDIB,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriImageTIFF")]
        esriImageTIFF,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriImagePNG")]
        esriImagePNG,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriImagePNG24")]
        esriImagePNG24,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriImageEMF")]
        esriImageEMF,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriImagePS")]
        esriImagePS,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriImagePDF")]
        esriImagePDF,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriImageAI")]
        esriImageAI,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriImageGIF")]
        esriImageGIF,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriImageSVG")]
        esriImageSVG,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriImagePNG32")]
        esriImagePNG32,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriImageJPGPNG")]
        esriImageJPGPNG,
    }
    
    /// <summary>
    /// .
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="ImageDescription")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class ImageDescription
    {
        
        /// <remarks/>
        private ImageType imageType;
        
        /// <remarks/>
        private ImageDisplay imageDisplay;
        
        public ImageDescription()
        {
        }
        
        public ImageDescription(ImageType imageType, ImageDisplay imageDisplay)
        {
            this.imageType = imageType;
            this.imageDisplay = imageDisplay;
        }
        
        /// <summary>
        /// The type of image to be generated.
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0, ElementName="ImageType")]
        public ImageType ImageType
        {
            get
            {
                return this.imageType;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("ImageType");
                }
                if ((this.imageType != value))
                {
                    this.imageType = value;
                }
            }
        }
        
        /// <summary>
        /// The display characteristics of the image to be generated.
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1, ElementName="ImageDisplay")]
        public ImageDisplay ImageDisplay
        {
            get
            {
                return this.imageDisplay;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("ImageDisplay");
                }
                if ((this.imageDisplay != value))
                {
                    this.imageDisplay = value;
                }
            }
        }
    }
    
    /// <summary>
    /// .
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="SubtypeInfo")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class SubtypeInfo
    {
        
        /// <remarks/>
        private int subtypeCode;
        
        /// <remarks/>
        private string subtypeName;
        
        /// <remarks/>
        private System.Collections.Generic.List<FieldDomainInfo> fieldDomainInfos;
        
        public SubtypeInfo()
        {
        }
        
        public SubtypeInfo(int subtypeCode, string subtypeName, System.Collections.Generic.List<FieldDomainInfo> fieldDomainInfos)
        {
            this.subtypeCode = subtypeCode;
            this.subtypeName = subtypeName;
            this.fieldDomainInfos = fieldDomainInfos;
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0, ElementName="SubtypeCode")]
        public int SubtypeCode
        {
            get
            {
                return this.subtypeCode;
            }
            set
            {
                if ((this.subtypeCode != value))
                {
                    this.subtypeCode = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1, ElementName="SubtypeName")]
        public string SubtypeName
        {
            get
            {
                return this.subtypeName;
            }
            set
            {
                if ((this.subtypeName != value))
                {
                    this.subtypeName = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2, ElementName="FieldDomainInfos")]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public System.Collections.Generic.List<FieldDomainInfo> FieldDomainInfos
        {
            get
            {
                return this.fieldDomainInfos;
            }
            set
            {
                if ((this.fieldDomainInfos != value))
                {
                    this.fieldDomainInfos = value;
                }
            }
        }
    }
    
    /// <summary>
    /// .
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="MapTableSubtypeInfo")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class MapTableSubtypeInfo
    {
        
        /// <remarks/>
        private int tableID;
        
        /// <remarks/>
        private string subtypeFieldName;
        
        /// <remarks/>
        private System.Collections.Generic.List<SubtypeInfo> subtypeInfos;
        
        public MapTableSubtypeInfo()
        {
        }
        
        public MapTableSubtypeInfo(int tableID, string subtypeFieldName, System.Collections.Generic.List<SubtypeInfo> subtypeInfos)
        {
            this.tableID = tableID;
            this.subtypeFieldName = subtypeFieldName;
            this.subtypeInfos = subtypeInfos;
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0, ElementName="TableID")]
        public int TableID
        {
            get
            {
                return this.tableID;
            }
            set
            {
                if ((this.tableID != value))
                {
                    this.tableID = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1, ElementName="SubtypeFieldName")]
        public string SubtypeFieldName
        {
            get
            {
                return this.subtypeFieldName;
            }
            set
            {
                if ((this.subtypeFieldName != value))
                {
                    this.subtypeFieldName = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2, ElementName="SubtypeInfos")]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public System.Collections.Generic.List<SubtypeInfo> SubtypeInfos
        {
            get
            {
                return this.subtypeInfos;
            }
            set
            {
                if ((this.subtypeInfos != value))
                {
                    this.subtypeInfos = value;
                }
            }
        }
    }
    
    /// <summary>
    /// .
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="MapServerLegendInfo")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class MapServerLegendInfo
    {
        
        /// <remarks/>
        private int layerID;
        
        /// <remarks/>
        private string name;
        
        /// <remarks/>
        private System.Collections.Generic.List<MapServerLegendGroup> legendGroups;
        
        public MapServerLegendInfo()
        {
        }
        
        public MapServerLegendInfo(int layerID, string name, System.Collections.Generic.List<MapServerLegendGroup> legendGroups)
        {
            this.layerID = layerID;
            this.name = name;
            this.legendGroups = legendGroups;
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0, ElementName="LayerID")]
        public int LayerID
        {
            get
            {
                return this.layerID;
            }
            set
            {
                if ((this.layerID != value))
                {
                    this.layerID = value;
                }
            }
        }
        
        /// <summary>
        /// The layer name.
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1, ElementName="Name")]
        public string Name
        {
            get
            {
                return this.name;
            }
            set
            {
                if ((this.name != value))
                {
                    this.name = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2, ElementName="LegendGroups")]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public System.Collections.Generic.List<MapServerLegendGroup> LegendGroups
        {
            get
            {
                return this.legendGroups;
            }
            set
            {
                if ((this.legendGroups != value))
                {
                    this.legendGroups = value;
                }
            }
        }
    }
    
    /// <summary>
    /// .
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="MapServerLegendGroup")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class MapServerLegendGroup
    {
        
        /// <remarks/>
        private string heading;
        
        /// <remarks/>
        private System.Collections.Generic.List<MapServerLegendClass> legendClasses;
        
        public MapServerLegendGroup()
        {
        }
        
        public MapServerLegendGroup(string heading, System.Collections.Generic.List<MapServerLegendClass> legendClasses)
        {
            this.heading = heading;
            this.legendClasses = legendClasses;
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0, ElementName="Heading")]
        public string Heading
        {
            get
            {
                return this.heading;
            }
            set
            {
                if ((this.heading != value))
                {
                    this.heading = value;
                }
            }
        }
        
        /// <summary>
        /// A collection of legend class objects.
        /// </summary>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1, ElementName="LegendClasses")]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public System.Collections.Generic.List<MapServerLegendClass> LegendClasses
        {
            get
            {
                return this.legendClasses;
            }
            set
            {
                if ((this.legendClasses != value))
                {
                    this.legendClasses = value;
                }
            }
        }
    }
    
    /// <summary>
    /// .
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="MapServerLegendClass")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class MapServerLegendClass
    {
        
        /// <remarks/>
        private string label;
        
        /// <remarks/>
        private string description;
        
        /// <remarks/>
        private ImageResult symbolImage;
        
        /// <remarks/>
        private Color transparentColor;
        
        public MapServerLegendClass()
        {
        }
        
        public MapServerLegendClass(string label, string description, ImageResult symbolImage, Color transparentColor)
        {
            this.label = label;
            this.description = description;
            this.symbolImage = symbolImage;
            this.transparentColor = transparentColor;
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0, ElementName="Label")]
        public string Label
        {
            get
            {
                return this.label;
            }
            set
            {
                if ((this.label != value))
                {
                    this.label = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1, ElementName="Description")]
        public string Description
        {
            get
            {
                return this.description;
            }
            set
            {
                if ((this.description != value))
                {
                    this.description = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2, ElementName="SymbolImage")]
        public ImageResult SymbolImage
        {
            get
            {
                return this.symbolImage;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("SymbolImage");
                }
                if ((this.symbolImage != value))
                {
                    this.symbolImage = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=3, ElementName="TransparentColor")]
        public Color TransparentColor
        {
            get
            {
                return this.transparentColor;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("TransparentColor");
                }
                if ((this.transparentColor != value))
                {
                    this.transparentColor = value;
                }
            }
        }
    }
    
    /// <summary>
    /// .
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="ImageResult")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class ImageResult
    {
        
        /// <remarks/>
        private byte[] imageData;
        
        /// <remarks/>
        private string imageURL;
        
        /// <remarks/>
        private int imageHeight;
        
        /// <remarks/>
        private int imageWidth;
        
        /// <remarks/>
        private double imageDPI;
        
        /// <remarks/>
        private string imageType;
        
        public ImageResult()
        {
        }
        
        public ImageResult(byte[] imageData, string imageURL, int imageHeight, int imageWidth, double imageDPI, string imageType)
        {
            this.imageData = imageData;
            this.imageURL = imageURL;
            this.imageHeight = imageHeight;
            this.imageWidth = imageWidth;
            this.imageDPI = imageDPI;
            this.imageType = imageType;
        }
        
        /// <summary>
        /// Binary data representing the generated image.
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary", Order=0, ElementName="ImageData")]
        public byte[] ImageData
        {
            get
            {
                return this.imageData;
            }
            set
            {
                if ((this.imageData != value))
                {
                    this.imageData = value;
                }
            }
        }
        
        /// <summary>
        /// The URL of the generated image.
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1, ElementName="ImageURL")]
        public string ImageURL
        {
            get
            {
                return this.imageURL;
            }
            set
            {
                if ((this.imageURL != value))
                {
                    this.imageURL = value;
                }
            }
        }
        
        /// <summary>
        /// The height of the image in pixels.
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2, ElementName="ImageHeight")]
        public int ImageHeight
        {
            get
            {
                return this.imageHeight;
            }
            set
            {
                if ((this.imageHeight != value))
                {
                    this.imageHeight = value;
                }
            }
        }
        
        /// <summary>
        /// The width of the image in pixels.
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=3, ElementName="ImageWidth")]
        public int ImageWidth
        {
            get
            {
                return this.imageWidth;
            }
            set
            {
                if ((this.imageWidth != value))
                {
                    this.imageWidth = value;
                }
            }
        }
        
        /// <summary>
        /// The device resolution of the image specified in the request (dots per inch).
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=4, ElementName="ImageDPI")]
        public double ImageDPI
        {
            get
            {
                return this.imageDPI;
            }
            set
            {
                if ((this.imageDPI != value))
                {
                    this.imageDPI = value;
                }
            }
        }
        
        /// <summary>
        /// The MIME type of the image data.
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=5, ElementName="ImageType")]
        public string ImageType
        {
            get
            {
                return this.imageType;
            }
            set
            {
                if ((this.imageType != value))
                {
                    this.imageType = value;
                }
            }
        }
    }
    
    /// <summary>
    /// .
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="MapServerRow")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class MapServerRow
    {
        
        /// <remarks/>
        private string name;
        
        /// <remarks/>
        private PropertySet properties;
        
        /// <remarks/>
        private System.Collections.Generic.List<MapServerRelationship> relationships;
        
        /// <remarks/>
        private int featureID;
        
        /// <remarks/>
        private bool featureIDSpecified;
        
        public MapServerRow()
        {
        }
        
        public MapServerRow(string name, PropertySet properties, System.Collections.Generic.List<MapServerRelationship> relationships, int featureID, bool featureIDSpecified)
        {
            this.name = name;
            this.properties = properties;
            this.relationships = relationships;
            this.featureID = featureID;
            this.featureIDSpecified = featureIDSpecified;
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0, ElementName="Name")]
        public string Name
        {
            get
            {
                return this.name;
            }
            set
            {
                if ((this.name != value))
                {
                    this.name = value;
                }
            }
        }
        
        /// <summary>
        /// A set of name-value pairs for the row's field names and values.
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1, ElementName="Properties")]
        public PropertySet Properties
        {
            get
            {
                return this.properties;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("Properties");
                }
                if ((this.properties != value))
                {
                    this.properties = value;
                }
            }
        }
        
        /// <summary>
        /// The related rows (relationships).
        /// </summary>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2, ElementName="Relationships")]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public System.Collections.Generic.List<MapServerRelationship> Relationships
        {
            get
            {
                return this.relationships;
            }
            set
            {
                if ((this.relationships != value))
                {
                    this.relationships = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=3, ElementName="FeatureID")]
        public int FeatureID
        {
            get
            {
                return this.featureID;
            }
            set
            {
                if ((this.featureID != value))
                {
                    this.featureID = value;
                    this.featureIDSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FeatureIDSpecified
        {
            get
            {
                return this.featureIDSpecified;
            }
            set
            {
                if ((this.featureIDSpecified != value))
                {
                    this.featureIDSpecified = value;
                }
            }
        }
    }
    
    /// <summary>
    /// .
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="MapServerRelationship")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class MapServerRelationship
    {
        
        /// <remarks/>
        private string name;
        
        /// <remarks/>
        private System.Collections.Generic.List<MapServerRow> rows;
        
        public MapServerRelationship()
        {
        }
        
        public MapServerRelationship(string name, System.Collections.Generic.List<MapServerRow> rows)
        {
            this.name = name;
            this.rows = rows;
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0, ElementName="Name")]
        public string Name
        {
            get
            {
                return this.name;
            }
            set
            {
                if ((this.name != value))
                {
                    this.name = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1, ElementName="Rows")]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public System.Collections.Generic.List<MapServerRow> Rows
        {
            get
            {
                return this.rows;
            }
            set
            {
                if ((this.rows != value))
                {
                    this.rows = value;
                }
            }
        }
    }
    
    /// <summary>
    /// .
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="MapServerIdentifyResult")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class MapServerIdentifyResult
    {
        
        /// <remarks/>
        private int layerID;
        
        /// <remarks/>
        private string name;
        
        /// <remarks/>
        private PropertySet properties;
        
        /// <remarks/>
        private Geometry shape;
        
        /// <remarks/>
        private System.Collections.Generic.List<MapServerRelationship> relationships;
        
        /// <remarks/>
        private string hTMLPopup;
        
        /// <remarks/>
        private int featureID;
        
        /// <remarks/>
        private bool featureIDSpecified;
        
        public MapServerIdentifyResult()
        {
        }
        
        public MapServerIdentifyResult(int layerID, string name, PropertySet properties, Geometry shape, System.Collections.Generic.List<MapServerRelationship> relationships, string hTMLPopup, int featureID, bool featureIDSpecified)
        {
            this.layerID = layerID;
            this.name = name;
            this.properties = properties;
            this.shape = shape;
            this.relationships = relationships;
            this.hTMLPopup = hTMLPopup;
            this.featureID = featureID;
            this.featureIDSpecified = featureIDSpecified;
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0, ElementName="LayerID")]
        public int LayerID
        {
            get
            {
                return this.layerID;
            }
            set
            {
                if ((this.layerID != value))
                {
                    this.layerID = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1, ElementName="Name")]
        public string Name
        {
            get
            {
                return this.name;
            }
            set
            {
                if ((this.name != value))
                {
                    this.name = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2, ElementName="Properties")]
        public PropertySet Properties
        {
            get
            {
                return this.properties;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("Properties");
                }
                if ((this.properties != value))
                {
                    this.properties = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=3, ElementName="Shape")]
        public Geometry Shape
        {
            get
            {
                return this.shape;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("Shape");
                }
                if ((this.shape != value))
                {
                    this.shape = value;
                }
            }
        }
        
        /// <summary>
        /// The related rows (relationships) of the identified object.
        /// </summary>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=4, ElementName="Relationships")]
        [System.Xml.Serialization.XmlArrayItemAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)]
        public System.Collections.Generic.List<MapServerRelationship> Relationships
        {
            get
            {
                return this.relationships;
            }
            set
            {
                if ((this.relationships != value))
                {
                    this.relationships = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=5, ElementName="HTMLPopup")]
        public string HTMLPopup
        {
            get
            {
                return this.hTMLPopup;
            }
            set
            {
                if ((this.hTMLPopup != value))
                {
                    this.hTMLPopup = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=6, ElementName="FeatureID")]
        public int FeatureID
        {
            get
            {
                return this.featureID;
            }
            set
            {
                if ((this.featureID != value))
                {
                    this.featureID = value;
                    this.featureIDSpecified = true;
                }
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FeatureIDSpecified
        {
            get
            {
                return this.featureIDSpecified;
            }
            set
            {
                if ((this.featureIDSpecified != value))
                {
                    this.featureIDSpecified = value;
                }
            }
        }
    }
    
    /// <summary>
    /// .
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="MapServerHyperlink")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class MapServerHyperlink
    {
        
        /// <remarks/>
        private Geometry location;
        
        /// <remarks/>
        private string uRL;
        
        public MapServerHyperlink()
        {
        }
        
        public MapServerHyperlink(Geometry location, string uRL)
        {
            this.location = location;
            this.uRL = uRL;
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0, ElementName="Location")]
        public Geometry Location
        {
            get
            {
                return this.location;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("Location");
                }
                if ((this.location != value))
                {
                    this.location = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1, ElementName="URL")]
        public string URL
        {
            get
            {
                return this.uRL;
            }
            set
            {
                if ((this.uRL != value))
                {
                    this.uRL = value;
                }
            }
        }
    }
    
    /// <summary>
    /// .
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="MapServerFindResult")]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.ExpandableObjectConverter))]
    public partial class MapServerFindResult
    {
        
        /// <remarks/>
        private string value;
        
        /// <remarks/>
        private int layerID;
        
        /// <remarks/>
        private int featureID;
        
        /// <remarks/>
        private string fieldName;
        
        /// <remarks/>
        private Geometry shape;
        
        /// <remarks/>
        private PropertySet properties;
        
        public MapServerFindResult()
        {
        }
        
        public MapServerFindResult(string value, int layerID, int featureID, string fieldName, Geometry shape, PropertySet properties)
        {
            this.value = value;
            this.layerID = layerID;
            this.featureID = featureID;
            this.fieldName = fieldName;
            this.shape = shape;
            this.properties = properties;
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0, ElementName="Value")]
        public string Value
        {
            get
            {
                return this.value;
            }
            set
            {
                if ((this.value != value))
                {
                    this.value = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1, ElementName="LayerID")]
        public int LayerID
        {
            get
            {
                return this.layerID;
            }
            set
            {
                if ((this.layerID != value))
                {
                    this.layerID = value;
                }
            }
        }
        
        /// <summary>
        /// The ID of the found feature.
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2, ElementName="FeatureID")]
        public int FeatureID
        {
            get
            {
                return this.featureID;
            }
            set
            {
                if ((this.featureID != value))
                {
                    this.featureID = value;
                }
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=3, ElementName="FieldName")]
        public string FieldName
        {
            get
            {
                return this.fieldName;
            }
            set
            {
                if ((this.fieldName != value))
                {
                    this.fieldName = value;
                }
            }
        }
        
        /// <summary>
        /// The geometry of the found feature.
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=4, ElementName="Shape")]
        public Geometry Shape
        {
            get
            {
                return this.shape;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("Shape");
                }
                if ((this.shape != value))
                {
                    this.shape = value;
                }
            }
        }
        
        /// <summary>
        /// A set of name-value pairs for the found features's field names and values.
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=5, ElementName="Properties")]
        public PropertySet Properties
        {
            get
            {
                return this.properties;
            }
            set
            {
                if ((value == null))
                {
                    throw new System.ArgumentNullException("Properties");
                }
                if ((this.properties != value))
                {
                    this.properties = value;
                }
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="esriIdentifyOption")]
    public enum esriIdentifyOption
    {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriIdentifyTopmost")]
        esriIdentifyTopmost,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriIdentifyAllLayers")]
        esriIdentifyAllLayers,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriIdentifyVisibleLayers")]
        esriIdentifyVisibleLayers,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriIdentifyTopOneWithHTMLPopup")]
        esriIdentifyTopOneWithHTMLPopup,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriIdentifyVisibleWithHTMLPopup")]
        esriIdentifyVisibleWithHTMLPopup,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.esri.com/schemas/ArcGIS/10.0", TypeName="esriFindOption")]
    public enum esriFindOption
    {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriFindVisibleLayers")]
        esriFindVisibleLayers,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute(Name="esriFindAllLayers")]
        esriFindAllLayers,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetDocumentInfoCompletedEventHandler(object sender, GetDocumentInfoCompletedEventArgs e);
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDocumentInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        
        private object[] results;
        
        internal GetDocumentInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState)
        {
            this.results = results;
        }
        
        /// <remarks/>
        public PropertySet Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((PropertySet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetTileImageInfoCompletedEventHandler(object sender, GetTileImageInfoCompletedEventArgs e);
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTileImageInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        
        private object[] results;
        
        internal GetTileImageInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState)
        {
            this.results = results;
        }
        
        /// <remarks/>
        public TileImageInfo Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((TileImageInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void QueryFeatureData2CompletedEventHandler(object sender, QueryFeatureData2CompletedEventArgs e);
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryFeatureData2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        
        private object[] results;
        
        internal QueryFeatureData2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState)
        {
            this.results = results;
        }
        
        /// <remarks/>
        public QueryResult Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((QueryResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void QueryAttachmentInfosCompletedEventHandler(object sender, QueryAttachmentInfosCompletedEventArgs e);
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryAttachmentInfosCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        
        private object[] results;
        
        internal QueryAttachmentInfosCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState)
        {
            this.results = results;
        }
        
        /// <remarks/>
        public AttachmentInfo[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((AttachmentInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetCacheControlInfoCompletedEventHandler(object sender, GetCacheControlInfoCompletedEventArgs e);
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCacheControlInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        
        private object[] results;
        
        internal GetCacheControlInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState)
        {
            this.results = results;
        }
        
        /// <remarks/>
        public CacheControlInfo Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((CacheControlInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetDefaultLayerDrawingDescriptionsCompletedEventHandler(object sender, GetDefaultLayerDrawingDescriptionsCompletedEventArgs e);
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDefaultLayerDrawingDescriptionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        
        private object[] results;
        
        internal GetDefaultLayerDrawingDescriptionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState)
        {
            this.results = results;
        }
        
        /// <remarks/>
        public LayerDrawingDescription[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((LayerDrawingDescription[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void QueryAttachmentDataCompletedEventHandler(object sender, QueryAttachmentDataCompletedEventArgs e);
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryAttachmentDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        
        private object[] results;
        
        internal QueryAttachmentDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState)
        {
            this.results = results;
        }
        
        /// <remarks/>
        public AttachmentData[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((AttachmentData[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetSQLSyntaxInfoCompletedEventHandler(object sender, GetSQLSyntaxInfoCompletedEventArgs e);
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSQLSyntaxInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        
        private object[] results;
        
        internal GetSQLSyntaxInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState)
        {
            this.results = results;
        }
        
        /// <remarks/>
        public SQLSyntaxInfo Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((SQLSyntaxInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void ExportScaleBarCompletedEventHandler(object sender, ExportScaleBarCompletedEventArgs e);
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExportScaleBarCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        
        private object[] results;
        
        internal ExportScaleBarCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState)
        {
            this.results = results;
        }
        
        /// <remarks/>
        public ImageResult Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((ImageResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetVirtualCacheDirectoryCompletedEventHandler(object sender, GetVirtualCacheDirectoryCompletedEventArgs e);
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVirtualCacheDirectoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        
        private object[] results;
        
        internal GetVirtualCacheDirectoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState)
        {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void QueryRowCountCompletedEventHandler(object sender, QueryRowCountCompletedEventArgs e);
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryRowCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        
        private object[] results;
        
        internal QueryRowCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState)
        {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetSupportedImageReturnTypesCompletedEventHandler(object sender, GetSupportedImageReturnTypesCompletedEventArgs e);
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSupportedImageReturnTypesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        
        private object[] results;
        
        internal GetSupportedImageReturnTypesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState)
        {
            this.results = results;
        }
        
        /// <remarks/>
        public esriImageReturnType Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((esriImageReturnType)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void QueryFeatureIDsCompletedEventHandler(object sender, QueryFeatureIDsCompletedEventArgs e);
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryFeatureIDsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        
        private object[] results;
        
        internal QueryFeatureIDsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState)
        {
            this.results = results;
        }
        
        /// <remarks/>
        public FIDSet Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((FIDSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void QueryDataCompletedEventHandler(object sender, QueryDataCompletedEventArgs e);
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        
        private object[] results;
        
        internal QueryDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState)
        {
            this.results = results;
        }
        
        /// <remarks/>
        public QueryResult Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((QueryResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void QueryHTMLPopupsCompletedEventHandler(object sender, QueryHTMLPopupsCompletedEventArgs e);
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryHTMLPopupsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        
        private object[] results;
        
        internal QueryHTMLPopupsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState)
        {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetCacheStorageInfoCompletedEventHandler(object sender, GetCacheStorageInfoCompletedEventArgs e);
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCacheStorageInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        
        private object[] results;
        
        internal GetCacheStorageInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState)
        {
            this.results = results;
        }
        
        /// <remarks/>
        public CacheStorageInfo Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((CacheStorageInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void ToMapPointsCompletedEventHandler(object sender, ToMapPointsCompletedEventArgs e);
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ToMapPointsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        
        private object[] results;
        
        internal ToMapPointsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState)
        {
            this.results = results;
        }
        
        /// <remarks/>
        public Multipoint Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((Multipoint)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetMapNameCompletedEventHandler(object sender, GetMapNameCompletedEventArgs e);
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMapNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        
        private object[] results;
        
        internal GetMapNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState)
        {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetTileCacheInfoCompletedEventHandler(object sender, GetTileCacheInfoCompletedEventArgs e);
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTileCacheInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        
        private object[] results;
        
        internal GetTileCacheInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState)
        {
            this.results = results;
        }
        
        /// <remarks/>
        public TileCacheInfo Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((TileCacheInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void QueryRelatedRecordsCompletedEventHandler(object sender, QueryRelatedRecordsCompletedEventArgs e);
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryRelatedRecordsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        
        private object[] results;
        
        internal QueryRelatedRecordsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState)
        {
            this.results = results;
        }
        
        /// <remarks/>
        public QueryResult Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((QueryResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void QueryFeatureDataCompletedEventHandler(object sender, QueryFeatureDataCompletedEventArgs e);
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryFeatureDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        
        private object[] results;
        
        internal QueryFeatureDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState)
        {
            this.results = results;
        }
        
        /// <remarks/>
        public RecordSet Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((RecordSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void QueryHyperlinksCompletedEventHandler(object sender, QueryHyperlinksCompletedEventArgs e);
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryHyperlinksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        
        private object[] results;
        
        internal QueryHyperlinksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState)
        {
            this.results = results;
        }
        
        /// <remarks/>
        public MapServerHyperlink[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((MapServerHyperlink[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void HasLayerCacheCompletedEventHandler(object sender, HasLayerCacheCompletedEventArgs e);
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HasLayerCacheCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        
        private object[] results;
        
        internal HasLayerCacheCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState)
        {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void QueryFeatureIDs2CompletedEventHandler(object sender, QueryFeatureIDs2CompletedEventArgs e);
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryFeatureIDs2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        
        private object[] results;
        
        internal QueryFeatureIDs2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState)
        {
            this.results = results;
        }
        
        /// <remarks/>
        public FIDSet Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((FIDSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetLayerTileCompletedEventHandler(object sender, GetLayerTileCompletedEventArgs e);
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLayerTileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        
        private object[] results;
        
        internal GetLayerTileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState)
        {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetServiceConfigurationInfoCompletedEventHandler(object sender, GetServiceConfigurationInfoCompletedEventArgs e);
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetServiceConfigurationInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        
        private object[] results;
        
        internal GetServiceConfigurationInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState)
        {
            this.results = results;
        }
        
        /// <remarks/>
        public PropertySet Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((PropertySet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void QueryFeatureCount2CompletedEventHandler(object sender, QueryFeatureCount2CompletedEventArgs e);
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryFeatureCount2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        
        private object[] results;
        
        internal QueryFeatureCount2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState)
        {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetCacheDescriptionInfoCompletedEventHandler(object sender, GetCacheDescriptionInfoCompletedEventArgs e);
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCacheDescriptionInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        
        private object[] results;
        
        internal GetCacheDescriptionInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState)
        {
            this.results = results;
        }
        
        /// <remarks/>
        public CacheDescriptionInfo Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((CacheDescriptionInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void IdentifyCompletedEventHandler(object sender, IdentifyCompletedEventArgs e);
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IdentifyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        
        private object[] results;
        
        internal IdentifyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState)
        {
            this.results = results;
        }
        
        /// <remarks/>
        public MapServerIdentifyResult[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((MapServerIdentifyResult[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void ComputeDistanceCompletedEventHandler(object sender, ComputeDistanceCompletedEventArgs e);
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ComputeDistanceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        
        private object[] results;
        
        internal ComputeDistanceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState)
        {
            this.results = results;
        }
        
        /// <remarks/>
        public double Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetDefaultMapNameCompletedEventHandler(object sender, GetDefaultMapNameCompletedEventArgs e);
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDefaultMapNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        
        private object[] results;
        
        internal GetDefaultMapNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState)
        {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void IsFixedScaleMapCompletedEventHandler(object sender, IsFixedScaleMapCompletedEventArgs e);
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsFixedScaleMapCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        
        private object[] results;
        
        internal IsFixedScaleMapCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState)
        {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetLegendInfoCompletedEventHandler(object sender, GetLegendInfoCompletedEventArgs e);
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLegendInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        
        private object[] results;
        
        internal GetLegendInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState)
        {
            this.results = results;
        }
        
        /// <remarks/>
        public MapServerLegendInfo[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((MapServerLegendInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetMapCountCompletedEventHandler(object sender, GetMapCountCompletedEventArgs e);
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMapCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        
        private object[] results;
        
        internal GetMapCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState)
        {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void HasSingleFusedMapCacheCompletedEventHandler(object sender, HasSingleFusedMapCacheCompletedEventArgs e);
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HasSingleFusedMapCacheCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        
        private object[] results;
        
        internal HasSingleFusedMapCacheCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState)
        {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetMapTileCompletedEventHandler(object sender, GetMapTileCompletedEventArgs e);
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMapTileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        
        private object[] results;
        
        internal GetMapTileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState)
        {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetServerInfoCompletedEventHandler(object sender, GetServerInfoCompletedEventArgs e);
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetServerInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        
        private object[] results;
        
        internal GetServerInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState)
        {
            this.results = results;
        }
        
        /// <remarks/>
        public MapServerInfo Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((MapServerInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetMapTableSubtypeInfosCompletedEventHandler(object sender, GetMapTableSubtypeInfosCompletedEventArgs e);
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMapTableSubtypeInfosCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        
        private object[] results;
        
        internal GetMapTableSubtypeInfosCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState)
        {
            this.results = results;
        }
        
        /// <remarks/>
        public MapTableSubtypeInfo[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((MapTableSubtypeInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void QueryFeatureCountCompletedEventHandler(object sender, QueryFeatureCountCompletedEventArgs e);
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryFeatureCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        
        private object[] results;
        
        internal QueryFeatureCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState)
        {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void QueryRasterValueCompletedEventHandler(object sender, QueryRasterValueCompletedEventArgs e);
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryRasterValueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        
        private object[] results;
        
        internal QueryRasterValueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState)
        {
            this.results = results;
        }
        
        /// <remarks/>
        public ImageResult[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((ImageResult[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void FromMapPointsCompletedEventHandler(object sender, FromMapPointsCompletedEventArgs e);
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FromMapPointsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        
        private object[] results;
        
        internal FromMapPointsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState)
        {
            this.results = results;
        }
        
        /// <remarks/>
        public int[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int[] ScreenYValues
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int[])(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void QueryRowIDsCompletedEventHandler(object sender, QueryRowIDsCompletedEventArgs e);
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryRowIDsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        
        private object[] results;
        
        internal QueryRowIDsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState)
        {
            this.results = results;
        }
        
        /// <remarks/>
        public int[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetCacheNameCompletedEventHandler(object sender, GetCacheNameCompletedEventArgs e);
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCacheNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        
        private object[] results;
        
        internal GetCacheNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState)
        {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void ComputeScaleCompletedEventHandler(object sender, ComputeScaleCompletedEventArgs e);
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ComputeScaleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        
        private object[] results;
        
        internal ComputeScaleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState)
        {
            this.results = results;
        }
        
        /// <remarks/>
        public double Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void FindCompletedEventHandler(object sender, FindCompletedEventArgs e);
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FindCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        
        private object[] results;
        
        internal FindCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState)
        {
            this.results = results;
        }
        
        /// <remarks/>
        public MapServerFindResult[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((MapServerFindResult[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void ExportMapImageCompletedEventHandler(object sender, ExportMapImageCompletedEventArgs e);
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExportMapImageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        
        private object[] results;
        
        internal ExportMapImageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState)
        {
            this.results = results;
        }
        
        /// <remarks/>
        public MapImage Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((MapImage)(this.results[0]));
            }
        }
    }
}
